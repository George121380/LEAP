From agent.py
Reset goals: The sub-goals are: 
['1. Find rice and eggs needed for the recipe.', '2. Cook the rice and scramble the eggs.', '3. Fry the rice with the scrambled eggs until fully cooked.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
behavior find_ingredients(rice:item, eggs:item):
    body:
        assert is_food_rice(rice)
        # Ensure that the object is rice

        assert is_food_egg(eggs)
        # Ensure that the object is eggs

behavior __goal__():
    body:
        if exists rice: item : is_food_rice(rice): 
            bind rice: item where:
                is_food_rice(rice)
            # Find and bind rice

        if exists eggs: item : is_food_egg(eggs):
            bind eggs: item where:
                is_food_egg(eggs)
            # Find and bind eggs

        find_ingredients(rice, eggs)
        # Execute behavior to ensure the presence and identification of rice and eggs
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: rice; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#goal_representation
behavior find_ingredients(rice:item, eggs:item):
    body:
        assert is_food_rice(rice)
        # Ensure that the object is rice

        assert is_food_egg(eggs)
        # Ensure that the object is eggs

behavior __goal__():
    body:
        if exists rice: item : is_food_rice(rice): 
            bind rice: item where:
                is_food_rice(rice)
            # Find and bind rice

        if exists eggs: item : is_food_egg(eggs):
            bind eggs: item where:
                is_food_egg(eggs)
            # Find and bind eggs

        find_ingredients(rice, eggs)
        # Execute behavior to ensure the presence and identification of rice and eggs
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: rice; available variables: [].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#goal_representation
 
behavior find_ingredients(rice:item, eggs:item):
    body:
        assert is_food_rice(rice)
        # Ensure that the object is rice

        assert is_food_egg(eggs)
        # Ensure that the object is eggs

behavior __goal__():
    body:
        bind rice: item where:
            is_food_rice(rice)
        # Find and bind rice

        bind eggs: item where:
            is_food_egg(eggs)
        # Find and bind eggs

        find_ingredients(rice, eggs)
        # Execute behavior to ensure the presence and identification of rice and eggs

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
behavior locate_rice_and_eggs():
    body:
        foreach item: item:
            if is_food_rice(item) or is_food_egg(item):
                observe(item, "Identify the rice or egg for the recipe")

behavior __goal__():
    body:
        if not exists item: item : (is_food_rice(item) or is_food_egg(item)):
            # If rice and eggs are not yet located, identify them
            locate_rice_and_eggs()
#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'item') at line 5888, column 23.
Expected one of: 
	* COLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#goal_representation
behavior locate_rice_and_eggs():
    body:
        foreach item: item:
            if is_food_rice(item) or is_food_egg(item):
                observe(item, "Identify the rice or egg for the recipe")

behavior __goal__():
    body:
        if not exists item: item : (is_food_rice(item) or is_food_egg(item)):
            # If rice and eggs are not yet located, identify them
            locate_rice_and_eggs()
#goal_representation_end

##############################
Inner TransformationError Debug
Unexpected token Token('VARNAME', 'item') at line 5888, column 23.
Expected one of: 
	* COLON

##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#goal_representation
behavior locate_rice_and_eggs():
    body:
        foreach item: item:
            if is_food_rice(item) or is_food_egg(item):
                observe(item, "Identify the rice or egg for the recipe")

behavior __goal__():
    body:
        if not exists item: item: (is_food_rice(item) or is_food_egg(item)):
            # If rice and eggs are not yet located, identify them
            locate_rice_and_eggs()
#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "1. find rice and eggs needed for the recipe." ?
Answer: Your current plan for finding rice and eggs does not align with my thoughts. Please reevaluate your plan using methods to locate ingredients in the kitchen or pantry.
Re-decompose: True

##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Locate the rice and eggs in the kitchen or pantry.', '2. Fry the rice with the eggs.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
def has_rice_or_egg_in_kitchen_or_pantry(location:item):
    # Function to check if there is rice or eggs in a specified kitchen or pantry
    symbol has_rice_or_egg=exists o: item : (is_food_rice(o) or is_food_egg(o)) and inside(o, location)
    return has_rice_or_egg

behavior __goal__():
    body:
        if exists location: item : (is_kitchen(location) or is_pantry(location)) and has_rice_or_egg_in_kitchen_or_pantry(location):
            # Check if there is rice or eggs in a kitchen or pantry based on the available information
            bind location: item where:
                (is_kitchen(location) or is_pantry(location)) and has_rice_or_egg_in_kitchen_or_pantry(location)
            # Select the location with rice or eggs
            achieve close_char(char, location)
            # Move the character closer to the location with rice or eggs

        else:
            # If no location with rice or eggs is found, initiate exploration to locate them
            foreach location: item:
                if (is_kitchen(location) or is_pantry(location)) and not visited(location):
                    # Check all unvisited locations categorized as kitchen or pantry
                    observe(location, "Check if there are rice or eggs")
                    # Observe whether each location has rice or eggs
 
#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(dining_room_1)obs(dining_room_1, Check if there are rice or eggs)
##############################
From agent.py
walk_executor(dining_room_1)
Robot is inside dining_room_1. Robot is no longer inside home_office_161.
##############################
From agent.py
obs(dining_room_1, Check if there are rice or eggs)
Get this information:  wall_10 is inside dining_room_1. cup_2088 is inside dining_room_1. cup_2089 is inside dining_room_1. window_40 is inside dining_room_1. ceiling_29 is inside dining_room_1. wall_2 is inside dining_room_1. coffe_maker_147 is inside dining_room_1. bookshelf_136 is inside dining_room_1. bowl_2097 is inside dining_room_1. remote_control_2081 is inside dining_room_1. floor_21 is inside dining_room_1. food_chicken_2050 is inside dining_room_1. kitchen_counter_128 is inside dining_room_1. orchid_117 is inside dining_room_1. cutting_board_2080 is inside dining_room_1. food_steak_2042 is inside dining_room_1. food_egg_2053 is inside dining_room_1. ceiling_32 is inside dining_room_1. laptop_2015 is inside dining_room_1. curtain_120 is inside dining_room_1. wall_5 is inside dining_room_1. juice_2034 is inside dining_room_1. dry_pasta_2073 is inside dining_room_1. floor_24 is inside dining_room_1. ceiling_35 is inside dining_room_1. floor_13 is inside dining_room_1. cupboard_131 is inside dining_room_1. book_2092 is inside dining_room_1. fork_2103 is inside dining_room_1. pot_54 is inside dining_room_1. floor_16 is inside dining_room_1. food_banana_2045 is inside dining_room_1. food_butter_2018 is inside dining_room_1. table_123 is inside dining_room_1. food_cereal_2048 is inside dining_room_1. food_onion_2026 is inside dining_room_1. tray_142 is inside dining_room_1. ceiling_27 is inside dining_room_1. plate_2105 is inside dining_room_1. mat_115 is inside dining_room_1. food_rice_2067 is inside dining_room_1. bowl_2095 is inside dining_room_1. spectacles_2106 is inside dining_room_1. walllamp_46 is inside dining_room_1. after_shave_2029 is inside dining_room_1. faucet_134 is inside dining_room_1. food_hamburger_2057 is inside dining_room_1. food_salt_2068 is inside dining_room_1. ceiling_30 is inside dining_room_1. wall_8 is inside dining_room_1. bench_126 is inside dining_room_1. cup_2087 is inside dining_room_1. cleaning_solution_2098 is inside dining_room_1. light_49 is inside dining_room_1. door_38 is inside dining_room_1. wall_11 is inside dining_room_1. doorjamb_39 is inside dining_room_1. drawing_118 is inside dining_room_1. food_jam_2059 is inside dining_room_1. food_sugar_2070 is inside dining_room_1. food_apple_2043 is inside dining_room_1. dough_2021 is inside dining_room_1. bookshelf_137 is inside dining_room_1. blender_2032 is inside dining_room_1. floor_22 is inside dining_room_1. food_dessert_2051 is inside dining_room_1. food_noodles_2062 is inside dining_room_1. stove_2090 is inside dining_room_1. knifeblock_52 is inside dining_room_1. ceilinglamp_41 is inside dining_room_1. food_donut_2052 is inside dining_room_1. stovefan_139 is inside dining_room_1. wall_3 is inside dining_room_1. floor_14 is inside dining_room_1. window_2109 is inside dining_room_1. food_turkey_2071 is inside dining_room_1. pot_2093 is inside dining_room_1. ceiling_33 is inside dining_room_1. walllamp_44 is inside dining_room_1. fridge_140 is inside dining_room_1. kitchen_counter_129 is inside dining_room_1. doorjamb_37 is between dining_room_1. sauce_2101 is inside dining_room_1. photoframe_102 is inside dining_room_1. ceiling_25 is inside dining_room_1. food_fish_2054 is inside dining_room_1. food_pizza_2065 is inside dining_room_1. console_2027 is inside dining_room_1. curtain_121 is inside dining_room_1. kitchen_counter_132 is inside dining_room_1. wall_6 is inside dining_room_1. cd_player_2084 is inside dining_room_1. character_219 is inside dining_room_1. food_cake_2046 is inside dining_room_1. dvd_player_2085 is inside dining_room_1. ceiling_36 is inside dining_room_1. phone_47 is inside dining_room_1. dining_room_1 is close to window_2109. food_orange_2008 is inside dining_room_1. food_carrot_2047 is inside dining_room_1. dishwasher_143 is inside dining_room_1. fork_2104 is inside dining_room_1. food_potato_2066 is inside dining_room_1. ceiling_28 is inside dining_room_1. floor_17 is inside dining_room_1. tvstand_135 is inside dining_room_1. bench_124 is inside dining_room_1. bowl_2096 is inside dining_room_1. fryingpan_2107 is inside dining_room_1. wall_9 is inside dining_room_1. food_cheese_2049 is inside dining_room_1. food_kiwi_2060 is inside dining_room_1. powersocket_48 is inside dining_room_1. homework_2011 is inside dining_room_1. table_127 is inside dining_room_1. crayon_2030 is inside dining_room_1. food_snack_2069 is inside dining_room_1. floor_20 is inside dining_room_1. ceiling_31 is inside dining_room_1. mouse_2003 is inside dining_room_1. floor_19 is inside dining_room_1. food_lemon_2061 is inside dining_room_1. food_vegetable_2072 is inside dining_room_1. floor_23 is inside dining_room_1. floor_12 is inside dining_room_1. napkin_2014 is inside dining_room_1. curtain_119 is inside dining_room_1. book_2091 is inside dining_room_1. ceilinglamp_42 is inside dining_room_1. wall_4 is inside dining_room_1. food_bacon_2044 is inside dining_room_1. microwave_149 is inside dining_room_1. chair_138 is inside dining_room_1. ceilinglamp_43 is inside dining_room_1. food_oatmeal_2063 is inside dining_room_1. milk_2074 is inside dining_room_1. oil_2102 is inside dining_room_1. knife_2036 is inside dining_room_1. cupboard_130 is inside dining_room_1. food_peanut_butter_2064 is inside dining_room_1. ceiling_26 is inside dining_room_1. floor_15 is inside dining_room_1. bench_122 is inside dining_room_1. food_food_2055 is inside dining_room_1. walllamp_45 is inside dining_room_1. ceiling_34 is inside dining_room_1. tea_bag_2017 is inside dining_room_1. food_fruit_2056 is inside dining_room_1. wall_7 is inside dining_room_1. oven_141 is inside dining_room_1. floor_18 is inside dining_room_1. door_38 is between dining_room_1. mat_114 is inside dining_room_1. doorjamb_37 is inside dining_room_1. toaster_144 is inside dining_room_1. sink_133 is inside dining_room_1. shoes_2001 is inside dining_room_1. food_ice_cream_2058 is inside dining_room_1. bench_125 is inside dining_room_1. dining_room_1 is CLEAN.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2107_around_stove_2090(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind stove_instance:item where:
            is_stove(stove_instance) and id[stove_instance]==2090
        achieve close_char(char,stove_instance)
        if can_open(stove_instance):
            achieve_once open(stove_instance)
            exp(fryingpan,stove_instance)
        else:
            exp(fryingpan,stove_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,stove_instance]=True
        close[stove_instance,fryingpan]=True
    

behavior find_food_rice_2067_around_cupboard_131(food_rice:item):
    goal: not unknown(food_rice)
    body:
        assert is_food_rice(food_rice)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==131
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(food_rice,cupboard_instance)
        else:
            exp(food_rice,cupboard_instance)
    eff:
        unknown[food_rice]=False
        close[food_rice,cupboard_instance]=True
        close[cupboard_instance,food_rice]=True
    

behavior find_food_egg_2053_around_fridge_140(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
behavior fry_rice_with_egg(rice: item, egg: item, fryingpan: item):
    body:
        achieve inside(rice, fryingpan)
        # Ensure the rice is placed inside the fryingpan
        
        achieve inside(egg, fryingpan)
        # Ensure the egg is placed inside the fryingpan

        achieve close_char(char, fryingpan)
        # Ensure you are close to the fryingpan

behavior __goal__():
    body:
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the fryingpan instance

        bind rice: item where:
            is_food_rice(rice)
        # Select the rice instance

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg instance

        fry_rice_with_egg(rice, egg, fryingpan)
        # Execute the behavior to fry the rice with egg in the fryingpan
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior fry_rice_with_egg(rice: item, egg: item, fryingpan: item):
    body:
        achieve inside(rice, fryingpan)
        # Ensure the rice is placed inside the fryingpan
        
        achieve inside(egg, fryingpan)
        # Ensure the egg is placed inside the fryingpan

        achieve close_char(char, fryingpan)
        # Ensure you are close to the fryingpan

behavior __goal__():
    body:
        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the fryingpan instance

        bind rice: item where:
            is_food_rice(rice)
        # Select the rice instance

        bind egg: item where:
            is_food_egg(egg)
        # Select the egg instance

        fry_rice_with_egg(rice, egg, fryingpan)
        # Execute the behavior to fry the rice with egg in the fryingpan
##############################
From agent.py-> find a plan in act()
walk_executor(stove_2090)open_executor(stove_2090)exp(fryingpan_2107, stove_2090)walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_rice_2067, cupboard_131)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(stove_2090)
Find pot_54. Find pot_2093. Find tray_142. Find oil_2102. Find fryingpan_2107. Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close stove_2090. 
##############################
From agent.py
open_executor(stove_2090)
Robot is inside dining_room_1. Robot is close kitchen_counter_129. Robot is close stove_2090. 
##############################
From agent.py
exp(fryingpan_2107, stove_2090)
Find fryingpan_2107. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(food_rice_2067, cupboard_131)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer close kitchen_counter_129.Robot is no longer close stove_2090.
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From agent.py
exp(food_rice_2067, cupboard_131)
Fail to find food_rice_2067 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(food_rice_2067, cupboard_130)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(cupboard_130)
Find blender_2032. Find tea_bag_2017. Robot is inside dining_room_1. Robot is close blender_2032. Robot is close tea_bag_2017. Robot is close cupboard_130. Robot is no longer close cupboard_131.
##############################
From agent.py
exp(food_rice_2067, cupboard_130)
Fail to find food_rice_2067 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(wallshelf_191)exp(food_rice_2067, wallshelf_191)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(wallshelf_191)
Robot is inside home_office_161. Robot is close wallshelf_191. Robot is no longer inside dining_room_1.Robot is no longer close blender_2032.Robot is no longer close tea_bag_2017.Robot is no longer close cupboard_130.
##############################
From agent.py
exp(food_rice_2067, wallshelf_191)
Fail to find food_rice_2067 around wallshelf_191. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_127)exp(food_rice_2067, table_127)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(table_127)
Find mat_115. Find plate_2105. Find bowl_2097. Find drawing_118. Find console_2027. Find fork_2104. Find bowl_2096. Find crayon_2030. Find napkin_2014. Robot is inside dining_room_1. Robot is close mat_115. Robot is close floor_20. Robot is close table_127. Robot is no longer inside home_office_161.Robot is no longer close wallshelf_191.
##############################
From agent.py
exp(food_rice_2067, table_127)
Fail to find food_rice_2067 around table_127. 
##############################
From agent.py-> find a plan in act()
walk_executor(window_346)open_executor(window_346)exp(food_rice_2067, window_346)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(window_346)
Find drawing_389. Find drawing_388. Find pillow_368. Find mat_386. Find pillow_370. Robot is inside bedroom_327. Robot is close window_346. Robot is no longer inside dining_room_1.Robot is no longer close mat_115.Robot is no longer close floor_20.Robot is no longer close table_127.
##############################
From agent.py
open_executor(window_346)
Robot is inside bedroom_327. Robot is close window_346. 
##############################
From agent.py
exp(food_rice_2067, window_346)
Fail to find food_rice_2067 around window_346. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(food_rice_2067, fridge_140)walk_executor(food_rice_2067)grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(fridge_140)exp(food_egg_2053, fridge_140)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
walk_executor(fridge_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer inside bedroom_327.Robot is no longer close window_346.
##############################
From agent.py
switchoff_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
exp(food_rice_2067, fridge_140)
Find food_rice_2067. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_rice_2067)walk_executor(fryingpan_2107)putin_executor(food_rice_2067, fryingpan_2107)walk_executor(food_egg_2053)grab_executor(food_egg_2053)walk_executor(fryingpan_2107)putin_executor(food_egg_2053, fryingpan_2107)
##############################
From agent.py
grab_executor(food_rice_2067)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Grabbing food_rice_2067 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
putin_executor(food_rice_2067, fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_rice_2067. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. food_rice_2067 released by right hand. 
##############################
From agent.py
walk_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_egg_2053. Robot is no longer close fryingpan_2107.Robot is no longer close kitchen_counter_129.Robot is no longer close food_rice_2067.
##############################
From agent.py
grab_executor(food_egg_2053)
Robot is inside dining_room_1. Robot is close fridge_140. Robot is close food_egg_2053. Grabbing food_egg_2053 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. Robot is no longer close fridge_140.
##############################
From agent.py
putin_executor(food_egg_2053, fryingpan_2107)
Robot is inside dining_room_1. Robot is close food_egg_2053. Robot is close kitchen_counter_129. Robot is close fryingpan_2107. food_egg_2053 released by right hand. 
##############################
