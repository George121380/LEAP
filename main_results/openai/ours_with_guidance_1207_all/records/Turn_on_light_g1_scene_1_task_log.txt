From agent.py
Reset goals: The sub-goals are: 
['Turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_shampoo_2019_around_bathroom_cabinet_17(shampoo:item):
    goal: not unknown(shampoo)
    body:
        assert is_shampoo(shampoo)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(shampoo,bathroom_cabinet_instance)
        else:
            exp(shampoo,bathroom_cabinet_instance)
    eff:
        unknown[shampoo]=False
        close[shampoo,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,shampoo]=True
    

behavior find_soap_2126_around_bathroom_cabinet_17(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(soap,bathroom_cabinet_instance)
        else:
            exp(soap,bathroom_cabinet_instance)
    eff:
        unknown[soap]=False
        close[soap,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,soap]=True
    

behavior find_toilet_paper_2076_around_bathroom_cabinet_17(toilet_paper:item):
    goal: not unknown(toilet_paper)
    body:
        assert is_toilet_paper(toilet_paper)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==17
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(toilet_paper,bathroom_cabinet_instance)
        else:
            exp(toilet_paper,bathroom_cabinet_instance)
    eff:
        unknown[toilet_paper]=False
        close[toilet_paper,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,toilet_paper]=True
    

#exp_behavior_end

#goal_representation
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom

        bind light_bathroom: item where:
            is_light(light_bathroom) and inside(light_bathroom, bathroom)
        # Select the light inside the bathroom

        achieve is_on(light_bathroom)
        # Ensure the light in the bathroom is turned on
#goal_representation_end

##############################
From agent.py->reset_goal
behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select the bathroom

        bind light_bathroom: item where:
            is_light(light_bathroom) and inside(light_bathroom, bathroom)
        # Select the light inside the bathroom

        achieve is_on(light_bathroom)
        # Ensure the light in the bathroom is turned on
##############################
From agent.py-> find a plan in act()
walk_executor(light_39)switchon_executor(light_39)
##############################
From agent.py
walk_executor(light_39)
Robot is inside bathroom_1. Robot is close light_39. Robot is no longer inside dining_room_41.
##############################
From agent.py
switchon_executor(light_39)
Find pillow_108. Find drawing_111. Robot is inside bathroom_1. Robot is close light_39. 
##############################
