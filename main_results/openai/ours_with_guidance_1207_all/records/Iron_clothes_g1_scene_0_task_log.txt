From agent.py
Reset goals: The sub-goals are: 
['1. Wash the shirt using a washing machine or by hand.', '2. Iron the shirt until it is wrinkle-free.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_closetdrawer_116(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==116
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

behavior find_detergent_2084_around_washing_machine_2007(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(detergent,washing_machine_instance)
        else:
            exp(detergent,washing_machine_instance)
    eff:
        unknown[detergent]=False
        close[detergent,washing_machine_instance]=True
        close[washing_machine_instance,detergent]=True
    

behavior find_basket_for_clothes_2006_around_closetdrawer_116(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==116
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(basket_for_clothes,closetdrawer_instance)
        else:
            exp(basket_for_clothes,closetdrawer_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,closetdrawer_instance]=True
        close[closetdrawer_instance,basket_for_clothes]=True
    

#exp_behavior_end

#goal_representation
behavior wash_shirt_using_machine(shirt:item, washing_machine:item):
    body:
        achieve inside(shirt, washing_machine)
        # Place the shirt inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine door is closed
        achieve is_on(washing_machine)
        # Turn on the washing machine to start washing the shirt

behavior wash_shirt_by_hand(shirt:item, sink:item):
    body:
        achieve_once inside(shirt, sink)
        # Ensure the shirt is placed inside the sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        achieve_once is_on(faucet)
        # Turn on the faucet to provide water for washing

        wash(shirt)
        # Wash the shirt by hand

        achieve_once is_off(faucet)
        # Turn off the faucet after washing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt instance

        if exists washing_machine: item : is_washing_machine(washing_machine):
            bind washing_machine: item where:
                is_washing_machine(washing_machine)
            # Select the washing machine instance
            wash_shirt_using_machine(shirt, washing_machine)
            start_washing_machine(washing_machine)
        else:
            bind sink: item where:
                is_sink(sink)
            # Select a sink as a fallback option for hand washing
            wash_shirt_by_hand(shirt, sink)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior wash_shirt_using_machine(shirt:item, washing_machine:item):
    body:
        achieve inside(shirt, washing_machine)
        # Place the shirt inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine door is closed
        achieve is_on(washing_machine)
        # Turn on the washing machine to start washing the shirt

behavior wash_shirt_by_hand(shirt:item, sink:item):
    body:
        achieve_once inside(shirt, sink)
        # Ensure the shirt is placed inside the sink

        bind faucet: item where:
            is_faucet(faucet) and close(faucet, sink)
        achieve_once is_on(faucet)
        # Turn on the faucet to provide water for washing

        wash(shirt)
        # Wash the shirt by hand

        achieve_once is_off(faucet)
        # Turn off the faucet after washing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt instance

        if exists washing_machine: item : is_washing_machine(washing_machine):
            bind washing_machine: item where:
                is_washing_machine(washing_machine)
            # Select the washing machine instance
            wash_shirt_using_machine(shirt, washing_machine)
            start_washing_machine(washing_machine)
        else:
            bind sink: item where:
                is_sink(sink)
            # Select a sink as a fallback option for hand washing
            wash_shirt_by_hand(shirt, sink)
##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_116)exp(clothes_shirt_2086, closetdrawer_116)walk_executor(washing_machine_2007)open_executor(washing_machine_2007)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(washing_machine_2007)putin_executor(clothes_shirt_2086, washing_machine_2007)close_executor(washing_machine_2007)plugin_executor(washing_machine_2007)switchon_executor(washing_machine_2007)
##############################
From agent.py
walk_executor(closetdrawer_116)
Find hanger_110. Find hanger_140. Find hanger_109. Find hanger_132. Find hanger_113. Find hanger_112. Find hanger_124. Find hanger_115. Find hanger_130. Find hanger_134. Find hanger_136. Find hanger_138. Find hanger_111. Find hanger_114. Find hanger_126. Find hanger_128. Find hanger_141. Find hanger_142. Robot is inside bedroom_67. Robot is close closetdrawer_116. Robot is close dresser_108. Robot is close closetdrawer_119. Robot is no longer inside bathroom_1.
##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_116)
Fail to find clothes_shirt_2086 around closetdrawer_116. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_141)exp(clothes_shirt_2086, hanger_141)walk_executor(washing_machine_2007)open_executor(washing_machine_2007)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(washing_machine_2007)putin_executor(clothes_shirt_2086, washing_machine_2007)close_executor(washing_machine_2007)plugin_executor(washing_machine_2007)switchon_executor(washing_machine_2007)
##############################
From agent.py
walk_executor(hanger_141)
Robot is inside bedroom_67. Robot is close dresser_123. Robot is close hanger_141. Robot is no longer close closetdrawer_116.Robot is no longer close dresser_108.Robot is no longer close closetdrawer_119.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_141)
Fail to find clothes_shirt_2086 around hanger_141. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Identify the shirt that needs to be cleaned.', '2. Wash the shirt.', '3. Iron the cleaned shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_scarf_2048_around_hanger_114(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==114
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_scarf,hanger_instance)
        else:
            exp(clothes_scarf,hanger_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,hanger_instance]=True
        close[hanger_instance,clothes_scarf]=True
    

behavior find_clothes_shirt_2086_around_washing_machine_2007(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_shirt,washing_machine_instance)
        else:
            exp(clothes_shirt,washing_machine_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,washing_machine_instance]=True
        close[washing_machine_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
def find_shirt(shirt:item):
    observe(shirt, "Identify if this is clothes_shirt_2086")

behavior __goal__():
    body:
        if exists shirt: item : is_clothes_shirt(shirt):
            # If a shirt is already identified based on available information
            bind shirt: item where:
                is_clothes_shirt(shirt)
            achieve visited(shirt)
            # Mark the shirt as visited

        else:
            # If no shirt is identified, initiate search
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    find_shirt(shirt)
 
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Behavior body statements are not allowed in the current mode: SymbolicExecutionMode.DERIVED
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_clothes_scarf_2048_around_hanger_114(clothes_scarf:item):
    goal: not unknown(clothes_scarf)
    body:
        assert is_clothes_scarf(clothes_scarf)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==114
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_scarf,hanger_instance)
        else:
            exp(clothes_scarf,hanger_instance)
    eff:
        unknown[clothes_scarf]=False
        close[clothes_scarf,hanger_instance]=True
        close[hanger_instance,clothes_scarf]=True
    

behavior find_clothes_socks_2087_around_washing_machine_2007(clothes_socks:item):
    goal: not unknown(clothes_socks)
    body:
        assert is_clothes_socks(clothes_socks)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_socks,washing_machine_instance)
        else:
            exp(clothes_socks,washing_machine_instance)
    eff:
        unknown[clothes_socks]=False
        close[clothes_socks,washing_machine_instance]=True
        close[washing_machine_instance,clothes_socks]=True
    

behavior find_clothes_hat_2045_around_hanger_124(clothes_hat:item):
    goal: not unknown(clothes_hat)
    body:
        assert is_clothes_hat(clothes_hat)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==124
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_hat,hanger_instance)
        else:
            exp(clothes_hat,hanger_instance)
    eff:
        unknown[clothes_hat]=False
        close[clothes_hat,hanger_instance]=True
        close[hanger_instance,clothes_hat]=True
    

behavior find_clothes_jacket_2047_around_hanger_124(clothes_jacket:item):
    goal: not unknown(clothes_jacket)
    body:
        assert is_clothes_jacket(clothes_jacket)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==124
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_jacket,hanger_instance)
        else:
            exp(clothes_jacket,hanger_instance)
    eff:
        unknown[clothes_jacket]=False
        close[clothes_jacket,hanger_instance]=True
        close[hanger_instance,clothes_jacket]=True
    

behavior find_clothes_dress_2044_around_hanger_124(clothes_dress:item):
    goal: not unknown(clothes_dress)
    body:
        assert is_clothes_dress(clothes_dress)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==124
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_dress,hanger_instance)
        else:
            exp(clothes_dress,hanger_instance)
    eff:
        unknown[clothes_dress]=False
        close[clothes_dress,hanger_instance]=True
        close[hanger_instance,clothes_dress]=True
    

behavior find_clothes_underwear_2049_around_nightstand_102(clothes_underwear:item):
    goal: not unknown(clothes_underwear)
    body:
        assert is_clothes_underwear(clothes_underwear)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==102
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(clothes_underwear,nightstand_instance)
        else:
            exp(clothes_underwear,nightstand_instance)
    eff:
        unknown[clothes_underwear]=False
        close[clothes_underwear,nightstand_instance]=True
        close[nightstand_instance,clothes_underwear]=True
    

behavior find_clothes_skirt_2088_around_table_107(clothes_skirt:item):
    goal: not unknown(clothes_skirt)
    body:
        assert is_clothes_skirt(clothes_skirt)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==107
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(clothes_skirt,table_instance)
        else:
            exp(clothes_skirt,table_instance)
    eff:
        unknown[clothes_skirt]=False
        close[clothes_skirt,table_instance]=True
        close[table_instance,clothes_skirt]=True
    

behavior find_clothes_pants_2085_around_closetdrawer_160(clothes_pants:item):
    goal: not unknown(clothes_pants)
    body:
        assert is_clothes_pants(clothes_pants)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==160
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_pants,closetdrawer_instance)
        else:
            exp(clothes_pants,closetdrawer_instance)
    eff:
        unknown[clothes_pants]=False
        close[clothes_pants,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_pants]=True
    

behavior find_clothes_gloves_2046_around_hanger_114(clothes_gloves:item):
    goal: not unknown(clothes_gloves)
    body:
        assert is_clothes_gloves(clothes_gloves)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==114
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(clothes_gloves,hanger_instance)
        else:
            exp(clothes_gloves,hanger_instance)
    eff:
        unknown[clothes_gloves]=False
        close[clothes_gloves,hanger_instance]=True
        close[hanger_instance,clothes_gloves]=True
    

behavior find_clothes_shirt_2086_around_washing_machine_2007(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_shirt,washing_machine_instance)
        else:
            exp(clothes_shirt,washing_machine_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,washing_machine_instance]=True
        close[washing_machine_instance,clothes_shirt]=True
    

#goal_representation
 
def find_shirt(shirt: item):
    observe(shirt, "Identify if this is clothes_shirt_2086")

behavior __goal__():
    body:
        if exists shirt: item: is_clothes_shirt(shirt):
            # If a shirt is already identified based on available information
            bind shirt: item where:
                is_clothes_shirt(shirt)
            achieve visited(shirt)
            # Mark the shirt as visited

        else:
            # If no shirt is identified, initiate search
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    find_shirt(shirt)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Behavior body statements are not allowed in the current mode: SymbolicExecutionMode.DERIVED
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_food_dessert_2018_around_fridge_289(food_dessert:item):
    goal: not unknown(food_dessert)
    body:
        assert is_food_dessert(food_dessert)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_dessert,fridge_instance)
        else:
            exp(food_dessert,fridge_instance)
    eff:
        unknown[food_dessert]=False
        close[food_dessert,fridge_instance]=True
        close[fridge_instance,food_dessert]=True
    

behavior find_clothes_shirt_2086_around_washing_machine_2007(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(clothes_shirt,washing_machine_instance)
        else:
            exp(clothes_shirt,washing_machine_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,washing_machine_instance]=True
        close[washing_machine_instance,clothes_shirt]=True
    

behavior find_hanger_363_around_hanger_140(hanger:item):
    goal: not unknown(hanger)
    body:
        assert is_hanger(hanger)
        bind hanger_instance:item where:
            is_hanger(hanger_instance) and id[hanger_instance]==140
        achieve close_char(char,hanger_instance)
        if can_open(hanger_instance):
            achieve_once open(hanger_instance)
            exp(hanger,hanger_instance)
        else:
            exp(hanger,hanger_instance)
    eff:
        unknown[hanger]=False
        close[hanger,hanger_instance]=True
        close[hanger_instance,hanger]=True
    

behavior find_basket_for_clothes_2006_around_washing_machine_2007(basket_for_clothes:item):
    goal: not unknown(basket_for_clothes)
    body:
        assert is_basket_for_clothes(basket_for_clothes)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(basket_for_clothes,washing_machine_instance)
        else:
            exp(basket_for_clothes,washing_machine_instance)
    eff:
        unknown[basket_for_clothes]=False
        close[basket_for_clothes,washing_machine_instance]=True
        close[washing_machine_instance,basket_for_clothes]=True
    

#goal_representation
 
behavior find_shirt(shirt: item):
    body:
        observe(shirt, "Identify if this is clothes_shirt_2086")

behavior __goal__():
    body:
        if exists shirt: item : is_clothes_shirt(shirt):
            # If a shirt is already identified based on available information
            bind shirt: item where:
                is_clothes_shirt(shirt)
            achieve visited(shirt)
            # Mark the shirt as visited

        else:
            # If no shirt is identified, initiate search
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    find_shirt(shirt)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_shirt(shirt: item):
    body:
        observe(shirt, "Identify if this is clothes_shirt_2086")

behavior __goal__():
    body:
        if exists shirt: item : is_clothes_shirt(shirt):
            # If a shirt is already identified based on available information
            bind shirt: item where:
                is_clothes_shirt(shirt)
            achieve visited(shirt)
            # Mark the shirt as visited

        else:
            # If no shirt is identified, initiate search
            foreach shirt: item:
                if is_clothes_shirt(shirt) and not visited(shirt):
                    find_shirt(shirt)

##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2007)open_executor(washing_machine_2007)exp(clothes_shirt_2086, washing_machine_2007)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, look around this place)
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close washing_machine_2007. Robot is no longer inside bedroom_67.Robot is no longer close dresser_123.Robot is no longer close hanger_141.
##############################
From agent.py
open_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close washing_machine_2007. 
##############################
From agent.py
exp(clothes_shirt_2086, washing_machine_2007)
Fail to find clothes_shirt_2086 around washing_machine_2007. 
##############################
From agent.py-> find a plan in act()
walk_executor(doorjamb_346)exp(clothes_shirt_2086, doorjamb_346)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, look around this place)
##############################
From agent.py
walk_executor(doorjamb_346)
Find drawing_402. Find mouse_413. Find drawing_404. Robot is inside home_office_319. Robot is close doorjamb_346. Robot is no longer inside bathroom_1.Robot is no longer close washing_machine_2007.
##############################
From agent.py
exp(clothes_shirt_2086, doorjamb_346)
Fail to find clothes_shirt_2086 around doorjamb_346. 
##############################
From agent.py-> find a plan in act()
walk_executor(hanger_114)exp(clothes_shirt_2086, hanger_114)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, look around this place)
##############################
From agent.py
walk_executor(hanger_114)
Robot is inside bedroom_67. Robot is close hanger_114. Robot is close dresser_108. Robot is no longer inside home_office_319.Robot is no longer close doorjamb_346.
##############################
From agent.py
exp(clothes_shirt_2086, hanger_114)
Fail to find clothes_shirt_2086 around hanger_114. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Locate the shirt for cleaning.', '2. Wash the shirt.', '3. Iron the shirt.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_clothes_shirt_2086_around_closetdrawer_154(clothes_shirt:item):
    goal: not unknown(clothes_shirt)
    body:
        assert is_clothes_shirt(clothes_shirt)
        bind closetdrawer_instance:item where:
            is_closetdrawer(closetdrawer_instance) and id[closetdrawer_instance]==154
        achieve close_char(char,closetdrawer_instance)
        if can_open(closetdrawer_instance):
            achieve_once open(closetdrawer_instance)
            exp(clothes_shirt,closetdrawer_instance)
        else:
            exp(clothes_shirt,closetdrawer_instance)
    eff:
        unknown[clothes_shirt]=False
        close[clothes_shirt,closetdrawer_instance]=True
        close[closetdrawer_instance,clothes_shirt]=True
    

#exp_behavior_end

#goal_representation
 
def has_clothes_shirt(item: item):
    # Function to check if the item is clothes_shirt
    return is_clothes_shirt(item)

behavior __goal__():
    body:
        if exists clothes_shirt: item : has_clothes_shirt(clothes_shirt):
            # Check if the shirt is already known in the available information
            bind clothes_shirt: item where:
                has_clothes_shirt(clothes_shirt)
            achieve visited(clothes_shirt)
            # Set the shirt as visited

        else:
            # Initiate search if the shirt is not known
            foreach location: item:
                if (is_closetdrawer(location) or is_hanger(location) or is_washing_machine(location) or is_doorjamb(location)) and not visited(location):
                    observe(location, "Check for clothes_shirt_2086")
                    # Observe locations that might contain the shirt

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_clothes_shirt(item: item):
    # Function to check if the item is clothes_shirt
    return is_clothes_shirt(item)

behavior __goal__():
    body:
        if exists clothes_shirt: item : has_clothes_shirt(clothes_shirt):
            # Check if the shirt is already known in the available information
            bind clothes_shirt: item where:
                has_clothes_shirt(clothes_shirt)
            achieve visited(clothes_shirt)
            # Set the shirt as visited

        else:
            # Initiate search if the shirt is not known
            foreach location: item:
                if (is_closetdrawer(location) or is_hanger(location) or is_washing_machine(location) or is_doorjamb(location)) and not visited(location):
                    observe(location, "Check for clothes_shirt_2086")
                    # Observe locations that might contain the shirt

##############################
From agent.py-> find a plan in act()
walk_executor(closetdrawer_154)exp(clothes_shirt_2086, closetdrawer_154)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, look around this place)
##############################
From agent.py
walk_executor(closetdrawer_154)
Find mat_173. Robot is inside bedroom_67. Robot is close closetdrawer_160. Robot is close closetdrawer_154. Robot is close dresser_123. Robot is no longer close hanger_114.Robot is no longer close dresser_108.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find clothes_shirt_2086 ?
Answer: Robot, the clothes_shirt_2086 is located inside the bathroom_1. You will find it inside the basket_for_clothes_2006. Look for a basket specifically for clothes; the target shirt is inside this basket.
Re-decompose: None

##############################
From agent.py
Human Instruction: Robot, the clothes_shirt_2086 is located inside the bathroom_1. You will find it inside the basket_for_clothes_2006. Look for a basket specifically for clothes; the target shirt is inside this basket.

The actions you have taken:
Action 1: Walk to closetdrawer_116.
Action 2: look for clothes_shirt_2086 around closetdrawer_116.
Action 3: Walk to hanger_141.
Action 4: look for clothes_shirt_2086 around hanger_141.
Action 5: Walk to washing_machine_2007.
Action 6: Open washing_machine_2007.
Action 7: look for clothes_shirt_2086 around washing_machine_2007.
Action 8: Walk to doorjamb_346.
Action 9: look for clothes_shirt_2086 around doorjamb_346.
Action 10: Walk to hanger_114.
Action 11: look for clothes_shirt_2086 around hanger_114.
Action 12: Walk to closetdrawer_154.

##############################
From agent.py
exp(clothes_shirt_2086, closetdrawer_154)
Fail to find clothes_shirt_2086 around closetdrawer_154. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_41)exp(clothes_shirt_2086, bathroom_counter_41)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, look around this place)
##############################
From agent.py
walk_executor(bathroom_counter_41)
Find towel_rack_34. Find towel_rack_32. Find towel_rack_31. Robot is inside bathroom_1. Robot is close bathroom_counter_41. Robot is no longer inside bedroom_67.Robot is no longer close closetdrawer_160.Robot is no longer close closetdrawer_154.Robot is no longer close dresser_123.
##############################
From agent.py
exp(clothes_shirt_2086, bathroom_counter_41)
Fail to find clothes_shirt_2086 around bathroom_counter_41. 
##############################
From agent.py-> find a plan in act()
walk_executor(towel_rack_34)exp(clothes_shirt_2086, towel_rack_34)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, look around this place)
##############################
From agent.py
walk_executor(towel_rack_34)
Find towel_rack_33. Find basket_for_clothes_2006. Find towel_2059. Robot is inside bathroom_1. Robot is close towel_rack_34. Robot is no longer close bathroom_counter_41.
##############################
From agent.py
exp(clothes_shirt_2086, towel_rack_34)
Fail to find clothes_shirt_2086 around towel_rack_34. 
##############################
From agent.py-> find a plan in act()
walk_executor(basket_for_clothes_2006)exp(clothes_shirt_2086, basket_for_clothes_2006)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, look around this place)
##############################
From agent.py
walk_executor(basket_for_clothes_2006)
Find clothes_pants_2085. Find clothes_shirt_2086. Find clothes_socks_2087. Find clothes_skirt_2088. Find mat_22. Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Robot is no longer close towel_rack_34.
##############################
From agent.py
exp(clothes_shirt_2086, basket_for_clothes_2006)
Find clothes_shirt_2086. 
##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2086, look around this place)
##############################
From agent.py
obs(clothes_shirt_2086, look around this place)
Get this information:  clothes_shirt_2086 is close to basket_for_clothes_2006. clothes_shirt_2086 is close to character_65. clothes_shirt_2086 is inside bathroom_1. clothes_shirt_2086 is inside basket_for_clothes_2006. clothes_shirt_2086 is DIRTY.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_bathroom_cabinet_40(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(detergent,bathroom_cabinet_instance)
        else:
            exp(detergent,bathroom_cabinet_instance)
    eff:
        unknown[detergent]=False
        close[detergent,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
 
behavior wash_shirt(shirt: item, washing_machine: item):
    body:
        achieve inside(shirt, washing_machine)
        # Place the shirt inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine door is closed
        achieve is_on(washing_machine)
        # Turn on the washing machine to start washing the shirt

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2086
        # Select the shirt with the specific ID 2086

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        wash_shirt(clothes_shirt, washing_machine)
        # Place the shirt in the washing machine

        start_washing_machine(washing_machine)
        # Start the washing machine after the shirt is loaded

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior wash_shirt(shirt: item, washing_machine: item):
    body:
        achieve inside(shirt, washing_machine)
        # Place the shirt inside the washing machine

behavior start_washing_machine(washing_machine:item):
    body:
        achieve closed(washing_machine)
        # Ensure the washing machine door is closed
        achieve is_on(washing_machine)
        # Turn on the washing machine to start washing the shirt

behavior __goal__():
    body:
        bind clothes_shirt: item where:
            is_clothes_shirt(clothes_shirt) and id[clothes_shirt] == 2086
        # Select the shirt with the specific ID 2086

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine

        wash_shirt(clothes_shirt, washing_machine)
        # Place the shirt in the washing machine

        start_washing_machine(washing_machine)
        # Start the washing machine after the shirt is loaded

##############################
From agent.py-> find a plan in act()
grab_executor(clothes_shirt_2086)walk_executor(washing_machine_2007)putin_executor(clothes_shirt_2086, washing_machine_2007)close_executor(washing_machine_2007)plugin_executor(washing_machine_2007)switchon_executor(washing_machine_2007)
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_pants_2085. Robot is close clothes_shirt_2086. Robot is close clothes_socks_2087. Robot is close clothes_skirt_2088. Robot is close basket_for_clothes_2006. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. Robot is no longer close clothes_pants_2085.Robot is no longer close clothes_socks_2087.Robot is no longer close clothes_skirt_2088.Robot is no longer close basket_for_clothes_2006.
##############################
From agent.py
putin_executor(clothes_shirt_2086, washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
close_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. 
##############################
From agent.py
plugin_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. 
##############################
From agent.py
switchon_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_iron_2089_around_ironing_board_2074(iron:item):
    goal: not unknown(iron)
    body:
        assert is_iron(iron)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(iron,ironing_board_instance)
        else:
            exp(iron,ironing_board_instance)
    eff:
        unknown[iron]=False
        close[iron,ironing_board_instance]=True
        close[ironing_board_instance,iron]=True
    

#exp_behavior_end

#goal_representation
behavior find_ironing_board(ironing_board:item):
    body:
        observe(ironing_board, "Check if this is where clothes_shirt_2086 can be ironed")

behavior iron_shirt(shirt:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron instance
        
        achieve_once is_on(iron)
        # Turn on the iron

        observe(shirt, "Ensure the shirt is free of creases and properly aligned for ironing")
        # Observe the shirt to make sure its positioned correctly for ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the clothes_shirt_2086 instance

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board instance

        if not visited(ironing_board):
            find_ironing_board(ironing_board)
        # Ensure that the ironing board location is known

        iron_shirt(shirt, ironing_board)
        # Iron the shirt on the ironing board
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior find_ironing_board(ironing_board:item):
    body:
        observe(ironing_board, "Check if this is where clothes_shirt_2086 can be ironed")

behavior iron_shirt(shirt:item, ironing_board:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board

        bind iron: item where:
            is_iron(iron)
        # Select the iron instance
        
        achieve_once is_on(iron)
        # Turn on the iron

        observe(shirt, "Ensure the shirt is free of creases and properly aligned for ironing")
        # Observe the shirt to make sure its positioned correctly for ironing

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the clothes_shirt_2086 instance

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select an ironing board instance

        if not visited(ironing_board):
            find_ironing_board(ironing_board)
        # Ensure that the ironing board location is known

        iron_shirt(shirt, ironing_board)
        # Iron the shirt on the ironing board
##############################
From agent.py-> find a plan in act()
walk_executor(ironing_board_2074)obs(ironing_board_2074, Check if this is where clothes_shirt_2086 can be ironed)walk_executor(washing_machine_2007)switchoff_executor(washing_machine_2007)open_executor(washing_machine_2007)walk_executor(clothes_shirt_2086)grab_executor(clothes_shirt_2086)walk_executor(ironing_board_2074)put_executor(clothes_shirt_2086, ironing_board_2074)exp(iron_2089, ironing_board_2074)walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Ensure the shirt is free of creases and properly aligned for ironing)
##############################
From agent.py
walk_executor(ironing_board_2074)
Find iron_2089. Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is no longer close clothes_shirt_2086.Robot is no longer close washing_machine_2007.
##############################
From agent.py
obs(ironing_board_2074, Check if this is where clothes_shirt_2086 can be ironed)
Get this information:  ironing_board_2074 is close to iron_2089. ironing_board_2074 is close to bathroom_1. ironing_board_2074 is close to character_65. iron_2089 is on ironing_board_2074. ironing_board_2074 is inside bathroom_1.
##############################
From agent.py
walk_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. Robot is no longer close ironing_board_2074.
##############################
From agent.py
switchoff_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. 
##############################
From agent.py
open_executor(washing_machine_2007)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. 
##############################
From agent.py
grab_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close washing_machine_2007. Grabbing clothes_shirt_2086 by right hand. 
##############################
From agent.py
walk_executor(ironing_board_2074)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. Robot is no longer close washing_machine_2007.
##############################
From agent.py
put_executor(clothes_shirt_2086, ironing_board_2074)
Robot is inside bathroom_1. Robot is close clothes_shirt_2086. Robot is close ironing_board_2074. clothes_shirt_2086 released by right hand. 
##############################
From agent.py
exp(iron_2089, ironing_board_2074)
Find iron_2089. 
##############################
From agent.py-> find a plan in act()
walk_executor(iron_2089)plugin_executor(iron_2089)switchon_executor(iron_2089)walk_executor(clothes_shirt_2086)obs(clothes_shirt_2086, Ensure the shirt is free of creases and properly aligned for ironing)
##############################
From agent.py
walk_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. Robot is no longer close clothes_shirt_2086.
##############################
From agent.py
plugin_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. 
##############################
From agent.py
switchon_executor(iron_2089)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close iron_2089. 
##############################
From agent.py
walk_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close clothes_shirt_2086. Robot is no longer close iron_2089.
##############################
From agent.py
obs(clothes_shirt_2086, Ensure the shirt is free of creases and properly aligned for ironing)
Get this information:  clothes_shirt_2086 is close to ironing_board_2074. clothes_shirt_2086 is close to character_65. clothes_shirt_2086 is inside bathroom_1. clothes_shirt_2086 is on ironing_board_2074. clothes_shirt_2086 is DIRTY.
##############################
From agent.py
Human Instruction: The shirt is still dirty and needs to be washed and dried before ironing can be effectively completed. Despite the shirt being on the ironing board and the iron switched on, the task is incomplete as the shirt state is DIRTY.

The actions you have taken:
Action 1: Walk to closetdrawer_116.
Action 2: look for clothes_shirt_2086 around closetdrawer_116.
Action 3: Walk to hanger_141.
Action 4: look for clothes_shirt_2086 around hanger_141.
Action 5: Walk to washing_machine_2007.
Action 6: Open washing_machine_2007.
Action 7: look for clothes_shirt_2086 around washing_machine_2007.
Action 8: Walk to doorjamb_346.
Action 9: look for clothes_shirt_2086 around doorjamb_346.
Action 10: Walk to hanger_114.
Action 11: look for clothes_shirt_2086 around hanger_114.
Action 12: Walk to closetdrawer_154.
Action 13: look for clothes_shirt_2086 around closetdrawer_154.
Action 14: Walk to bathroom_counter_41.
Action 15: look for clothes_shirt_2086 around bathroom_counter_41.
Action 16: Walk to towel_rack_34.
Action 17: look for clothes_shirt_2086 around towel_rack_34.
Action 18: Walk to basket_for_clothes_2006.
Action 19: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 20: Observe around clothes_shirt_2086 with the question of look around this place.
Action 21: Grab clothes_shirt_2086.
Action 22: Walk to washing_machine_2007.
Action 23: Put clothes_shirt_2086 into washing_machine_2007.
Action 24: Close washing_machine_2007.
Action 25: Plug in washing_machine_2007.
Action 26: Switch on washing_machine_2007.
Action 27: Walk to ironing_board_2074.
Action 28: Observe around ironing_board_2074 with the question of Check if this is where clothes_shirt_2086 can be ironed.
Action 29: Walk to washing_machine_2007.
Action 30: Switch off washing_machine_2007.
Action 31: Open washing_machine_2007.
Action 32: Walk to clothes_shirt_2086.
Action 33: Grab clothes_shirt_2086.
Action 34: Walk to ironing_board_2074.
Action 35: Put clothes_shirt_2086 on ironing_board_2074.
Action 36: look for iron_2089 around ironing_board_2074.
Action 37: Walk to iron_2089.
Action 38: Plug in iron_2089.
Action 39: Switch on iron_2089.
Action 40: Walk to clothes_shirt_2086.
Action 41: Observe around clothes_shirt_2086 with the question of Ensure the shirt is free of creases and properly aligned for ironing.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior iron_shirt(shirt: item, ironing_board: item, iron: item):
    body:
        achieve clean(shirt)
        # Ensure the shirt is clean before ironing

        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board

        achieve is_on(iron)
        # Ensure the iron is turned on to iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt instance that needs ironing

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and on(shirt, ironing_board)
        # Select the ironing board with the shirt on it

        bind iron: item where:
            is_iron(iron) and close(iron, ironing_board)
        # Select the iron that is close to the ironing board

        iron_shirt(shirt, ironing_board, iron)
        # Execute the behavior to iron the shirt

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior iron_shirt(shirt: item, ironing_board: item, iron: item):
    body:
        achieve clean(shirt)
        # Ensure the shirt is clean before ironing

        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board

        achieve is_on(iron)
        # Ensure the iron is turned on to iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt)
        # Select the shirt instance that needs ironing

        bind ironing_board: item where:
            is_ironing_board(ironing_board) and on(shirt, ironing_board)
        # Select the ironing board with the shirt on it

        bind iron: item where:
            is_iron(iron) and close(iron, ironing_board)
        # Select the iron that is close to the ironing board

        iron_shirt(shirt, ironing_board, iron)
        # Execute the behavior to iron the shirt

##############################
From agent.py-> find a plan in act()
wash_executor(clothes_shirt_2086)
##############################
From agent.py
wash_executor(clothes_shirt_2086)
Robot is inside bathroom_1. Robot is close ironing_board_2074. Robot is close clothes_shirt_2086. 
##############################
From agent.py
Human Instruction: You need to ensure the shirt is clean before ironing. The shirt, clothes_shirt_2086, is identified as DIRTY after being removed from the washing machine, meaning the cleaning process was not completed correctly. You must properly wash, dry, and confirm the cleanness of the shirt before proceeding with ironing.

The actions you have taken:
Action 1: Walk to closetdrawer_116.
Action 2: look for clothes_shirt_2086 around closetdrawer_116.
Action 3: Walk to hanger_141.
Action 4: look for clothes_shirt_2086 around hanger_141.
Action 5: Walk to washing_machine_2007.
Action 6: Open washing_machine_2007.
Action 7: look for clothes_shirt_2086 around washing_machine_2007.
Action 8: Walk to doorjamb_346.
Action 9: look for clothes_shirt_2086 around doorjamb_346.
Action 10: Walk to hanger_114.
Action 11: look for clothes_shirt_2086 around hanger_114.
Action 12: Walk to closetdrawer_154.
Action 13: look for clothes_shirt_2086 around closetdrawer_154.
Action 14: Walk to bathroom_counter_41.
Action 15: look for clothes_shirt_2086 around bathroom_counter_41.
Action 16: Walk to towel_rack_34.
Action 17: look for clothes_shirt_2086 around towel_rack_34.
Action 18: Walk to basket_for_clothes_2006.
Action 19: look for clothes_shirt_2086 around basket_for_clothes_2006.
Action 20: Observe around clothes_shirt_2086 with the question of look around this place.
Action 21: Grab clothes_shirt_2086.
Action 22: Walk to washing_machine_2007.
Action 23: Put clothes_shirt_2086 into washing_machine_2007.
Action 24: Close washing_machine_2007.
Action 25: Plug in washing_machine_2007.
Action 26: Switch on washing_machine_2007.
Action 27: Walk to ironing_board_2074.
Action 28: Observe around ironing_board_2074 with the question of Check if this is where clothes_shirt_2086 can be ironed.
Action 29: Walk to washing_machine_2007.
Action 30: Switch off washing_machine_2007.
Action 31: Open washing_machine_2007.
Action 32: Walk to clothes_shirt_2086.
Action 33: Grab clothes_shirt_2086.
Action 34: Walk to ironing_board_2074.
Action 35: Put clothes_shirt_2086 on ironing_board_2074.
Action 36: look for iron_2089 around ironing_board_2074.
Action 37: Walk to iron_2089.
Action 38: Plug in iron_2089.
Action 39: Switch on iron_2089.
Action 40: Walk to clothes_shirt_2086.
Action 41: Observe around clothes_shirt_2086 with the question of Ensure the shirt is free of creases and properly aligned for ironing.
Action 42: Wash clothes_shirt_2086.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_detergent_2084_around_sink_231(detergent:item):
    goal: not unknown(detergent)
    body:
        assert is_detergent(detergent)
        bind sink_instance:item where:
            is_sink(sink_instance) and id[sink_instance]==231
        achieve close_char(char,sink_instance)
        if can_open(sink_instance):
            achieve_once open(sink_instance)
            exp(detergent,sink_instance)
        else:
            exp(detergent,sink_instance)
    eff:
        unknown[detergent]=False
        close[detergent,sink_instance]=True
        close[sink_instance,detergent]=True
    

#exp_behavior_end

#goal_representation
behavior inspect_shirt(shirt:item):
    body:
        observe(shirt, "Ensure the shirt is clean before ironing")
        # Observe the shirt to check its cleanliness

behavior wash_shirt(shirt:item, washing_machine:item):
    body:
        achieve inside(shirt, washing_machine)
        # Place the shirt inside the washing machine
        achieve closed(washing_machine)
        # Close the washing machine door
        achieve is_on(washing_machine)
        # Turn on the washing machine to wash the shirt

behavior dry_shirt(shirt:item):
    body:
        assert clean(shirt)
        # Assure the shirt is clean after washing
        achieve not has_water(shirt)
        # Ensure the shirt is dry

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve is_on(iron)
        # Ensure the iron is turned on to iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt with ID 2086

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance

        inspect_shirt(shirt)

        if dirty(shirt):
            wash_shirt(shirt, washing_machine)
        
        dry_shirt(shirt)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board instance

        bind iron: item where:
            is_iron(iron)
        # Select the iron instance

        iron_shirt(shirt, ironing_board, iron)
        # Execute the behavior to iron the shirt
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior inspect_shirt(shirt:item):
    body:
        observe(shirt, "Ensure the shirt is clean before ironing")
        # Observe the shirt to check its cleanliness

behavior wash_shirt(shirt:item, washing_machine:item):
    body:
        achieve inside(shirt, washing_machine)
        # Place the shirt inside the washing machine
        achieve closed(washing_machine)
        # Close the washing machine door
        achieve is_on(washing_machine)
        # Turn on the washing machine to wash the shirt

behavior dry_shirt(shirt:item):
    body:
        assert clean(shirt)
        # Assure the shirt is clean after washing
        achieve not has_water(shirt)
        # Ensure the shirt is dry

behavior iron_shirt(shirt:item, ironing_board:item, iron:item):
    body:
        achieve on(shirt, ironing_board)
        # Place the shirt on the ironing board
        achieve is_on(iron)
        # Ensure the iron is turned on to iron the shirt

behavior __goal__():
    body:
        bind shirt: item where:
            is_clothes_shirt(shirt) and id[shirt] == 2086
        # Select the shirt with ID 2086

        bind washing_machine: item where:
            is_washing_machine(washing_machine)
        # Select the washing machine instance

        inspect_shirt(shirt)

        if dirty(shirt):
            wash_shirt(shirt, washing_machine)
        
        dry_shirt(shirt)

        bind ironing_board: item where:
            is_ironing_board(ironing_board)
        # Select the ironing board instance

        bind iron: item where:
            is_iron(iron)
        # Select the iron instance

        iron_shirt(shirt, ironing_board, iron)
        # Execute the behavior to iron the shirt
##############################
From agent.py-> find a plan in act()
obs(clothes_shirt_2086, Ensure the shirt is clean before ironing)
##############################
From agent.py
obs(clothes_shirt_2086, Ensure the shirt is clean before ironing)
Get this information:  clothes_shirt_2086 is close to ironing_board_2074. clothes_shirt_2086 is close to character_65. clothes_shirt_2086 is inside bathroom_1. clothes_shirt_2086 is on ironing_board_2074. clothes_shirt_2086 is CLEAN.
##############################
