From agent.py
Reset goals: The sub-goals are: 
['1. Brew a cup of coffee using the coffee maker.', '2. Add milk and sugar to the brewed coffee.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2133_around_cupboard_118(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_cup_2134_around_cupboard_118(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_coffee_filter_2053_around_cupboard_118(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==118
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
def has_water_in_coffee_maker(coffee_maker:item):
    # Check if the coffee maker contains water
    symbol water_check=has_water(coffee_maker)
    return water_check

behavior start_coffee_maker(coffee_maker:item):
    body:
        achieve plugged(coffee_maker)
        # Ensure the coffee maker is plugged in
        
        assert_hold has_switch(coffee_maker)
        # Check that the coffee maker has a switch to turn on or off

        achieve is_on(coffee_maker)
        # Turn on the coffee maker

behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve inside(cup, coffee_maker)
        # Ensure the cup is placed inside or under the coffee maker to collect the brew
        
        start_coffee_maker(coffee_maker)
        # Start the coffee maker to brew coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker instance

        bind cup: item where:
            is_cup(cup)
        # Select a cup instance

        if not has_water_in_coffee_maker(coffee_maker):
            observe(coffee_maker, "Check water reservoir of the coffee maker")

        brew_coffee(coffee_maker, cup)
        # Execute the behavior to brew a cup of coffee using the coffee maker

#goal_representation_end

##############################
From agent.py->reset_goal
 
def has_water_in_coffee_maker(coffee_maker:item):
    # Check if the coffee maker contains water
    symbol water_check=has_water(coffee_maker)
    return water_check

behavior start_coffee_maker(coffee_maker:item):
    body:
        achieve plugged(coffee_maker)
        # Ensure the coffee maker is plugged in
        
        assert_hold has_switch(coffee_maker)
        # Check that the coffee maker has a switch to turn on or off

        achieve is_on(coffee_maker)
        # Turn on the coffee maker

behavior brew_coffee(coffee_maker:item, cup:item):
    body:
        achieve inside(cup, coffee_maker)
        # Ensure the cup is placed inside or under the coffee maker to collect the brew
        
        start_coffee_maker(coffee_maker)
        # Start the coffee maker to brew coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker instance

        bind cup: item where:
            is_cup(cup)
        # Select a cup instance

        if not has_water_in_coffee_maker(coffee_maker):
            observe(coffee_maker, "Check water reservoir of the coffee maker")

        brew_coffee(coffee_maker, cup)
        # Execute the behavior to brew a cup of coffee using the coffee maker

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)open_executor(coffe_maker_130)obs(coffe_maker_130, Check water reservoir of the coffee maker)walk_executor(cupboard_118)open_executor(cupboard_118)exp(cup_2132, cupboard_118)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)putin_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Find coffee_filter_2065. Find tray_128. Find spectacles_2153. Find fryingpan_2154. Find pot_78. Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
open_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
obs(coffe_maker_130, Check water reservoir of the coffee maker)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is CLEAN. coffe_maker_130 is OPEN. coffe_maker_130 is OFF.
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
exp(cup_2132, cupboard_118)
Fail to find cup_2132 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)obs(coffe_maker_130, Check water reservoir of the coffee maker)walk_executor(dishwasher_129)open_executor(dishwasher_129)exp(cup_2132, dishwasher_129)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)putin_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
obs(coffe_maker_130, Check water reservoir of the coffee maker)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is CLEAN. coffe_maker_130 is OPEN. coffe_maker_130 is OFF.
##############################
From agent.py
walk_executor(dishwasher_129)
Find detergent_2011. Find measuring_cup_2012. Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
open_executor(dishwasher_129)
Robot is inside dining_room_41. Robot is close dishwasher_129. Robot is close detergent_2011. Robot is close measuring_cup_2012. 
##############################
From agent.py
exp(cup_2132, dishwasher_129)
Fail to find cup_2132 around dishwasher_129. 
##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)obs(coffe_maker_130, Check water reservoir of the coffee maker)walk_executor(tray_128)exp(cup_2132, tray_128)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)putin_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close dishwasher_129.Robot is no longer close detergent_2011.Robot is no longer close measuring_cup_2012.
##############################
From agent.py
obs(coffe_maker_130, Check water reservoir of the coffee maker)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is CLEAN. coffe_maker_130 is OPEN. coffe_maker_130 is OFF.
##############################
From agent.py
walk_executor(tray_128)
Find oil_2013. Find food_cheese_2072. Find food_food_2064. Find food_carrot_2015. Robot is inside dining_room_41. Robot is close tray_128. Robot is close oven_127. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
exp(cup_2132, tray_128)
Fail to find cup_2132 around tray_128. 
##############################
From agent.py
Reset goals: The sub-goals are: 
['1. Make a cup of coffee using the coffee maker.', '2. Add milk and sugar to the coffee.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2134_around_cupboard_117(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_cup_2132_around_cupboard_117(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_coffee_filter_2053_around_cupboard_117(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
def is_coffee_maker_ready(coffee_maker: item):
    # Function to check if the coffee maker is ready to make coffee
    symbol ready = is_on(coffee_maker) and has_water(coffee_maker)
    return ready

behavior prepare_coffee(coffee_maker: item, cup: item):
    body:
        if not is_coffee_maker_ready(coffee_maker):
            achieve plugged(coffee_maker)
            # Ensure the coffee maker is plugged in

            if not is_on(coffee_maker):
                achieve is_on(coffee_maker)
                # Turn on the coffee maker

            if not has_water(coffee_maker):
                observe(coffee_maker, "Check water reservoir of the coffee maker")
                # Observe to ensure there is water in the coffee maker

        achieve inside(cup, coffee_maker)
        # Place the cup inside the coffee maker to receive coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker instance

        bind cup: item where:
            is_cup(cup)
        # Select the cup instance

        prepare_coffee(coffee_maker, cup)
        # Execute the behavior to prepare coffee

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2134_around_fridge_126(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(cup,fridge_instance)
        else:
            exp(cup,fridge_instance)
    eff:
        unknown[cup]=False
        close[cup,fridge_instance]=True
        close[fridge_instance,cup]=True
    

behavior find_cup_2049_around_cupboard_117(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

behavior find_coffee_filter_2053_around_cupboard_117(coffee_filter:item):
    goal: not unknown(coffee_filter)
    body:
        assert is_coffee_filter(coffee_filter)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(coffee_filter,cupboard_instance)
        else:
            exp(coffee_filter,cupboard_instance)
    eff:
        unknown[coffee_filter]=False
        close[coffee_filter,cupboard_instance]=True
        close[cupboard_instance,coffee_filter]=True
    

#exp_behavior_end

#goal_representation
 
def is_cup_around(coffee_maker: item):
    # Check if there is a cup around the coffee maker
    symbol has_cup=exists cup: item : is_cup(cup) and close(cup, coffee_maker)
    return has_cup

def has_water_in_reservoir(coffee_maker: item):
    # Function to check if there is water in the reservoir of the coffee maker
    symbol water_in_reservoir=exists reservoir: item : is_coffe_maker(coffee_maker) and has_water(coffee_maker)
    return water_in_reservoir

behavior prepare_coffee_using_machine(cup: item, coffee_maker: item):
    body:
        if has_water_in_reservoir(coffee_maker):
            achieve on(cup, coffee_maker)
            # Place the cup under the outlet of the coffee maker
            achieve is_on(coffee_maker)
            # Ensure the coffee maker is on to pour coffee into the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker instance

        if is_cup_around(coffee_maker):
            bind cup: item where:
                is_cup(cup) and close(cup, coffee_maker)
            # Bind the cup close to the coffee maker
            prepare_coffee_using_machine(cup, coffee_maker)
        else:
            # Observe if the cup is around and ensure coffee preparation
            observe(coffee_maker, "Find the cup around the coffee maker")
            if is_cup_around(coffee_maker):
                bind cup: item where:
                    is_cup(cup) and close(cup, coffee_maker)
                prepare_coffee_using_machine(cup, coffee_maker)

#goal_representation_end

##############################
From agent.py->reset_goal
 
def is_cup_around(coffee_maker: item):
    # Check if there is a cup around the coffee maker
    symbol has_cup=exists cup: item : is_cup(cup) and close(cup, coffee_maker)
    return has_cup

def has_water_in_reservoir(coffee_maker: item):
    # Function to check if there is water in the reservoir of the coffee maker
    symbol water_in_reservoir=exists reservoir: item : is_coffe_maker(coffee_maker) and has_water(coffee_maker)
    return water_in_reservoir

behavior prepare_coffee_using_machine(cup: item, coffee_maker: item):
    body:
        if has_water_in_reservoir(coffee_maker):
            achieve on(cup, coffee_maker)
            # Place the cup under the outlet of the coffee maker
            achieve is_on(coffee_maker)
            # Ensure the coffee maker is on to pour coffee into the cup

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker instance

        if is_cup_around(coffee_maker):
            bind cup: item where:
                is_cup(cup) and close(cup, coffee_maker)
            # Bind the cup close to the coffee maker
            prepare_coffee_using_machine(cup, coffee_maker)
        else:
            # Observe if the cup is around and ensure coffee preparation
            observe(coffee_maker, "Find the cup around the coffee maker")
            if is_cup_around(coffee_maker):
                bind cup: item where:
                    is_cup(cup) and close(cup, coffee_maker)
                prepare_coffee_using_machine(cup, coffee_maker)

##############################
From agent.py-> find a plan in act()
walk_executor(coffe_maker_130)obs(coffe_maker_130, Find the cup around the coffee maker)
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close tray_128.Robot is no longer close oven_127.
##############################
From agent.py
obs(coffe_maker_130, Find the cup around the coffee maker)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is CLEAN. coffe_maker_130 is OPEN. coffe_maker_130 is OFF.
##############################
From agent.py
Human Instruction: To complete the sub-task, you need to ensure that water is in the reservoir of the coffee maker and that a cup is placed under the outlet of the coffee maker. Then, turn the coffee maker on to brew the coffee.

The actions you have taken:
Action 1: Walk to coffe_maker_130.
Action 2: Open coffe_maker_130.
Action 3: Observe around coffe_maker_130 with the question of Check water reservoir of the coffee maker.
Action 4: Walk to cupboard_118.
Action 5: Open cupboard_118.
Action 6: look for cup_2132 around cupboard_118.
Action 7: Walk to coffe_maker_130.
Action 8: Observe around coffe_maker_130 with the question of Check water reservoir of the coffee maker.
Action 9: Walk to dishwasher_129.
Action 10: Open dishwasher_129.
Action 11: look for cup_2132 around dishwasher_129.
Action 12: Walk to coffe_maker_130.
Action 13: Observe around coffe_maker_130 with the question of Check water reservoir of the coffee maker.
Action 14: Walk to tray_128.
Action 15: look for cup_2132 around tray_128.
Action 16: Walk to coffe_maker_130.
Action 17: Observe around coffe_maker_130 with the question of Find the cup around the coffee maker.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2049_around_kitchen_counter_119(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cup,kitchen_counter_instance)
        else:
            exp(cup,kitchen_counter_instance)
    eff:
        unknown[cup]=False
        close[cup,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cup]=True
    

behavior find_cup_2133_around_cupboard_117(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior make_coffee(coffee_maker:item, cup:item):
    body:
        achieve has_water(coffee_maker)
        # Ensure the coffee maker has water

        achieve on(cup, coffee_maker)
        # Ensure the cup is placed under the coffee maker outlet

        achieve is_on(coffee_maker)
        # Turn the coffee maker on to brew the coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker instance

        bind cup: item where:
            is_cup(cup)
        # Select a cup instance

        make_coffee(coffee_maker, cup)
        # Execute the behavior to make coffee using the coffee maker

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior make_coffee(coffee_maker:item, cup:item):
    body:
        achieve has_water(coffee_maker)
        # Ensure the coffee maker has water

        achieve on(cup, coffee_maker)
        # Ensure the cup is placed under the coffee maker outlet

        achieve is_on(coffee_maker)
        # Turn the coffee maker on to brew the coffee

behavior __goal__():
    body:
        bind coffee_maker: item where:
            is_coffe_maker(coffee_maker)
        # Select the coffee maker instance

        bind cup: item where:
            is_cup(cup)
        # Select a cup instance

        make_coffee(coffee_maker, cup)
        # Execute the behavior to make coffee using the coffee maker

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(cup_2132, kitchen_counter_119)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Find pot_2138. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close coffe_maker_130.
##############################
From agent.py
exp(cup_2132, kitchen_counter_119)
Fail to find cup_2132 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(cup_2132, cupboard_117)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer close kitchen_counter_119.
##############################
From agent.py
exp(cup_2132, cupboard_117)
Fail to find cup_2132 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(cup_2132, kitchen_counter_123)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Find oil_2149. Find knife_2035. Find food_kiwi_2054. Find food_orange_2027. Find tray_2068. Robot is inside dining_room_41. Robot is close kitchen_counter_123. Robot is close floor_45. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2132 ?
Answer: Locate cup_2132 in dining_room_41. It is situated on top of table_114.
Re-decompose: None

##############################
From agent.py
Human Instruction: To complete the sub-task, you need to ensure that water is in the reservoir of the coffee maker and that a cup is placed under the outlet of the coffee maker. Then, turn the coffee maker on to brew the coffee.
Locate cup_2132 in dining_room_41. It is situated on top of table_114.

The actions you have taken:
Action 1: Walk to coffe_maker_130.
Action 2: Open coffe_maker_130.
Action 3: Observe around coffe_maker_130 with the question of Check water reservoir of the coffee maker.
Action 4: Walk to cupboard_118.
Action 5: Open cupboard_118.
Action 6: look for cup_2132 around cupboard_118.
Action 7: Walk to coffe_maker_130.
Action 8: Observe around coffe_maker_130 with the question of Check water reservoir of the coffee maker.
Action 9: Walk to dishwasher_129.
Action 10: Open dishwasher_129.
Action 11: look for cup_2132 around dishwasher_129.
Action 12: Walk to coffe_maker_130.
Action 13: Observe around coffe_maker_130 with the question of Check water reservoir of the coffee maker.
Action 14: Walk to tray_128.
Action 15: look for cup_2132 around tray_128.
Action 16: Walk to coffe_maker_130.
Action 17: Observe around coffe_maker_130 with the question of Find the cup around the coffee maker.
Action 18: Walk to kitchen_counter_119.
Action 19: look for cup_2132 around kitchen_counter_119.
Action 20: Walk to cupboard_117.
Action 21: look for cup_2132 around cupboard_117.
Action 22: Walk to kitchen_counter_123.

##############################
From agent.py
exp(cup_2132, kitchen_counter_123)
Fail to find cup_2132 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(cup_2132, table_114)walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(table_114)
Find mat_102. Find dry_pasta_2114. Find food_food_2021. Find drawing_110. Find drawing_111. Find knife_2122. Find cup_2133. Find table_cloth_2005. Find food_bread_2084. Find pillow_104. Find cup_2049. Find box_2038. Find clothes_hat_2117. Find clothes_gloves_2118. Find milk_2115. Find pillow_103. Find pillow_105. Find pillow_106. Find lighter_2004. Find lighter_2039. Find cup_2134. Find check_2058. Find cup_2132. Robot is inside dining_room_41. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close kitchen_counter_123.Robot is no longer close floor_45.
##############################
From agent.py
exp(cup_2132, table_114)
Find cup_2132. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2132)grab_executor(cup_2132)walk_executor(coffe_maker_130)put_executor(cup_2132, coffe_maker_130)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close table_114. Robot is close cup_2132. Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(cup_2132)
Robot is inside dining_room_41. Robot is close table_114. Robot is close cup_2132. Grabbing cup_2132 by right hand. 
##############################
From agent.py
walk_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. Robot is no longer close table_114.
##############################
From agent.py
put_executor(cup_2132, coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. cup_2132 released by right hand. 
##############################
From agent.py
close_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
Human Instruction: You need to ensure that there is water in the reservoir of the coffee maker before you can complete making the coffee. Please check if the coffee maker has water, and fill the water reservoir if necessary.

The actions you have taken:
Action 1: Walk to coffe_maker_130.
Action 2: Open coffe_maker_130.
Action 3: Observe around coffe_maker_130 with the question of Check water reservoir of the coffee maker.
Action 4: Walk to cupboard_118.
Action 5: Open cupboard_118.
Action 6: look for cup_2132 around cupboard_118.
Action 7: Walk to coffe_maker_130.
Action 8: Observe around coffe_maker_130 with the question of Check water reservoir of the coffee maker.
Action 9: Walk to dishwasher_129.
Action 10: Open dishwasher_129.
Action 11: look for cup_2132 around dishwasher_129.
Action 12: Walk to coffe_maker_130.
Action 13: Observe around coffe_maker_130 with the question of Check water reservoir of the coffee maker.
Action 14: Walk to tray_128.
Action 15: look for cup_2132 around tray_128.
Action 16: Walk to coffe_maker_130.
Action 17: Observe around coffe_maker_130 with the question of Find the cup around the coffee maker.
Action 18: Walk to kitchen_counter_119.
Action 19: look for cup_2132 around kitchen_counter_119.
Action 20: Walk to cupboard_117.
Action 21: look for cup_2132 around cupboard_117.
Action 22: Walk to kitchen_counter_123.
Action 23: look for cup_2132 around kitchen_counter_123.
Action 24: Walk to table_114.
Action 25: look for cup_2132 around table_114.
Action 26: Walk to cup_2132.
Action 27: Grab cup_2132.
Action 28: Walk to coffe_maker_130.
Action 29: Put cup_2132 on coffe_maker_130.
Action 30: Close coffe_maker_130.
Action 31: Switch on coffe_maker_130.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
def check_coffe_maker_water_level(coffe_maker:item):
    # Check if the coffee maker has water in the reservoir
    symbol water_present=has_water(coffe_maker)
    return water_present

behavior make_coffee(coffe_maker:item, cup:item):
    body:
        achieve has_water(coffe_maker)
        # Ensure the coffee maker has water before proceeding

        achieve on(cup, coffe_maker)
        # Place the cup on the coffee maker

        achieve closed(coffe_maker)
        # Close the coffee maker

        achieve is_on(coffe_maker)
        # Turn on the coffee maker to make coffee

behavior __goal__():
    body:
        bind coffe_maker: item where:
            is_coffe_maker(coffe_maker)
        # Select the coffee maker instance

        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select the cup with the specific ID

        if not check_coffe_maker_water_level(coffe_maker):
            observe(coffe_maker, "Check water reservoir of the coffee maker")
        
        make_coffee(coffe_maker, cup)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def check_coffe_maker_water_level(coffe_maker:item):
    # Check if the coffee maker has water in the reservoir
    symbol water_present=has_water(coffe_maker)
    return water_present

behavior make_coffee(coffe_maker:item, cup:item):
    body:
        achieve has_water(coffe_maker)
        # Ensure the coffee maker has water before proceeding

        achieve on(cup, coffe_maker)
        # Place the cup on the coffee maker

        achieve closed(coffe_maker)
        # Close the coffee maker

        achieve is_on(coffe_maker)
        # Turn on the coffee maker to make coffee

behavior __goal__():
    body:
        bind coffe_maker: item where:
            is_coffe_maker(coffe_maker)
        # Select the coffee maker instance

        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select the cup with the specific ID

        if not check_coffe_maker_water_level(coffe_maker):
            observe(coffe_maker, "Check water reservoir of the coffee maker")
        
        make_coffee(coffe_maker, cup)

##############################
From agent.py-> find a plan in act()
switchoff_executor(coffe_maker_130)open_executor(coffe_maker_130)obs(coffe_maker_130, Check water reservoir of the coffee maker)close_executor(coffe_maker_130)switchon_executor(coffe_maker_130)
##############################
From agent.py
switchoff_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
open_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
obs(coffe_maker_130, Check water reservoir of the coffee maker)
Get this information:  coffee_filter_2065 is inside coffe_maker_130. coffe_maker_130 is inside dining_room_41. coffe_maker_130 is on kitchen_counter_122. coffe_maker_130 is close to dishwasher_129. coffe_maker_130 is close to trashcan_99. coffe_maker_130 is close to wall_68. coffe_maker_130 is close to toaster_132. coffe_maker_130 is close to microwave_135. coffe_maker_130 is close to walllamp_139. coffe_maker_130 is close to coffee_filter_2065. coffe_maker_130 is close to floor_51. coffe_maker_130 is close to cupboard_118. coffe_maker_130 is close to kitchen_counter_122. coffe_maker_130 is close to ceiling_60. coffe_maker_130 is close to character_240. coffe_maker_130 is close to cup_2132. cup_2132 is on coffe_maker_130. coffe_maker_130 is PLUGGED_IN. coffe_maker_130 is CLEAN. coffe_maker_130 is OPEN. coffe_maker_130 is OFF.
##############################
From agent.py
close_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
From agent.py
switchon_executor(coffe_maker_130)
Robot is inside dining_room_41. Robot is close cup_2132. Robot is close coffee_filter_2065. Robot is close coffe_maker_130. Robot is close kitchen_counter_122. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_sugar_2111_around_fridge_126(food_sugar:item):
    goal: not unknown(food_sugar)
    body:
        assert is_food_sugar(food_sugar)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==126
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_sugar,fridge_instance)
        else:
            exp(food_sugar,fridge_instance)
    eff:
        unknown[food_sugar]=False
        close[food_sugar,fridge_instance]=True
        close[fridge_instance,food_sugar]=True
    

#exp_behavior_end

#goal_representation
 
behavior add_milk_and_sugar(cup: item, milk: item, sugar: item):
    body:
        achieve inside(milk, cup)
        # Ensure the milk is added to the coffee

        achieve inside(sugar, cup)
        # Ensure the sugar is added to the coffee

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select the cup containing the coffee

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select the sugar

        add_milk_and_sugar(cup, milk, sugar)
        # Execute the behavior to add milk and sugar to the coffee

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior add_milk_and_sugar(cup: item, milk: item, sugar: item):
    body:
        achieve inside(milk, cup)
        # Ensure the milk is added to the coffee

        achieve inside(sugar, cup)
        # Ensure the sugar is added to the coffee

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and id[cup]==2132
        # Select the cup containing the coffee

        bind milk: item where:
            is_milk(milk)
        # Select the milk

        bind sugar: item where:
            is_food_sugar(sugar)
        # Select the sugar

        add_milk_and_sugar(cup, milk, sugar)
        # Execute the behavior to add milk and sugar to the coffee

##############################
From agent.py-> find a plan in act()
walk_executor(milk_2115)grab_executor(milk_2115)walk_executor(cup_2132)putin_executor(milk_2115, cup_2132)walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_sugar_2111, fridge_126)walk_executor(food_sugar_2111)grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
walk_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Robot is no longer close coffee_filter_2065.Robot is no longer close kitchen_counter_122.Robot is no longer close cup_2132.Robot is no longer close coffe_maker_130.
##############################
From agent.py
grab_executor(milk_2115)
Robot is inside dining_room_41. Robot is close table_114. Robot is close milk_2115. Grabbing milk_2115 by right hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close milk_2115. Robot is close coffe_maker_130. Robot is close cup_2132. Robot is no longer close table_114.
##############################
From agent.py
putin_executor(milk_2115, cup_2132)
Robot is inside dining_room_41. Robot is close milk_2115. Robot is close coffe_maker_130. Robot is close cup_2132. milk_2115 released by right hand. 
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find basket_for_clothes_2078. Find food_food_1000. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer close coffe_maker_130.Robot is no longer close milk_2115.Robot is no longer close cup_2132.
##############################
From agent.py
switchoff_executor(fridge_126)
Find mouse_213. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
exp(food_sugar_2111, fridge_126)
Find food_sugar_2111. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_sugar_2111)walk_executor(cup_2132)putin_executor(food_sugar_2111, cup_2132)
##############################
From agent.py
grab_executor(food_sugar_2111)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Grabbing food_sugar_2111 by right hand. 
##############################
From agent.py
walk_executor(cup_2132)
Robot is inside dining_room_41. Robot is close food_sugar_2111. Robot is close coffe_maker_130. Robot is close cup_2132. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
putin_executor(food_sugar_2111, cup_2132)
Robot is inside dining_room_41. Robot is close food_sugar_2111. Robot is close coffe_maker_130. Robot is close cup_2132. food_sugar_2111 released by right hand. 
##############################
