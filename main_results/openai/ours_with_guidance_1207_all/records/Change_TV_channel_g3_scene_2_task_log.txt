From agent.py
Reset goals: The sub-goals are: 
['1. Find a couch and sit on it.', '2. Locate the remote control and use it to turn on the TV.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_chair_138_around_home_office_161(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind home_office_instance:item where:
            is_home_office(home_office_instance) and id[home_office_instance]==161
        achieve close_char(char,home_office_instance)
        if can_open(home_office_instance):
            achieve_once open(home_office_instance)
            exp(chair,home_office_instance)
        else:
            exp(chair,home_office_instance)
    eff:
        unknown[chair]=False
        close[chair,home_office_instance]=True
        close[home_office_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        if exists couch: item : is_couch(couch) and sittable(couch):
            # If a sittable couch is identified, approach it and sit
            bind couch: item where:
                is_couch(couch) and sittable(couch)
            achieve close_char(char, couch)
            sit_somewhere(couch)
        else:
            # Check all unvisited couches in the scene
            foreach couch: item:
                if is_couch(couch) and not visited(couch):
                    observe(couch, "Check if the couch is sittable")

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior __goal__():
    body:
        if exists couch: item : is_couch(couch) and sittable(couch):
            # If a sittable couch is identified, approach it and sit
            bind couch: item where:
                is_couch(couch) and sittable(couch)
            achieve close_char(char, couch)
            sit_somewhere(couch)
        else:
            # Check all unvisited couches in the scene
            foreach couch: item:
                if is_couch(couch) and not visited(couch):
                    observe(couch, "Check if the couch is sittable")

##############################
From agent.py-> find a plan in act()
walk_executor(couch_192)sit_executor(couch_192)
##############################
From agent.py
walk_executor(couch_192)
Find vacuum_cleaner_2094. Find cat_2082. Find pillow_195. Find drawing_196. Robot is inside home_office_161. Robot is close couch_192. 
##############################
From agent.py
sit_executor(couch_192)
Find keyboard_2111. Find stereo_2007. Find cd_2100. Find mouse_2112. Find oil_2005. Find video_game_controller_2019. Find dvd_player_2000. Find clothes_underwear_2022. Find chair_2118. Find cup_2006. Find laser_pointer_2025. Find mat_201. Robot is inside home_office_161. Robot is close couch_192. Robot is on couch_192. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_remote_control_2081_around_tvstand_135(remote_control:item):
    goal: not unknown(remote_control)
    body:
        assert is_remote_control(remote_control)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==135
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(remote_control,tvstand_instance)
        else:
            exp(remote_control,tvstand_instance)
    eff:
        unknown[remote_control]=False
        close[remote_control,tvstand_instance]=True
        close[tvstand_instance,remote_control]=True
    

#exp_behavior_end

#goal_representation
 
behavior locate_remote_control(remote_control: item):
    body:
        achieve visited(remote_control)
        # Ensure the remote control is located and marked as visited

behavior turn_on_television(television: item, remote_control: item):
    body:
        achieve_once inhand(remote_control)
        # Temporarily hold the remote control

        touch(remote_control)
        # Use the remote control to turn on the television

        achieve is_on(television)
        # Ensure the television is switched on

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control instance

        bind television: item where:
            is_television(television)
        # Select the television instance

        locate_remote_control(remote_control)
        turn_on_television(television, remote_control)
        # Execute the behaviors to locate the remote and turn on the television with it

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior locate_remote_control(remote_control: item):
    body:
        achieve visited(remote_control)
        # Ensure the remote control is located and marked as visited

behavior turn_on_television(television: item, remote_control: item):
    body:
        achieve_once inhand(remote_control)
        # Temporarily hold the remote control

        touch(remote_control)
        # Use the remote control to turn on the television

        achieve is_on(television)
        # Ensure the television is switched on

behavior __goal__():
    body:
        bind remote_control: item where:
            is_remote_control(remote_control)
        # Select the remote control instance

        bind television: item where:
            is_television(television)
        # Select the television instance

        locate_remote_control(remote_control)
        turn_on_television(television, remote_control)
        # Execute the behaviors to locate the remote and turn on the television with it

##############################
From agent.py-> find a plan in act()
standup_executor(char)walk_executor(tvstand_135)exp(remote_control_2081, tvstand_135)standup_executor(char)walk_executor(remote_control_2081)obs(remote_control_2081, look around this place)grab_executor(remote_control_2081)touch_executor(remote_control_2081)standup_executor(char)walk_executor(television_216)switchon_executor(television_216)
##############################
From agent.py
standup_executor(char)
Robot is inside home_office_161. Robot is close couch_192. Robot is on couch_192. 
##############################
From agent.py
walk_executor(tvstand_135)
Find remote_control_2081. Find cd_player_2084. Find dvd_player_2085. Find drawing_118. Robot is inside dining_room_1. Robot is close floor_19. Robot is close tvstand_135. Robot is on couch_192. Robot is no longer inside home_office_161.Robot is no longer close couch_192.
##############################
From agent.py
exp(remote_control_2081, tvstand_135)
Find remote_control_2081. 
##############################
From agent.py-> find a plan in act()
walk_executor(remote_control_2081)obs(remote_control_2081, look around this place)grab_executor(remote_control_2081)touch_executor(remote_control_2081)walk_executor(television_216)switchon_executor(television_216)
##############################
From agent.py
walk_executor(remote_control_2081)
Robot is inside dining_room_1. Robot is close tvstand_135. Robot is close remote_control_2081. Robot is on couch_192. Robot is no longer close floor_19.
##############################
From agent.py
obs(remote_control_2081, look around this place)
Get this information:  remote_control_2081 is inside dining_room_1. remote_control_2081 is close to tvstand_135. remote_control_2081 is close to character_219. remote_control_2081 is on tvstand_135. remote_control_2081 is OFF.
##############################
From agent.py
grab_executor(remote_control_2081)
Robot is inside dining_room_1. Robot is close tvstand_135. Robot is close remote_control_2081. Robot is on couch_192. Grabbing remote_control_2081 by right hand. 
##############################
From agent.py
touch_executor(remote_control_2081)
Robot is inside dining_room_1. Robot is close tvstand_135. Robot is close remote_control_2081. Robot is on couch_192. 
##############################
From agent.py
walk_executor(television_216)
Robot is inside home_office_161. Robot is close remote_control_2081. Robot is close television_216. Robot is close tvstand_186. Robot is on couch_192. Robot is no longer inside dining_room_1.Robot is no longer close tvstand_135.
##############################
From agent.py
switchon_executor(television_216)
Robot is inside home_office_161. Robot is close remote_control_2081. Robot is close television_216. Robot is close tvstand_186. Robot is on couch_192. 
##############################
