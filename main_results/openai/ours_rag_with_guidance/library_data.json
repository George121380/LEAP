[
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "Cut the chicken into pieces, then put it back into the fridge.",
        "cdl": " \nbehavior cut_chicken(chicken:item, cutting_board:item):\n    body:\n        achieve cut(chicken) \n        # Goal to cut the chicken into pieces\n\nbehavior store_chicken_in_fridge(chicken:item, fridge:item):\n    body:\n        achieve inside(chicken, fridge)\n        # Store the chicken inside the fridge\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken to be cut\n        \n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select an available cutting board\n        \n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select the fridge\n\n        cut_chicken(chicken, cutting_board)\n        store_chicken_in_fridge(chicken, fridge)\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "1. Fill a bowl with water and place it on the table in the home office.",
        "cdl": "behavior move_bowl_to_home_office_table(bowl:item, table:item):\n    body:\n        achieve on(bowl, table)\n        # Move the bowl to the specified table in the home office\n\nbehavior __goal__():\n    body:\n        bind bowl: item where:\n            is_bowl(bowl) and has_water(bowl)\n        # Select the bowl with water\n        \n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind home_office_table: item where:\n            is_table(home_office_table) and inside(home_office_table, home_office)\n        # Select a table in the home office\n\n        bind dining_room_table: item where:\n            is_table(dining_room_table) and on(bowl, dining_room_table)\n        # Select the table in the dining room where the bowl is currently located\n\n        observe(home_office_table, \"Find a suitable table in the home office\")\n        move_bowl_to_home_office_table(bowl, home_office_table)"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "2. Find your cat and place it on the same table.",
        "cdl": " \nbehavior find_cat_and_place_on_table(cat:item, table:item):\n    body:\n        achieve on(cat, table)\n\nbehavior __goal__():\n    body:\n        bind cat: item where:\n            is_cat(cat)\n        # Select the cat with the ID 2069\n        \n        bind table: item where:\n            is_table(table) and id[table]==270\n        # Select the table with ID 270 in the home office\n\n        find_cat_and_place_on_table(cat, table)\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "Clean the bathroom sink directly.",
        "cdl": " \nbehavior scrub_sink(sink:item):\n    body:\n        scrub(sink)\n\nbehavior rinse_sink(sink:item):\n    body:\n        rinse(sink)\n\nbehavior __goal__():\n    body:\n        bind sink: item where:\n            is_sink(sink) and dirty(sink)\n        # Select the dirty sink\n\n        scrub_sink(sink)\n        # Scrub the sink to clean it\n\n        rinse_sink(sink)\n        # Rinse the sink after scrubbing to ensure cleanliness\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "1. Identify all rooms in the household.",
        "cdl": " \nbehavior identify_rooms():\n    body:\n        foreach room: item:\n            if is_room(room) and not visited(room):\n                # Identify all rooms by checking unvisited items categorized as rooms\n                observe(room, \"Identify this as a room\")\n\nbehavior __goal__():\n    body:\n        identify_rooms()\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "2. Turn on at least one light in each room.",
        "cdl": " \nbehavior turn_on_light(light:item):\n    body:\n        achieve is_on(light)\n        # Turn on the light\n\nbehavior ensure_light_in_room(room:item):\n    body:\n        foreach light: item:\n            if is_light(light) and inside(light, room):\n                turn_on_light(light)\n\nbehavior __goal__():\n    body:\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n        ensure_light_in_room(dining_room)\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        ensure_light_in_room(home_office)\n\n        bind bedroom1: item where:\n            is_bedroom(bedroom1) and id[bedroom1] == 220\n        ensure_light_in_room(bedroom1)\n\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        ensure_light_in_room(bathroom)\n\n        bind bedroom2: item where:\n            is_bedroom(bedroom2) and id[bedroom2] == 327\n        ensure_light_in_room(bedroom2)\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "Clean the bathroom sink directly.",
        "cdl": " \nbehavior scrub_sink(sink:item):\n    body:\n        scrub(sink)\n\nbehavior rinse_sink(sink:item):\n    body:\n        rinse(sink)\n\nbehavior __goal__():\n    body:\n        bind sink: item where:\n            is_sink(sink) and dirty(sink)\n        # Select the dirty sink\n\n        scrub_sink(sink)\n        # Scrub the sink to clean it\n\n        rinse_sink(sink)\n        # Rinse the sink after scrubbing to ensure cleanliness\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Grab a cup and get close to a faucet.",
        "cdl": " \nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to grab\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet to move close\n\n        achieve_once inhand(cup)\n        # Grab the cup\n\n        achieve close_char(char, faucet)\n        # Move close to the faucet\n "
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Turn on the faucet to fill the cup with water.",
        "cdl": " \nbehavior fill_cup_with_water(cup: item, faucet: item):\n    body:\n        achieve_once is_on(faucet)\n        # Turn on the faucet to fill the cup with water\n        achieve has_water(cup)\n        # Ensure the cup has water in it\n        achieve_once is_off(faucet)\n        # Turn off the faucet once the cup is filled\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and close_char(char, cup)\n        # Ensure the cup is in hand or close proximity\n\n        bind faucet: item where:\n            is_faucet(faucet) and close_char(char, faucet)\n        # Ensure the character is close to a faucet\n\n        fill_cup_with_water(cup, faucet)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Put the cup of water in the fridge.",
        "cdl": " \nbehavior put_cup_of_water_in_fridge(cup:item, fridge:item):\n    body:\n        achieve inside(cup, fridge)\n\nbehavior adjust_for_fridge(cup:item, fridge:item):\n    body:\n        if exists char_holding: item : inhand(char_holding):\n            achieve_once has_a_free_hand(char)\n        put_cup_of_water_in_fridge(cup, fridge)\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and has_water(cup)\n        # Select the cup with water\n\n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select the fridge\n\n        observe(fridge, \"Distinguish between freezer and fridge section\")\n        adjust_for_fridge(cup, fridge)\n"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Boil the egg.",
        "cdl": " \nbehavior fill_pot_with_water(pot:item, faucet:item):\n    body:\n        achieve has_water(pot)\n        # Ensure the pot is filled with water\n\nbehavior start_boiling(pot:item, stove:item):\n    body:\n        achieve on(pot, stove) \n        # Place the pot on the stove \n        achieve is_on(stove)\n        # Turn the stove on to boil the water\n\nbehavior boil_egg(egg:item, pot:item):\n    body:\n        achieve inside(egg, pot)\n        # Ensure the egg is inside the pot\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select an egg\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot, faucet)\n        start_boiling(pot, stove)\n        boil_egg(egg, pot)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Find the book and put it on the coffee table in the home office.",
        "cdl": " \nbehavior find_and_place_book_on_table(book: item, table: item):\n    body:\n        achieve on(book, table)\n        # Place the book on the table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_book_on_table(book, coffee_table)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Open the window in the home office.",
        "cdl": "\nbehavior open_window(window:item):\n    body:\n        achieve open(window)\n\nbehavior __goal__():\n    body:\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind window: item where:\n            is_window(window) and inside(window, home_office)\n        # Select a window that is inside the home office\n\n        open_window(window)\n        # Execute the goal of opening the window in the home office\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "1. Identify all the rooms in the house.",
        "cdl": "\nbehavior identify_all_rooms():\n    body:\n        foreach room: item:\n            if is_room(room) and not visited(room):\n                # Identify all rooms by checking unvisited items categorized as rooms\n                observe(room, \"Identify this as a room\")\n\nbehavior __goal__():\n    body:\n        identify_all_rooms()\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "2. Check if there is a light on in each room. If not, turn on a light in that room.",
        "cdl": " \nbehavior check_and_turn_on_light(room:item):\n    body:\n        bind light: item where:\n            is_light(light) and inside(light, room)\n        if not is_on(light):\n            achieve is_on(light)\n\nbehavior __goal__():\n    body:\n        bind bathroom1: item where:\n            is_bathroom(bathroom1)\n        # Select the bathroom observed in action 1 and 2\n        check_and_turn_on_light(bathroom1)\n        \n        bind dining_room41: item where:\n            is_dining_room(dining_room41)\n        # Select the dining room observed in action 3 and 4\n        check_and_turn_on_light(dining_room41)\n        \n        bind bedroom162: item where:\n            is_bedroom(bedroom162)\n        # Select the bedroom observed in action 5 and 6\n        check_and_turn_on_light(bedroom162)\n        \n        bind home_office241: item where:\n            is_home_office(home_office241)\n        # Select the home office observed in action 7 and 8\n        check_and_turn_on_light(home_office241)\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Locate the basket that contains clothes.",
        "cdl": " \nbehavior locate_basket(basket:item):\n    body:\n        achieve close_char(char, basket)\n        # Move close to the basket to locate it\n\nbehavior __goal__():\n    body:\n        if exists basket: item : is_basket_for_clothes(basket):\n            # Check if there is any known basket for clothes\n            bind basket: item where:\n                is_basket_for_clothes(basket)\n            locate_basket(basket)\n        else:\n            # If no known basket, explore the area to locate one\n            foreach basket: item:\n                if is_basket_for_clothes(basket) and not visited(basket):\n                    observe(basket, \"Locate the basket for clothes\")\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Put all the clothes from the basket into the washing machine.",
        "cdl": " \nbehavior put_clothes_in_washing_machine(clothes:item, washing_machine:item):\n    body:\n        achieve inside(clothes, washing_machine)\n        # Place the clothes inside the washing machine\n\nbehavior __goal__():\n    body:\n        bind basket: item where:\n            is_basket_for_clothes(basket)\n        # Select the basket containing clothes\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Select the washing machine\n\n        foreach clothes: item:\n            if is_clothes(clothes) and inside(clothes, basket):\n                put_clothes_in_washing_machine(clothes, washing_machine)\n                # Place all clothes from the basket into the washing machine\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "3. Start the washing machine to wash the clothes.",
        "cdl": " \nbehavior start_washing_machine(washing_machine:item):\n    body:\n        achieve is_on(washing_machine)\n\nbehavior __goal__():\n    body:\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine) and id[washing_machine]==2007\n        # Bind to the specific washing machine with ID 2007\n\n        start_washing_machine(washing_machine)\n"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "Open the windows in the bathroom.",
        "cdl": " \nbehavior open_window(window:item):\n    body:\n        achieve open(window)\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Select the bathroom\n\n        bind window: item where:\n            is_window(window) and inside(window, bathroom)\n        # Select the window inside the bathroom\n\n        open_window(window)\n        # Execute the goal of opening the window in the bathroom\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "Wash the bowls and the plates using the dishwasher.",
        "cdl": "\nbehavior load_dishwasher(item:item, dishwasher:item):\n    body:\n        achieve inside(item, dishwasher)\n        # Load the item into the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve closed(dishwasher) # Ensure the dishwasher is closed\n        achieve is_on(dishwasher) # Turn on the dishwasher to start cleaning\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select a dishwasher\n\n        foreach item: item:\n            if is_plate(item) or is_bowl(item):\n                load_dishwasher(item, dishwasher)\n                # Load plates and bowls into the dishwasher\n\n        start_dishwasher(dishwasher)\n        # Start the dishwasher to wash the items\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Locate the milk, turkey, egg, fish, and chicken.",
        "cdl": " \ndef has_milk_turkey_egg_fish_chicken(item: item):\n    # Function to check if there is milk, turkey, egg, fish, or chicken near the specified item\n    symbol found_item = exists o: item : (is_milk(o) or is_food_turkey(o) or is_food_egg(o) or is_food_fish(o) or is_food_chicken(o)) and close(o, item)\n    return found_item\n\nbehavior __goal__():\n    body:\n        if exists item: item : has_milk_turkey_egg_fish_chicken(item):\n            # If we have already found items based on the available information\n            bind fridge: item where:\n                is_fridge(fridge)\n            observe(fridge,\"Check if there are milk, turkey, egg, fish, or chicken close to the fridge\")\n\n        else:\n            # Check around the scene for milk, turkey, egg, fish or chicken\n            foreach item: item:\n                if not visited(item):\n                    observe(item,\"Look for milk, turkey, egg, fish, or chicken nearby\")\n\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Put the milk, turkey, egg, fish, and chicken on the table in the dining room.",
        "cdl": " \nbehavior place_on_table(item:item, table:item):\n    body:\n        achieve on(item, table)\n        # Place the item on the table in the dining room\n\nbehavior __goal__():\n    body:\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n        # Select the dining room\n\n        bind table: item where:\n            is_table(table) and inside(table, dining_room)\n        # Select a table inside the dining room\n        \n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind turkey: item where:\n            is_food_turkey(turkey)\n        # Select the turkey\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        bind fish: item where:\n            is_food_fish(fish)\n        # Select the fish\n\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        place_on_table(milk, table)\n        place_on_table(turkey, table)\n        place_on_table(egg, table)\n        place_on_table(fish, table)\n        place_on_table(chicken, table)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Boil some rice in a pot.",
        "cdl": " \ndef has_water_in_pot(pot: item):\n    # Function to check if there is water in a specified pot\n    symbol has_water=has_water(pot)\n    return has_water\n\nbehavior fill_pot_with_water(pot:item, faucet:item):\n    body:\n        achieve has_water(pot)\n        # Fill the pot with water using the faucet\n\nbehavior boil_rice(pot:item, stove:item, rice:item):\n    body:\n        achieve on(pot, stove)\n        # Place the pot on the stove\n        achieve inside(rice, pot)\n        # Place the rice inside the pot\n        achieve is_on(stove)\n        # Turn the stove on to start boiling the rice\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind rice: item where:\n            is_food_rice(rice)\n        # Select rice\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        if not has_water_in_pot(pot):\n            fill_pot_with_water(pot, faucet)\n        boil_rice(pot, stove, rice)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "Cut the chicken into pieces, then put it back in the fridge.",
        "cdl": "\nbehavior cut_chicken(chicken:item, cutting_board:item):\n    body:\n        achieve cut(chicken)\n\nbehavior store_chicken_in_fridge(chicken:item, fridge:item):\n    body:\n        achieve inside(chicken, fridge)\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken to be cut\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select an available cutting board\n\n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select the fridge\n\n        cut_chicken(chicken, cutting_board)\n        store_chicken_in_fridge(chicken, fridge)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Grab a cup and get close to a faucet.",
        "cdl": " \nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to grab\n\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n        # Select a dining room\n        \n        bind table: item where:\n            is_table(table) and inside(table, dining_room)\n        # Select a table inside the dining room\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet\n\n        achieve_once inhand(cup)\n        # Grab the cup\n\n        observe(dining_room, \"Identify dining room details for guidance\")\n        observe(table, \"Locate the cup on the table\")\n        achieve close_char(char, faucet)\n        # Move close to the faucet\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "Turn on the lights in the bedroom. Then turn on the lights in the bathroom.",
        "cdl": " \nbehavior ensure_light_in_bedroom(light:item):\n    body:\n        achieve is_on(light)\n        # Turn on the light in the bedroom\n\nbehavior ensure_light_in_bathroom(light:item):\n    body:\n        achieve is_on(light)\n        # Turn on the light in the bathroom\n\nbehavior __goal__():\n    body:\n        bind bedroom: item where:\n            is_bedroom(bedroom)\n        # Bind to the bedroom\n\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Bind to the bathroom\n\n        bind bedroom_light: item where:\n            is_light(bedroom_light) and inside(bedroom_light, bedroom)\n        # Bind to the light in the bedroom\n        ensure_light_in_bedroom(bedroom_light)\n\n        bind bathroom_light: item where:\n            is_light(bathroom_light) and inside(bathroom_light, bathroom)\n        # Bind to the light in the bathroom\n        ensure_light_in_bathroom(bathroom_light)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Find the spectacles and put them on the coffee table in the home office.  ",
        "cdl": " \nbehavior find_and_place_spectacles_on_table(spectacles: item, table: item):\n    body:\n        achieve on(spectacles, table)\n        # Place the spectacles on the table in the home office\n\nbehavior __goal__():\n    body:\n        bind spectacles: item where:\n            is_spectacles(spectacles)\n        # Select the spectacles to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_coffee_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_spectacles_on_table(spectacles, coffee_table)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Find the book and put it on the coffee table in the home office.",
        "cdl": " \nbehavior find_and_place_book_on_table(book: item, table: item):\n    body:\n        achieve on(book, table)\n        # Place the book on the coffee table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_coffee_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_book_on_table(book, coffee_table)\n"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Cut the bread and put it in the toaster.",
        "cdl": "behavior cut_bread(bread:item, cutting_board:item):\n    body:\n        achieve cut(bread)\n        # Goal to cut the bread into slices\n\nbehavior place_bread_in_toaster(bread:item, toaster:item):\n    body:\n        achieve inside(bread, toaster)\n        # Place the bread inside the toaster\n\nbehavior __goal__():\n    body:\n        bind bread: item where:\n            is_food_bread(bread)\n        # Select the bread to be cut\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select an available cutting board\n\n        bind toaster: item where:\n            is_toaster(toaster)\n        # Select a toaster\n\n        observe(toaster, \"Check if the toaster is plugged in\")\n        cut_bread(bread, cutting_board)\n        place_bread_in_toaster(bread, toaster)"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Find the book and place it on the coffee table in the home office.",
        "cdl": " \nbehavior find_and_place_book_on_table(book: item, table: item):\n    body:\n        achieve on(book, table)\n        # Place the book on the table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_coffee_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_book_on_table(book, coffee_table)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Open the window in the home office.",
        "cdl": " \nbehavior open_window(window: item):\n    body:\n        achieve open(window)\n\nbehavior __goal__():\n    body:\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind window: item where:\n            is_window(window) and inside(window, home_office)\n        # Select a window that is inside the home office\n\n        open_window(window)\n        # Execute the goal of opening the window in the home office\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Get a cup and fill it with water.",
        "cdl": " \nbehavior fetch_cup(cup:item):\n    body:\n        achieve_once inhand(cup)\n\nbehavior fill_cup_with_water(cup:item, faucet:item):\n    body:\n        achieve_once is_on(faucet)\n        achieve has_water(cup)\n        achieve_once is_off(faucet)\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to fetch\n\n        fetch_cup(cup)\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet to fill the cup\n\n        achieve close_char(char, faucet)\n        # Move close to the faucet\n\n        fill_cup_with_water(cup, faucet)\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "1. Get close to the computer in the home office.",
        "cdl": " \nbehavior __goal__():\n    body:\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind computer: item where:\n            is_computer(computer) and inside(computer, home_office)\n        # Select the computer inside the home office\n\n        achieve close_char(char, computer)\n        # Move the character close to the computer\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "2. Sit on the chair in front of the computer.",
        "cdl": " \nbehavior sit_on_chair(chair:item):\n    body:\n        achieve on_char(char, chair)\n        # Sit on the chair\n\nbehavior __goal__():\n    body:\n        bind computer: item where:\n            is_computer(computer) and id[computer]==417\n        # Select the computer with this specific identifier\n\n        bind chair: item where:\n            is_chair(chair) and close(chair, computer)\n        # Select the chair close to the specified computer\n        \n        sit_on_chair(chair)\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "3. Touch the mouse to turn on the computer.",
        "cdl": " \nbehavior turn_on_computer_by_touching_mouse(mouse:item, computer:item):\n    body:\n        achieve is_on(computer)\n        touch(mouse)\n\nbehavior __goal__():\n    body:\n        bind computer: item where:\n            is_computer(computer) and id[computer] == 417\n        # Select the computer with ID 417\n\n        bind mouse: item where:\n            is_mouse(mouse) and close(mouse, computer)\n        # Select a mouse close to the computer\n\n        turn_on_computer_by_touching_mouse(mouse, computer)\n "
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "4. Type on the keyboard to send an email.",
        "cdl": " \nbehavior type_email_on_keyboard(keyboard:item, computer:item):\n    body:\n        achieve is_on(computer)\n        # Ensure the computer is on before typing\n        type(keyboard)\n        # Type on the keyboard to send an email\n\nbehavior __goal__():\n    body:\n        bind keyboard: item where:\n            is_keyboard(keyboard)\n        # Select a keyboard\n\n        bind computer: item where:\n            is_computer(computer) and id[computer] == 417\n        # Select computer_417\n\n        type_email_on_keyboard(keyboard, computer)\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "1. Identify all the rooms in the household.",
        "cdl": " \nbehavior identify_rooms():\n    body:\n        foreach room: item:\n            if is_room(room) and not visited(room):\n                # Identify all rooms by checking unvisited items categorized as rooms\n                observe(room, \"Identify this as a room\")\n\nbehavior __goal__():\n    body:\n        identify_rooms()\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "2. Check each room to ensure at least one light is on.",
        "cdl": "behavior check_light_in_room(room:item):\n    body:\n        foreach light: item:\n            if is_light(light) and inside(light, room):\n                if not is_on(light):\n                    achieve is_on(light)\n\nbehavior __goal__():\n    body:\n        bind bathroom_1: item where:\n            is_bathroom(bathroom_1)\n        # Select bathroom_1 identified in action 1 and 2\n        check_light_in_room(bathroom_1)\n        \n        bind bedroom_67: item where:\n            is_bedroom(bedroom_67)\n        # Select bedroom_67 identified in action 3 and 4\n        check_light_in_room(bedroom_67)\n        \n        bind dining_room_201: item where:\n            is_dining_room(dining_room_201)\n        # Select dining_room_201 identified in action 5 and 6\n        check_light_in_room(dining_room_201)\n        \n        bind home_office_319: item where:\n            is_home_office(home_office_319)\n        # Select home_office_319 identified in action 7 and 8\n        check_light_in_room(home_office_319)"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Identify the basket that contains clothes.",
        "cdl": " \nbehavior locate_basket(basket: item):\n    body:\n        achieve close_char(char, basket)\n        # Move close to the basket to locate it\n\nbehavior __goal__():\n    body:\n        if exists basket: item : is_basket_for_clothes(basket):\n            # Check if there is any known basket for clothes\n            bind basket: item where:\n                is_basket_for_clothes(basket)\n            locate_basket(basket)\n        else:\n            # If no known basket, explore the area to locate one\n            bind bathroom: item where:\n                is_bathroom(bathroom)\n            foreach basket: item:\n                if is_basket_for_clothes(basket) and inside(basket, bathroom) and not visited(basket):\n                    observe(basket, \"Locate the basket for clothes\")\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Use the washing machine to wash the clothes.",
        "cdl": "behavior load_clothes_into_washing_machine(clothes:item, washing_machine:item):\n    body:\n        achieve inside(clothes, washing_machine)\n\nbehavior start_washing_machine(washing_machine:item):\n    body:\n        achieve is_on(washing_machine)\n\nbehavior __goal__():\n    body:\n        bind basket: item where:\n            is_basket_for_clothes(basket) and id[basket] == 2040\n        # Select the basket with clothes with a specified ID\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Select a washing machine\n        \n        foreach clothes: item:\n            if is_clothes(clothes) and inside(clothes, basket):\n                load_clothes_into_washing_machine(clothes, washing_machine)\n                # Place all clothes from the basket into the washing machine\n\n        start_washing_machine(washing_machine)\n        # Start the washing machine to wash the clothes"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "Open the windows in the bathroom.",
        "cdl": "behavior open_window(window:item):\n    body:\n        achieve open(window)\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Select the bathroom\n\n        bind window: item where:\n            is_window(window) and inside(window, bathroom)\n        # Select the window inside the bathroom\n\n        open_window(window)\n        # Execute the goal of opening the window in the bathroom"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "Boil the vegetables using a pot on the stove.",
        "cdl": " \nbehavior fill_pot_with_water(pot: item, faucet: item):\n    body:\n        achieve has_water(pot)\n        # Fill the pot with water using the faucet\n\nbehavior start_boiling(pot: item, stove: item):\n    body:\n        achieve on(pot, stove)\n        # Place the pot on the stove\n        achieve is_on(stove)\n        # Turn on the stove to start boiling\n\nbehavior add_vegetables_to_pot(vegetables: item, pot: item):\n    body:\n        achieve inside(vegetables, pot)\n        # Place the vegetables inside the pot\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind vegetables: item where:\n            is_food_vegetable(vegetables)\n        # Select vegetables\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot, faucet)\n        start_boiling(pot, stove)\n        add_vegetables_to_pot(vegetables, pot)\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "1. Load the bowls and plates into the dishwasher and start it.",
        "cdl": " \nbehavior load_dishwasher(item:item, dishwasher:item):\n    body:\n        achieve inside(item, dishwasher)\n        # Load the item into the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve closed(dishwasher) # Ensure the dishwasher is closed\n        achieve is_on(dishwasher) # Turn on the dishwasher to start cleaning\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select a dishwasher\n\n        foreach item: item:\n            if is_plate(item) or is_bowl(item):\n                load_dishwasher(item, dishwasher)\n                # Load plates and bowls into the dishwasher\n\n        start_dishwasher(dishwasher)\n        # Start the dishwasher to wash the items\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "1. Slice some chicken.",
        "cdl": "behavior cut_chicken(chicken:item, cutting_board:item):\n    body:\n        achieve cut(chicken)\n        # Goal to cut the chicken into slices\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select an available cutting board\n\n        cut_chicken(chicken, cutting_board)\n        # Cut the chicken using the cutting board"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "2. Give the sliced chicken to the cat.",
        "cdl": " \nbehavior give_chicken_to_cat(chicken:item, cat:item):\n    body:\n        achieve close(chicken, cat)\n        # Bring the chicken close to the cat\n        \nbehavior __goal__():\n    body:\n        bind sliced_chicken: item where:\n            is_food_chicken(sliced_chicken) and cut(sliced_chicken)\n        # Select the sliced chicken\n\n        bind cat: item where:\n            is_cat(cat)\n        # Select the cat\n\n        give_chicken_to_cat(sliced_chicken, cat)\n        # Give the sliced chicken to the cat\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "1. Cut the chicken into slices.",
        "cdl": "behavior cut_chicken(chicken:item, cutting_board:item):\n    body:\n        achieve cut(chicken)\n        # Goal to cut the chicken into slices\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select an available cutting board\n\n        cut_chicken(chicken, cutting_board)\n        # Cut the chicken using the cutting board"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "2. Put the sliced chicken close to the cat.",
        "cdl": " \nbehavior place_chicken_close_to_cat(chicken:item, cat:item):\n    body:\n        achieve close(chicken, cat)\n\nbehavior __goal__():\n    body:\n        bind sliced_chicken: item where:\n            is_food_chicken(sliced_chicken) and cut(sliced_chicken)\n        # Select the sliced chicken\n\n        bind cat: item where:\n            is_cat(cat)\n        # Select the cat\n\n        place_chicken_close_to_cat(sliced_chicken, cat)\n        # Place the sliced chicken close to the cat\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Find your spectacles and put them on the coffee table in the home office.",
        "cdl": " \nbehavior find_and_place_spectacles_on_table(spectacles: item, table: item):\n    body:\n        achieve on(spectacles, table)\n        # Place the spectacles on the table in the home office\n\nbehavior __goal__():\n    body:\n        bind spectacles: item where:\n            is_spectacles(spectacles)\n        # Select the spectacles to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_spectacles_on_table(spectacles, coffee_table)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Find the book and put it on the coffee table in the home office.",
        "cdl": " \nbehavior find_and_place_book_on_table(book: item, table: item):\n    body:\n        achieve on(book, table)\n        # Place the book on the coffee table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_book_on_table(book, coffee_table)\n"
    },
    {
        "task_name": "Change TV channel",
        "source_sub_task": "1. Find the couch and sit on it.",
        "cdl": " \nbehavior find_and_sit_on_couch(couch: item):\n    body:\n        achieve on_char(char, couch)\n        # Sit on the couch\n\nbehavior __goal__():\n    body:\n        if exists couch: item : is_couch(couch):\n            # Check if there is any known couch\n            bind couch: item where:\n                is_couch(couch)\n            find_and_sit_on_couch(couch)\n        else:\n            # If no known couch, explore the area to locate one\n            foreach couch: item:\n                if is_couch(couch) and not visited(couch):\n                    observe(couch, \"Check if this is a suitable couch to sit on\")\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Boil some water using a pot.",
        "cdl": " \nbehavior fill_pot_with_water(pot: item, faucet: item):\n    body:\n        achieve has_water(pot)\n        # Fill the pot with water using the faucet\n\nbehavior place_pot_on_stove(pot: item, stove: item):\n    body:\n        achieve on(pot, stove)\n        # Place the pot on the stove\n\nbehavior start_boiling_water(pot: item, stove: item):\n    body:\n        achieve is_on(stove)\n        # Turn on the stove to start boiling the water\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet to fill the pot\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot, faucet)\n        place_pot_on_stove(pot, stove)\n        start_boiling_water(pot, stove)\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "1. Get close to the computer in the home office.",
        "cdl": " \nbehavior __goal__():\n    body:\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind computer: item where:\n            is_computer(computer) and inside(computer, home_office)\n        # Select the computer inside the home office\n\n        achieve close_char(char, computer)\n        # Move the character close to the computer\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "2. Sit on the chair in front of the computer.",
        "cdl": " \nbehavior sit_on_chair(chair:item):\n    body:\n        achieve on_char(char, chair)\n        # Sit on the chair\n\nbehavior __goal__():\n    body:\n        bind computer: item where:\n            is_computer(computer) and id[computer]==2110\n        # Select the computer with the specific identifier 2110\n\n        bind chair: item where:\n            is_chair(chair) and close(chair, computer)\n        # Select the chair close to the specified computer\n\n        sit_on_chair(chair)\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "3. Touch the mouse to turn on the computer.",
        "cdl": " \nbehavior turn_on_computer_by_touching_mouse(mouse:item, computer:item):\n    body:\n        achieve is_on(computer)\n        touch(mouse)\n\nbehavior __goal__():\n    body:\n        bind computer: item where:\n            is_computer(computer)\n        # Select the computer\n\n        bind mouse: item where:\n            is_mouse(mouse) and close(mouse, computer)\n        # Select the mouse close to the computer\n\n        turn_on_computer_by_touching_mouse(mouse, computer)\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "1. Load the bowls and plates into the dishwasher and start it.",
        "cdl": "behavior load_dishwasher(item:item, dishwasher:item):\n    body:\n        achieve inside(item, dishwasher)\n        # Load the item into the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve closed(dishwasher) # Ensure the dishwasher is closed\n        achieve is_on(dishwasher) # Turn on the dishwasher to start cleaning\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select a dishwasher\n\n        foreach item: item:\n            if is_plate(item) or is_bowl(item):\n                load_dishwasher(item, dishwasher)\n                # Load plates and bowls into the dishwasher\n\n        start_dishwasher(dishwasher)\n        # Start the dishwasher to wash the items"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "2. Wash the forks by hand.",
        "cdl": " \nbehavior wash_fork_by_hand(fork:item):\n    body:\n        wash(fork)\n        # Wash the fork by hand\n\nbehavior __goal__():\n    body:\n        bind fork: item where:\n            is_fork(fork)\n        # Select a fork to wash\n\n        wash_fork_by_hand(fork)\n        # Execute washing the fork by hand\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "1. Find the cat.",
        "cdl": " \nbehavior locate_cat(cat:item):\n    body:\n        achieve close_char(char, cat)\n        # Move close to the cat to locate it\n\nbehavior __goal__():\n    body:\n        if exists cat: item : is_cat(cat):\n            # Check if there is any known cat\n            bind cat: item where:\n                is_cat(cat)\n            locate_cat(cat)\n        else:\n            # If no known cat, explore the area to locate one\n            foreach cat: item:\n                if is_cat(cat) and not visited(cat):\n                    observe(cat, \"Check if this is the cat you are looking for\")\n "
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "2. Locate a suitable sink for washing the cat.",
        "cdl": " \nbehavior clean_sink(sink:item):\n    body:\n        scrub(sink)\n        # Scrub the sink to clean it\n\n        rinse(sink)\n        # Rinse the sink after scrubbing to ensure cleanliness\n\nbehavior find_suitable_sink():\n    body:\n        foreach sink: item:\n            if is_sink(sink) and not visited(sink):\n                observe(sink, \"Check if the sink is clean and has a functioning faucet\")\n\nbehavior __goal__():\n    body:\n        symbol sink_suitable=exists sink: item : is_sink(sink) and clean(sink) and not dirty(sink)\n        \n        if sink_suitable:\n            bind sink: item where:\n                is_sink(sink) and clean(sink) and not dirty(sink)\n            achieve close_char(char, sink)\n        \n        else:\n            bind sink_19: item where:\n                is_sink(sink_19) and id[sink_19]==19\n                \n            bind sink_120: item where:\n                is_sink(sink_120) and id[sink_120]==120\n\n            if not clean(sink_19):\n                clean_sink(sink_19)\n            \n            if not clean(sink_120):\n                clean_sink(sink_120)\n            \n            find_suitable_sink()\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "3. Wash the cat in the sink.",
        "cdl": " \nbehavior wash_cat_in_sink(cat:item, sink:item, faucet:item):\n    body:\n        achieve_once inside(cat, sink)\n        # Place the cat into the sink for washing\n\n        achieve_once is_on(faucet)\n        # Turn on the faucet\n\n        wash(cat)\n        # Wash the cat using the water from the faucet\n\n        achieve_once is_off(faucet)\n        # Ensure the faucet is turned off after washing\n\nbehavior __goal__():\n    body:\n        bind cat: item where:\n            is_cat(cat) and id[cat] == 2069\n        # Select the cat with ID 2069\n\n        bind sink: item where:\n            is_sink(sink) and id[sink] == 19\n        # Select the sink with ID 19\n\n        bind faucet: item where:\n            is_faucet(faucet) and close(faucet, sink)\n        # Select the faucet close to sink ID 19\n\n        wash_cat_in_sink(cat, sink, faucet)\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "1. Find the bathroom sink.  ",
        "cdl": " \nbehavior find_bathroom_sink(sink:item):\n    body:\n        achieve close_char(char, sink)\n        # Move close to the bathroom sink\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        if exists sink: item : is_sink(sink) and inside(sink, bathroom):\n            # Check if there is any known bathroom sink\n            bind sink: item where:\n                is_sink(sink) and inside(sink, bathroom)\n            find_bathroom_sink(sink)\n        else:\n            # If no known bathroom sink, explore the area to locate one\n            foreach sink: item:\n                if is_sink(sink) and inside(sink, bathroom) and not visited(sink):\n                    observe(sink, \"Locate the bathroom sink\")\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "2. Fill the sink with water and add soap to make it soapy.",
        "cdl": " \ndef has_faucet(sink:item):\n    # Determine whether a sink has a faucet\n    symbol has_a_faucet = exists faucet: item: is_faucet(faucet) and close(faucet, sink)\n    return has_a_faucet\n\nbehavior prepare_soapy_water(sink: item, soap: item):\n    body:\n        achieve_once inside(soap, sink)\n        # Place soap inside the sink\n\n        if has_faucet(sink):\n            bind faucet: item where:\n                is_faucet(faucet) and close(faucet, sink)\n            achieve_once is_on(faucet)\n            # Turn the faucet on to fill the sink with water\n\n            achieve has_water(sink)\n            # Ensure the sink is filled with water\n\n            achieve_once is_off(faucet)\n            # Turn the faucet off after the sink is filled\n\nbehavior __goal__():\n    body:\n        bind sink: item where:\n            is_sink(sink) and id[sink] == 19\n        # Select the sink with ID 19\n\n        bind soap: item where:\n            is_soap(soap)\n        # Select an item categorized as soap\n\n        prepare_soapy_water(sink, soap)\n"
    },
    {
        "task_name": "Make coffee",
        "source_sub_task": "1. Make a cup of coffee using the coffee maker.",
        "cdl": " \nbehavior make_coffee(coffe_maker: item, cup: item):\n    body:\n        achieve inside(cup, coffe_maker)\n        # Ensure the cup is positioned to receive the coffee\n\n        achieve is_on(coffe_maker)\n        # Turn on the coffee maker\n\nbehavior __goal__():\n    body:\n        bind coffe_maker: item where:\n            is_coffe_maker(coffe_maker)\n        # Select the coffee maker\n\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to use\n        \n        make_coffee(coffe_maker, cup)\n        # Execute making the coffee using the coffee maker\n "
    },
    {
        "task_name": "Make coffee",
        "source_sub_task": "2. Add milk and sugar to the coffee.",
        "cdl": " \nbehavior add_milk_and_sugar_to_coffee(milk: item, sugar: item, cup: item):\n    body:\n        achieve inside(milk, cup)\n        # Add milk to the coffee\n        achieve inside(sugar, cup)\n        # Add sugar to the coffee\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select the cup with the coffee\n\n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind sugar: item where:\n            is_food_sugar(sugar)\n        # Select the sugar\n\n        add_milk_and_sugar_to_coffee(milk, sugar, cup)\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "Slice some chicken and give it to the cat.",
        "cdl": " \nbehavior slice_and_give_chicken(chicken:item, cat:item, cutting_board:item):\n    body:\n        achieve cut(chicken)\n        # Slice the chicken\n\n        achieve close(chicken, cat)\n        # Bring the sliced chicken close to the cat\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind cat: item where:\n            is_cat(cat)\n        # Select the cat\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        slice_and_give_chicken(chicken, cat, cutting_board)\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "Turn on the lights in the bathroom.",
        "cdl": " \nbehavior ensure_light_in_bathroom(light:item):\n    body:\n        achieve is_on(light)\n        # Turn on the light in the bathroom\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Bind to the bathroom\n\n        bind bathroom_light: item where:\n            is_light(bathroom_light) and inside(bathroom_light, bathroom)\n        # Bind to the light in the bathroom\n        ensure_light_in_bathroom(bathroom_light)\n"
    },
    {
        "task_name": "Make coffee",
        "source_sub_task": "Make a cup of coffee using the coffee maker.",
        "cdl": " \nbehavior make_coffee(coffe_maker: item, cup: item):\n    body:\n        achieve inside(cup, coffe_maker)\n        # Ensure the cup is positioned to receive the coffee\n\n        achieve is_on(coffe_maker)\n        # Turn on the coffee maker\n\nbehavior __goal__():\n    body:\n        bind coffe_maker: item where:\n            is_coffe_maker(coffe_maker)\n        # Select the coffee maker\n\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to use\n        \n        make_coffee(coffe_maker, cup)\n        # Execute making the coffee using the coffee maker\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "Prepare a sink of soapy water in the bathroom.",
        "cdl": " \ndef has_faucet(sink:item):\n    # Determine whether this sink has a faucet\n    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet,sink)\n    return has_faucet\n\nbehavior prepare_sink_of_soapy_water(sink:item, soap:item, faucet:item):\n    body:\n        achieve_once inside(soap, sink)\n        # Place the soap inside the sink\n\n        achieve close_char(char, faucet)\n        # Move close to the faucet\n\n        achieve_once is_on(faucet)\n        # Turn on the faucet to fill the sink with water\n\n        achieve has_water(sink)\n        # Ensure the sink is filled with water\n\n        achieve_once is_off(faucet)\n        # Turn off the faucet after the sink is filled\n\nbehavior __goal__():\n    body:\n        bind sink: item where:\n            is_sink(sink) and id[sink]==307\n        # Select the sink with ID 307\n\n        bind soap: item where:\n            is_soap(soap) and id[soap]==2037\n        # Select the soap with ID 2037\n\n        bind faucet: item where:\n            is_faucet(faucet) and id[faucet]==308\n        # Select the faucet with ID 308\n\n        prepare_sink_of_soapy_water(sink, soap, faucet)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Get a cup and fill it with water.",
        "cdl": " \nbehavior fetch_cup(cup:item):\n    body:\n        achieve_once inhand(cup)\n\nbehavior fill_cup_with_water(cup:item, faucet:item):\n    body:\n        achieve_once is_on(faucet)\n        achieve has_water(cup)\n        achieve_once is_off(faucet)\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to fetch\n\n        fetch_cup(cup)\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet to fill the cup\n\n        achieve close_char(char, faucet)\n        # Move close to the faucet\n\n        fill_cup_with_water(cup, faucet)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Find kiwi and slice it, then add the slices into the cup.",
        "cdl": " \nbehavior slice_kiwi(kiwi: item, cutting_board: item, knife: item):\n    body:\n        achieve cut(kiwi)\n\nbehavior place_slices_in_cup(kiwi: item, cup: item):\n    body:\n        achieve inside(kiwi, cup)\n\nbehavior __goal__():\n    body:\n        bind food_kiwi: item where:\n            is_food_kiwi(food_kiwi) and cuttable(food_kiwi)\n        # Select the kiwi that can be sliced\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        bind cup: item where:\n            is_cup(cup) and has_water(cup)\n        # Select the cup with water to place kiwi slices\n\n        slice_kiwi(food_kiwi, cutting_board, knife)\n        place_slices_in_cup(food_kiwi, cup)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "3. Cool the boiled vegetables in a bowl.",
        "cdl": " \nbehavior cool_boiled_vegetables_in_bowl(vegetables:item, bowl:item):\n    body:\n        achieve inside(vegetables, bowl)\n        # Place the boiled vegetables inside the bowl\n\nbehavior __goal__():\n    body:\n        bind vegetables: item where:\n            is_food_vegetable(vegetables) and id[vegetables] == 2113\n        # Select the boiled vegetables with ID 2113\n\n        bind bowl: item where:\n            is_bowl(bowl)\n        # Select a bowl for cooling the vegetables\n\n        cool_boiled_vegetables_in_bowl(vegetables, bowl)\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "1. Turn on the lights in the bedroom.  ",
        "cdl": "behavior ensure_light_in_bedroom(light:item):\n    body:\n        achieve is_on(light)\n        # Turn on the light in the bedroom\n\nbehavior __goal__():\n    body:\n        bind bedroom: item where:\n            is_bedroom(bedroom)\n        # Bind to the bedroom\n\n        bind bedroom_light: item where:\n            is_light(bedroom_light) and inside(bedroom_light, bedroom)\n        # Bind to the light in the bedroom\n\n        ensure_light_in_bedroom(bedroom_light)"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "2. Turn on the lights in the bathroom.",
        "cdl": " \nbehavior ensure_light_in_bathroom(light:item):\n    body:\n        achieve is_on(light)\n        # Turn on the light in the bathroom\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Bind to the bathroom\n\n        bind bathroom_light: item where:\n            is_light(bathroom_light) and inside(bathroom_light, bathroom)\n        # Bind to the light in the bathroom\n        ensure_light_in_bathroom(bathroom_light)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "Slice the chicken.",
        "cdl": " \nbehavior cut_chicken(chicken:item, cutting_board:item):\n    body:\n        achieve cut(chicken)\n        # Goal to cut the chicken into slices\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select an available cutting board\n\n        cut_chicken(chicken, cutting_board)\n        # Cut the chicken using the cutting board\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Hand wash the jacket.",
        "cdl": " \nbehavior wash_jacket_by_hand(jacket:item, sink:item):\n    body:\n        achieve_once inside(jacket, sink)\n        # Ensure the jacket is placed inside the sink for washing\n\n        achieve has_water(sink)\n        # Ensure there is water in the sink\n\n        wash(jacket)\n        # Wash the jacket by hand\n\nbehavior __goal__():\n    body:\n        bind jacket: item where:\n            is_clothes_jacket(jacket)\n        # Select the jacket to be hand washed\n\n        bind sink: item where:\n            is_sink(sink)\n        # Select a sink\n\n        observe(sink, \"Check if the sink has water before washing\")\n        wash_jacket_by_hand(jacket, sink)\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Wash the jacket using the washing machine.",
        "cdl": "behavior start_washing_machine(jacket:item, washing_machine:item):\n    body:\n        achieve inside(jacket, washing_machine)\n        # Place the jacket inside the washing machine\n\n        achieve is_on(washing_machine)\n        # Turn on the washing machine to start washing the jacket\n\nbehavior __goal__():\n    body:\n        bind jacket: item where:\n            is_clothes_jacket(jacket) and id[jacket]==2119\n        # Select the jacket with ID 2119\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Select the washing machine\n\n        start_washing_machine(jacket, washing_machine)\n        # Execute the behavior to wash the jacket using the washing machine"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "Use a pot to boil some water.",
        "cdl": "behavior fill_pot_with_water(pot: item, faucet: item):\n    body:\n        achieve has_water(pot)\n        # Fill the pot with water using the faucet\n\nbehavior place_pot_on_stove(pot: item, stove: item):\n    body:\n        achieve on(pot, stove)\n        # Place the pot on the stove\n\nbehavior start_boiling_water(pot: item, stove: item):\n    body:\n        achieve is_on(stove)\n        # Turn on the stove to start boiling the water\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet to fill the pot\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot, faucet)\n        place_pot_on_stove(pot, stove)\n        start_boiling_water(pot, stove)"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "Wash the bowls and the plates using the dishwasher.",
        "cdl": "\nbehavior load_dishwasher(item:item, dishwasher:item):\n    body:\n        achieve inside(item, dishwasher)\n        # Load the item into the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve closed(dishwasher) # Ensure the dishwasher is closed\n        achieve is_on(dishwasher) # Turn on the dishwasher to start cleaning\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select a dishwasher\n\n        foreach item: item:\n            if is_plate(item) or is_bowl(item):\n                load_dishwasher(item, dishwasher)\n                # Load plates and bowls into the dishwasher\n\n        start_dishwasher(dishwasher)\n        # Start the dishwasher to wash the items\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a cup and fill it with milk.",
        "cdl": " \nbehavior fetch_cup(cup:item):\n    body:\n        achieve_once inhand(cup)\n\nbehavior fill_cup_with_milk(cup:item, milk:item):\n    body:\n        achieve inside(milk, cup)\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to fetch\n\n        fetch_cup(cup)\n\n        bind milk: item where:\n            is_milk(milk)\n        # Select milk to fill the cup\n\n        fill_cup_with_milk(cup, milk)\n "
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Heat the cup of milk in the microwave.",
        "cdl": " \nbehavior heat_milk_in_microwave(cup:item, microwave:item):\n    body:\n        achieve inside(cup, microwave)\n        # Place the cup of milk inside the microwave\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the milk\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and id[cup] == 2087\n        # Select the cup with ID 2087, which contains the milk\n\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select a microwave\n\n        heat_milk_in_microwave(cup, microwave)\n        # Execute heating the milk in the microwave\n"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "1. Identify all the windows in the house.  ",
        "cdl": " \ndef is_window_item(window:item):\n    # Function to determine if an item is a window\n    symbol is_windowItem = is_window(window)\n    return is_windowItem\n\nbehavior identify_all_windows():\n    body:\n        foreach window: item:\n            if is_window(window) and not visited(window):\n                # Identify all windows by checking unvisited items categorized as windows\n                observe(window, \"Identify this as a window\")\n\nbehavior __goal__():\n    body:\n        identify_all_windows()\n"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "2. Wipe each window with a towel.",
        "cdl": " \nbehavior wipe_window(window:item, towel:item):\n    body:\n        achieve_once inhand(towel)\n        # Hold the towel in hand to wipe the window\n        wipe(window)\n        # Wipe the window to clean it\n\nbehavior __goal__():\n    body:\n        foreach window: item:\n            if is_window(window) and dirty(window):\n                bind towel: item where:\n                    is_towel(towel) and inhand(towel)\n                # Ensure the towel is in hand\n                wipe_window(window, towel)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Locate the book.",
        "cdl": "behavior locate_book(book: item):\n    body:\n        achieve close_char(char, book)\n        # Move close to the book to locate it\n\nbehavior __goal__():\n    body:\n        if exists book: item : is_book(book):\n            # Check if there is any known book\n            bind book: item where:\n                is_book(book)\n            locate_book(book)\n        else:\n            # If no known book, explore the area to locate one\n            foreach book: item:\n                if is_book(book) and not visited(book):\n                    observe(book, \"Check if this is the book you are looking for\")"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Place the book on the coffee table in the home office.",
        "cdl": "\nbehavior place_book_on_coffee_table(book:item, coffee_table:item):\n    body:\n        achieve on(book, coffee_table)\n        # Place the book on the coffee table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_coffee_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        place_book_on_coffee_table(book, coffee_table)\n"
    },
    {
        "task_name": "Make coffee",
        "source_sub_task": "Use the coffee maker to make a cup of coffee.",
        "cdl": " \nbehavior make_coffee(coffe_maker: item, cup: item):\n    body:\n        achieve inside(cup, coffe_maker)\n        # Ensure the cup is positioned to receive the coffee\n\n        achieve is_on(coffe_maker)\n        # Turn on the coffee maker\n\nbehavior __goal__():\n    body:\n        bind coffe_maker: item where:\n            is_coffe_maker(coffe_maker)\n        # Select the coffee maker\n\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to use\n        \n        make_coffee(coffe_maker, cup)\n        # Execute making the coffee using the coffee maker\n"
    },
    {
        "task_name": "Clean the bathroom",
        "source_sub_task": "Prepare a sink of soapy water in the bathroom.",
        "cdl": " \ndef has_faucet(sink:item):\n    # Determine whether the sink has a faucet nearby\n    symbol has_faucet=exists faucet:item: is_faucet(faucet) and close(faucet, sink)\n    return has_faucet\n\nbehavior prepare_sink_of_soapy_water(sink:item, soap:item):\n    body:\n        achieve_once inside(soap, sink)\n        # Place the soap inside the sink\n\n        if has_faucet(sink):\n            bind faucet: item where:\n                is_faucet(faucet) and close(faucet, sink)\n            achieve_once is_on(faucet)\n            # Turn on the faucet to fill the sink with water\n\n            achieve has_water(sink)\n            # Ensure the sink is filled with water\n\n            achieve_once is_off(faucet)\n            # Turn off the faucet after filling the sink\n\nbehavior __goal__():\n    body:\n        bind sink: item where:\n            is_sink(sink)\n        # Select a sink\n\n        bind soap: item where:\n            is_soap(soap)\n        # Select soap\n\n        prepare_sink_of_soapy_water(sink, soap)\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Locate the basket that contains clothes.",
        "cdl": " \nbehavior locate_basket(basket:item):\n    body:\n        achieve close_char(char, basket)\n        # Move close to the basket to locate it\n\nbehavior __goal__():\n    body:\n        if exists basket: item : is_basket_for_clothes(basket):\n            # Check if there is any known basket for clothes\n            bind basket: item where:\n                is_basket_for_clothes(basket)\n            locate_basket(basket)\n        else:\n            # If no known basket, explore the area to locate one\n            foreach basket: item:\n                if is_basket_for_clothes(basket) and not visited(basket):\n                    observe(basket, \"Locate the basket for clothes\")\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Add the clothes to the washing machine.",
        "cdl": "\nbehavior put_clothes_in_washing_machine(clothes:item, washing_machine:item):\n    body:\n        achieve inside(clothes, washing_machine)\n        # Place the clothes inside the washing machine\n\nbehavior __goal__():\n    body:\n        bind basket: item where:\n            is_basket_for_clothes(basket)\n        # Select the basket containing clothes\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Select the washing machine\n\n        foreach clothes: item:\n            if is_clothes(clothes) and inside(clothes, basket):\n                put_clothes_in_washing_machine(clothes, washing_machine)\n                # Place all clothes from the basket into the washing machine\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "3. Add soap to the washing machine and run it.",
        "cdl": " \nbehavior add_soap_and_run_washing_machine(soap:item, washing_machine:item):\n    body:\n        achieve inside(soap, washing_machine)\n        # Add soap to the washing machine\n        achieve is_on(washing_machine)\n        # Start the washing machine\n\nbehavior __goal__():\n    body:\n        bind soap: item where:\n            is_soap(soap) and id[soap] == 2053\n        # Select the soap with ID 2053\n        \n        bind washing_machine: item where:\n            is_washing_machine(washing_machine) and id[washing_machine] == 2007\n        # Select the washing machine with ID 2007\n\n        add_soap_and_run_washing_machine(soap, washing_machine)\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "1. Put cleaning solution in the dishwasher.",
        "cdl": " \nbehavior add_solution_to_dishwasher(solution:item, dishwasher:item):\n    body:\n        achieve inside(solution, dishwasher)\n\nbehavior __goal__():\n    body:\n        bind cleaning_solution: item where:\n            is_cleaning_solution(cleaning_solution)\n        # Select the cleaning solution\n\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select the dishwasher\n\n        add_solution_to_dishwasher(cleaning_solution, dishwasher)\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "2. Wash the bowls and plates using the dishwasher.",
        "cdl": " \nbehavior load_dishwasher(item:item, dishwasher:item):\n    body:\n        achieve inside(item, dishwasher)\n        # Load the item into the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve closed(dishwasher) # Ensure the dishwasher is closed\n        achieve is_on(dishwasher) # Turn on the dishwasher to start cleaning\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select a dishwasher\n\n        foreach item: item:\n            if is_plate(item) or is_bowl(item):\n                load_dishwasher(item, dishwasher)\n                # Load plates and bowls into the dishwasher\n\n        start_dishwasher(dishwasher)\n        # Start the dishwasher to wash the items\n"
    },
    {
        "task_name": "Make coffee",
        "source_sub_task": "Make a cup of coffee using the coffee maker.",
        "cdl": " \nbehavior make_coffee(coffe_maker: item, cup: item):\n    body:\n        achieve inside(cup, coffe_maker)\n        # Ensure the cup is positioned to receive the coffee\n\n        achieve is_on(coffe_maker)\n        # Turn on the coffee maker\n\nbehavior __goal__():\n    body:\n        bind coffe_maker: item where:\n            is_coffe_maker(coffe_maker)\n        # Select the coffee maker\n\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to use\n\n        make_coffee(coffe_maker, cup)\n        # Execute making the coffee using the coffee maker\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Put the milk and egg on the table in the dining room.",
        "cdl": " \nbehavior place_on_table(item:item, table:item):\n    body:\n        achieve on(item, table)\n        # Place the item on the table in the dining room\n\nbehavior __goal__():\n    body:\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n        # Select the dining room\n\n        bind table: item where:\n            is_table(table) and inside(table, dining_room)\n        # Select a table inside the dining room\n        \n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        place_on_table(milk, table)\n        place_on_table(egg, table)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Throw all the items in the fridge to the trashcan.",
        "cdl": " \nbehavior throw_items_in_trash(fridge:item, trashcan:item):\n    body:\n        foreach item: item:\n            if inside(item, fridge):\n                achieve inside(item, trashcan)\n\nbehavior close_fridge(fridge:item):\n    body:\n        achieve closed(fridge)\n\nbehavior __goal__():\n    body:\n        bind fridge: item where:\n            is_fridge(fridge) and id[fridge] == 126\n        # Select the fridge with ID 126\n\n        bind trashcan: item where:\n            is_trashcan(trashcan) and id[trashcan] == 99\n        # Select the trash can with ID 99\n\n        throw_items_in_trash(fridge, trashcan)\n        close_fridge(fridge)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "3. Put the milk and egg back in the fridge.",
        "cdl": " \nbehavior place_in_fridge(item:item, fridge:item):\n    body:\n        achieve inside(item, fridge)\n        # Place the item inside the fridge\n\nbehavior close_fridge_door(fridge:item):\n    body:\n        achieve closed(fridge)\n        # Ensure the fridge door is closed\n\nbehavior __goal__():\n    body:\n        bind table: item where:\n            is_table(table) and id[table] == 114\n        # Select the dining room table with ID 114\n\n        bind milk: item where:\n            is_milk(milk) and on(milk, table)\n        # Select the milk on the table\n\n        bind food_egg: item where:\n            is_food_egg(food_egg) and on(food_egg, table)\n        # Select the egg on the table\n\n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select the fridge\n\n        place_in_fridge(milk, fridge)\n        place_in_fridge(food_egg, fridge)\n        close_fridge_door(fridge)\n"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "1. Identify all windows in the house.",
        "cdl": "behavior identify_all_windows():\n    body:\n        foreach window: item:\n            if is_window(window) and not visited(window):\n                # Identify all windows by checking unvisited items categorized as windows\n                observe(window, \"Identify this as a window\")\n\nbehavior __goal__():\n    body:\n        identify_all_windows()"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "2. Wipe each window with a towel.",
        "cdl": "behavior wipe_window(window:item, towel:item):\n    body:\n        achieve_once inhand(towel)\n        # Hold the towel in hand to wipe the window\n        wipe(window)\n        # Wipe the window to clean it\n\nbehavior __goal__():\n    body:\n        foreach window: item:\n            if is_window(window) and dirty(window):\n                bind towel: item where:\n                    is_towel(towel)\n                wipe_window(window, towel)"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Put the milk and eggs on the table in the dining room.",
        "cdl": " \nbehavior place_on_table(item:item, table:item):\n    body:\n        achieve on(item, table)\n        # Place the item on the table in the dining room\n\nbehavior __goal__():\n    body:\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n        # Select the dining room\n\n        bind table: item where:\n            is_table(table) and inside(table, dining_room)\n        # Select a table inside the dining room\n        \n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        place_on_table(milk, table)\n        place_on_table(egg, table)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Throw all the items in the fridge into the trashcan.",
        "cdl": " \nbehavior throw_items_in_trash(fridge:item, trashcan:item):\n    body:\n        foreach item: item:\n            if inside(item, fridge):\n                achieve inside(item, trashcan)\n\nbehavior close_fridge(fridge:item):\n    body:\n        achieve closed(fridge)\n\nbehavior __goal__():\n    body:\n        bind fridge: item where:\n            is_fridge(fridge) and id[fridge] == 289\n        # Select the fridge with ID 289\n\n        bind trashcan: item where:\n            is_trashcan(trashcan)\n        # Select the trash can\n\n        throw_items_in_trash(fridge, trashcan)\n        close_fridge(fridge)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "3. Put the milk and eggs back in the fridge.",
        "cdl": " \nbehavior place_in_fridge(item:item, fridge:item):\n    body:\n        achieve inside(item, fridge)\n        # Place the item inside the fridge\n\nbehavior close_fridge_door(fridge:item):\n    body:\n        achieve closed(fridge)\n        # Ensure the fridge door is closed\n\nbehavior __goal__():\n    body:\n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select the fridge\n\n        place_in_fridge(milk, fridge)\n        place_in_fridge(egg, fridge)\n        close_fridge_door(fridge)\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "1. Load the bowls and plates into the dishwasher and start the washing cycle.",
        "cdl": " \nbehavior load_dishwasher(item:item, dishwasher:item):\n    body:\n        achieve inside(item, dishwasher)\n        # Load the item into the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve closed(dishwasher) # Ensure the dishwasher is closed\n        achieve is_on(dishwasher) # Turn on the dishwasher to start cleaning\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select a dishwasher\n\n        foreach item: item:\n            if is_plate(item) or is_bowl(item):\n                load_dishwasher(item, dishwasher)\n                # Load plates and bowls into the dishwasher\n\n        start_dishwasher(dishwasher)\n        # Start the dishwasher to wash the items\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "2. Wash the forks by hand.",
        "cdl": " \nbehavior wash_fork_by_hand(fork:item):\n    body:\n        wash(fork)\n        # Wash the fork by hand\n\nbehavior __goal__():\n    body:\n        bind fork: item where:\n            is_fork(fork) and id[fork] == 2151\n        # Select the specific fork with ID 2151 to wash\n\n        wash_fork_by_hand(fork)\n        # Execute washing the fork by hand\n"
    },
    {
        "task_name": "Change TV channel",
        "source_sub_task": "Touch the remote control to turn on the TV.",
        "cdl": " \nbehavior touch_remote_to_turn_on_tv(remote_control:item, television:item):\n    body:\n        achieve is_on(television)\n        touch(remote_control)\n\nbehavior __goal__():\n    body:\n        bind remote_control: item where:\n            is_remote_control(remote_control)\n        # Select the remote control\n\n        bind television: item where:\n            is_television(television) and id[television] == 281\n        # Select the television with ID 281\n\n        touch_remote_to_turn_on_tv(remote_control, television)\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Boil rice in a pot.",
        "cdl": "\nbehavior fill_pot_with_water(pot: item, faucet: item):\n    body:\n        achieve has_water(pot)\n        # Fill the pot with water using the faucet\n\nbehavior place_pot_on_stove(pot: item, stove: item):\n    body:\n        achieve on(pot, stove)\n        # Place the pot on the stove\n\nbehavior boil_rice(pot: item, stove: item, rice: item):\n    body:\n        achieve inside(rice, pot)\n        # Place the rice inside the pot\n        achieve is_on(stove)\n        # Turn the stove on to start boiling the rice\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind rice: item where:\n            is_food_rice(rice)\n        # Select rice\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot, faucet)\n        place_pot_on_stove(pot, stove)\n        boil_rice(pot, stove, rice)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Find the spectacles and place them on the coffee table in the home office.  ",
        "cdl": "behavior find_and_place_spectacles_on_table(spectacles: item, table: item):\n    body:\n        achieve on(spectacles, table)\n        # Place the spectacles on the coffee table in the home office\n\nbehavior __goal__():\n    body:\n        bind spectacles: item where:\n            is_spectacles(spectacles)\n        # Select the spectacles to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_spectacles_on_table(spectacles, coffee_table)"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Find the book and place it on the coffee table in the home office.",
        "cdl": " \nbehavior find_and_place_book_on_table(book: item, table: item):\n    body:\n        achieve on(book, table)\n        # Place the book on the coffee table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_book_on_table(book, coffee_table)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Put milk and egg on the table in the dining room.",
        "cdl": "behavior place_on_table(item:item, table:item):\n    body:\n        achieve on(item, table)\n        # Place the item on the table in the dining room\n\nbehavior __goal__():\n    body:\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n        # Select the dining room\n\n        bind table: item where:\n            is_table(table) and inside(table, dining_room)\n        # Select a table inside the dining room\n        \n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        place_on_table(milk, table)\n        place_on_table(egg, table)"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Throw all the items in the fridge into the trashcan.",
        "cdl": " \nbehavior throw_items_in_trash(fridge:item, trashcan:item):\n    body:\n        foreach item: item:\n            if inside(item, fridge):\n                achieve inside(item, trashcan)\n\nbehavior close_fridge(fridge:item):\n    body:\n        achieve closed(fridge)\n\nbehavior __goal__():\n    body:\n        bind fridge: item where:\n            is_fridge(fridge) and id[fridge] == 140\n        # Select the fridge with ID 140\n\n        bind trashcan: item where:\n            is_trashcan(trashcan)\n        # Select the trash can\n\n        throw_items_in_trash(fridge, trashcan)\n        close_fridge(fridge)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "3. Put milk and eggs back in the fridge.",
        "cdl": "behavior place_in_fridge(item:item, fridge:item):\n    body:\n        achieve inside(item, fridge)\n        # Place the item inside the fridge\n\nbehavior close_fridge_door(fridge:item):\n    body:\n        achieve closed(fridge)\n        # Ensure the fridge door is closed\n\nbehavior __goal__():\n    body:\n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select the fridge\n\n        place_in_fridge(milk, fridge)\n        place_in_fridge(egg, fridge)\n        close_fridge_door(fridge)"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "1. Get close to the computer in the home office.",
        "cdl": " \nbehavior __goal__():\n    body:\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind computer: item where:\n            is_computer(computer) and inside(computer, home_office)\n        # Select the computer inside the home office\n\n        achieve close_char(char, computer)\n        # Move the character close to the computer\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "2. Sit on the chair in front of the computer and touch the mouse near the computer to turn it on.",
        "cdl": " \nbehavior sit_on_chair(chair:item):\n    body:\n        achieve on_char(char, chair)\n        # Sit on the chair in front of the computer\n\nbehavior turn_on_computer_by_touching_mouse(mouse:item, computer:item):\n    body:\n        achieve is_on(computer)\n        touch(mouse)\n\nbehavior __goal__():\n    body:\n        bind computer: item where:\n            is_computer(computer) and id[computer] == 417\n        # Select the computer with ID 417\n\n        bind chair: item where:\n            is_chair(chair) and close(chair, computer)\n        # Select the chair close to the specified computer\n\n        bind mouse: item where:\n            is_mouse(mouse) and close(mouse, computer)\n        # Select the mouse close to the computer\n\n        sit_on_chair(chair)\n        turn_on_computer_by_touching_mouse(mouse, computer)\n\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "1. Approach the computer in the home office.",
        "cdl": " \nbehavior __goal__():\n    body:\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind computer: item where:\n            is_computer(computer) and inside(computer, home_office)\n        # Select the computer inside the home office\n\n        achieve close_char(char, computer)\n        # Move the character close to the computer\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "2. Sit on the chair in front of the computer.",
        "cdl": " \nbehavior sit_on_chair(chair:item):\n    body:\n        achieve on_char(char, chair)\n        # Sit on the chair\n\nbehavior __goal__():\n    body:\n        bind computer: item where:\n            is_computer(computer) and id[computer] == 276\n        # Select the computer with a specific identifier\n\n        bind chair: item where:\n            is_chair(chair) and close(chair, computer)\n        # Select the chair close to the specified computer\n        \n        sit_on_chair(chair)\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "3. Touch the mouse to turn on the computer.",
        "cdl": "\nbehavior turn_on_computer_by_touching_mouse(mouse:item, computer:item):\n    body:\n        achieve is_on(computer)\n        touch(mouse)\n\nbehavior __goal__():\n    body:\n        bind computer: item where:\n            is_computer(computer)\n        # Select the computer\n\n        bind mouse: item where:\n            is_mouse(mouse) and close(mouse, computer)\n        # Select the mouse close to the computer\n\n        turn_on_computer_by_touching_mouse(mouse, computer)\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "4. Type on the keyboard to send an email.",
        "cdl": " \nbehavior type_email_on_keyboard(keyboard:item, computer:item):\n    body:\n        achieve is_on(computer)\n        # Ensure the computer is on before typing\n        type(keyboard)\n        # Type on the keyboard to send an email\n\nbehavior __goal__():\n    body:\n        bind keyboard: item where:\n            is_keyboard(keyboard)\n        # Select a keyboard\n\n        bind computer: item where:\n            is_computer(computer) and id[computer] == 276\n        # Select computer_276\n\n        type_email_on_keyboard(keyboard, computer)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "Cut the chicken into pieces, then put it back in the fridge.",
        "cdl": "\nbehavior cut_chicken(chicken:item, cutting_board:item):\n    body:\n        achieve cut(chicken)\n\nbehavior store_chicken_in_fridge(chicken:item, fridge:item):\n    body:\n        achieve inside(chicken, fridge)\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken to be cut\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select an available cutting board\n\n        bind fridge: item where:\n            is_fridge(fridge)\n        # Select the fridge\n\n        cut_chicken(chicken, cutting_board)\n        store_chicken_in_fridge(chicken, fridge)\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "2. Put the bowl on the table in the home office.",
        "cdl": " \nbehavior move_bowl_to_table(bowl: item, table: item):\n    body:\n        achieve on(bowl, table)\n        # Move the bowl to the specified table\n\nbehavior __goal__():\n    body:\n        bind bowl: item where:\n            is_bowl(bowl) and has_water(bowl)\n        # Select the bowl with water\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind home_office_table: item where:\n            is_table(home_office_table) and inside(home_office_table, home_office)\n        # Select a table in the home office\n\n        move_bowl_to_table(bowl, home_office_table)\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "3. Find your cat and put it on the table in the home office.",
        "cdl": "\nbehavior find_cat_and_place_on_table(cat:item, table:item):\n    body:\n        achieve on(cat, table)\n\nbehavior __goal__():\n    body:\n        bind cat: item where:\n            is_cat(cat)\n        # Select the cat\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind table: item where:\n            is_table(table) and inside(table, home_office)\n        # Select the table in the home office\n\n        find_cat_and_place_on_table(cat, table)\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Identify the basket containing clothes for washing.",
        "cdl": " \nbehavior locate_basket(basket:item):\n    body:\n        achieve close_char(char, basket)\n        # Move close to the basket to locate it\n\nbehavior __goal__():\n    body:\n        if exists basket: item : is_basket_for_clothes(basket):\n            # Check if there is any known basket for clothes\n            bind basket: item where:\n                is_basket_for_clothes(basket)\n            locate_basket(basket)\n        else:\n            # If no known basket, explore the area to locate one\n            foreach basket: item:\n                if is_basket_for_clothes(basket) and not visited(basket):\n                    observe(basket, \"Locate the basket for clothes\")\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Load the clothes into the washing machine.",
        "cdl": " \nbehavior put_clothes_in_washing_machine(clothes:item, washing_machine:item):\n    body:\n        achieve inside(clothes, washing_machine)\n        # Place the clothes inside the washing machine\n\nbehavior __goal__():\n    body:\n        bind basket: item where:\n            is_basket_for_clothes(basket) and id[basket]==2078\n        # Select the basket containing clothes\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine) and id[washing_machine]==2079\n        # Select the washing machine\n\n        foreach clothes: item:\n            if is_clothes(clothes) and inside(clothes, basket):\n                put_clothes_in_washing_machine(clothes, washing_machine)\n                # Place all clothes from the basket into the washing machine\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "3. Start the washing machine.",
        "cdl": " \nbehavior start_washing_machine(washing_machine:item):\n    body:\n        achieve is_on(washing_machine)\n\nbehavior __goal__():\n    body:\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine) and id[washing_machine]==2079\n        start_washing_machine(washing_machine)\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "Turn on the lights in the bathroom.",
        "cdl": " \nbehavior ensure_light_in_bathroom(light:item):\n    body:\n        achieve is_on(light)\n        # Turn on the light in the bathroom\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Bind to the bathroom\n\n        bind bathroom_light: item where:\n            is_light(bathroom_light) and inside(bathroom_light, bathroom)\n        # Bind to the light in the bathroom\n        ensure_light_in_bathroom(bathroom_light)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Find the book and put it on the coffee table in the home office.",
        "cdl": " \nbehavior find_and_place_book_on_table(book: item, table: item):\n    body:\n        achieve on(book, table)\n        # Place the book on the coffee table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_book_on_table(book, coffee_table)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Prepare a cup of hot milk and put it on the same table.",
        "cdl": "behavior prepare_hot_milk(milk:item, cup:item, microwave:item):\n    body:\n        achieve inside(milk, cup)\n        # Pour milk into the cup\n\n        achieve inside(cup, microwave)\n        # Place the cup with milk inside the microwave\n\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the milk\n\nbehavior __goal__():\n    body:\n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup for the milk\n\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select a microwave to heat the milk\n\n        prepare_hot_milk(milk, cup, microwave)\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        achieve on(cup, coffee_table)\n        # Place the hot milk on the coffee table in the home office"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "Wash the bowls and the plates using the dishwasher.",
        "cdl": " \nbehavior load_dishwasher(item:item, dishwasher:item):\n    body:\n        achieve inside(item, dishwasher)\n        # Load the item into the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve closed(dishwasher) # Ensure the dishwasher is closed\n        achieve is_on(dishwasher) # Turn on the dishwasher to start cleaning\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select a dishwasher\n\n        foreach item: item:\n            if is_plate(item) or is_bowl(item):\n                load_dishwasher(item, dishwasher)\n                # Load plates and bowls into the dishwasher\n\n        start_dishwasher(dishwasher)\n        # Start the dishwasher to wash the items\n"
    },
    {
        "task_name": "Turn on light",
        "source_sub_task": "Turn on the lights in the bathroom.",
        "cdl": "behavior ensure_light_in_bathroom(light:item):\n    body:\n        achieve is_on(light)\n        # Turn on the light in the bathroom\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Bind to the bathroom\n\n        bind bathroom_light: item where:\n            is_light(bathroom_light) and inside(bathroom_light, bathroom)\n        # Bind to the light in the bathroom\n        ensure_light_in_bathroom(bathroom_light)"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Put the chicken and onion in the oven to roast.",
        "cdl": " \nbehavior put_in_oven(chicken:item, onion:item, oven:item):\n    body:\n        achieve inside(chicken, oven)\n        # Place the chicken inside the oven\n        achieve inside(onion, oven)\n        # Place the onion inside the oven\n\nbehavior turn_on_oven(oven:item):\n    body:\n        achieve is_on(oven)\n        # Turn on the oven\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind onion: item where:\n            is_food_onion(onion)\n        # Select the onion\n\n        bind oven: item where:\n            is_oven(oven) and id[oven] == 295\n        # Select the oven with ID 295\n\n        put_in_oven(chicken, onion, oven)\n        turn_on_oven(oven)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Locate the book and place it on the coffee table in the home office.",
        "cdl": " \nbehavior find_and_place_book_on_table(book: item, table: item):\n    body:\n        achieve on(book, table)\n        # Place the book on the coffee table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_book_on_table(book, coffee_table)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Prepare a cup of hot milk and place it on the table.",
        "cdl": " \nbehavior prepare_hot_milk(milk:item, cup:item, microwave:item):\n    body:\n        achieve inside(milk, cup)\n        # Pour milk into the cup\n\n        achieve inside(cup, microwave)\n        # Place the cup with milk inside the microwave\n\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the milk\n\nbehavior __goal__():\n    body:\n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup for the milk\n\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select a microwave to heat the milk\n\n        prepare_hot_milk(milk, cup, microwave)\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        achieve on(cup, coffee_table)\n        # Place the hot milk on the coffee table in the home office\n"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Boil some rice in a pot.",
        "cdl": "behavior fill_pot_with_water(pot: item, faucet: item):\n    body:\n        achieve has_water(pot)\n        # Fill the pot with water using the faucet\n\nbehavior boil_rice(pot: item, stove: item, rice: item):\n    body:\n        achieve on(pot, stove)\n        # Place the pot on the stove\n        achieve inside(rice, pot)\n        # Place the rice inside the pot\n        achieve is_on(stove)\n        # Turn the stove on to start boiling the rice\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind rice: item where:\n            is_food_rice(rice)\n        # Select rice\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot, faucet)\n        boil_rice(pot, stove, rice)"
    },
    {
        "task_name": "Prepare dinner",
        "source_sub_task": "Put the chicken and onion in the oven, then turn on the oven.",
        "cdl": " \nbehavior put_in_oven(chicken:item, onion:item, oven:item):\n    body:\n        achieve inside(chicken, oven)\n        # Place the chicken inside the oven\n        achieve inside(onion, oven)\n        # Place the onion inside the oven\n\nbehavior turn_on_oven(oven:item):\n    body:\n        achieve is_on(oven)\n        # Turn on the oven\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind onion: item where:\n            is_food_onion(onion)\n        # Select the onion\n\n        bind oven: item where:\n            is_oven(oven)\n        # Select the oven\n\n        put_in_oven(chicken, onion, oven)\n        turn_on_oven(oven)\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "1. Identify the sink where you will wash the cat.  ",
        "cdl": "\nbehavior identify_sink_for_cat_washing(sink: item):\n    body:\n        achieve close_char(char, sink)\n\nbehavior __goal__():\n    body:\n        if exists sink: item : is_sink(sink):\n            # Check if there is any known sink\n            bind sink: item where:\n                is_sink(sink)\n            identify_sink_for_cat_washing(sink)\n        else:\n            # If no known sink, explore the area to locate one\n            foreach sink: item:\n                if is_sink(sink) and not visited(sink):\n                    observe(sink, \"Identify a sink suitable for washing the cat\")\n"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "2. Wash the cat in the identified sink.",
        "cdl": " \nbehavior wash_cat_in_sink(cat:item, sink:item, faucet:item):\n    body:\n        achieve_once inside(cat, sink)\n        # Place the cat into the sink for washing\n\n        achieve_once is_on(faucet)\n        # Turn on the faucet\n\n        wash(cat)\n        # Wash the cat using the water from the faucet\n\n        achieve_once is_off(faucet)\n        # Ensure the faucet is turned off after washing\n\nbehavior __goal__():\n    body:\n        bind cat: item where:\n            is_cat(cat)\n        # Select the cat\n\n        bind sink: item where:\n            is_sink(sink) and id[sink] == 42\n        # Select the identified sink (sink_42)\n\n        bind faucet: item where:\n            is_faucet(faucet) and close(faucet, sink)\n        # Select the faucet close to sink_42\n\n        wash_cat_in_sink(cat, sink, faucet)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "Boil the vegetables using a pot on the stove.",
        "cdl": " \nbehavior fill_pot_with_water(pot: item, faucet: item):\n    body:\n        achieve has_water(pot)\n        # Fill the pot with water using the faucet\n\nbehavior start_boiling(pot: item, stove: item):\n    body:\n        achieve on(pot, stove)\n        # Place the pot on the stove\n        achieve is_on(stove)\n        # Turn on the stove to boil the water\n\nbehavior add_vegetables_to_pot(vegetables: item, pot: item):\n    body:\n        achieve inside(vegetables, pot)\n        # Place the vegetables inside the pot\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind vegetables: item where:\n            is_food_vegetable(vegetables)\n        # Select vegetables\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot, faucet)\n        start_boiling(pot, stove)\n        add_vegetables_to_pot(vegetables, pot)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Locate the book you need to find.",
        "cdl": " \nbehavior locate_book(book: item):\n    body:\n        achieve close_char(char, book)\n        # Move close to the book to locate it\n\nbehavior __goal__():\n    body:\n        if exists book: item : is_book(book):\n            # Check if there is any known book\n            bind book: item where:\n                is_book(book)\n            locate_book(book)\n        else:\n            # If no known book, explore the area to locate one\n            foreach book: item:\n                if is_book(book) and not visited(book):\n                    observe(book, \"Check if this is the book you are looking for\")\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Place the book on the coffee table in the home office.",
        "cdl": " \nbehavior place_book_on_coffee_table(book:item, coffee_table:item):\n    body:\n        achieve on(book, coffee_table)\n        # Place the book on the coffee table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        place_book_on_coffee_table(book, coffee_table)\n"
    },
    {
        "task_name": "Make coffee",
        "source_sub_task": "1. Make a cup of coffee using the coffee maker.",
        "cdl": " \nbehavior make_coffee(coffe_maker: item, cup: item):\n    body:\n        achieve inside(cup, coffe_maker)\n        # Ensure the cup is positioned to receive the coffee\n\n        achieve is_on(coffe_maker)\n        # Turn on the coffee maker\n\nbehavior __goal__():\n    body:\n        bind coffe_maker: item where:\n            is_coffe_maker(coffe_maker)\n        # Select the coffee maker\n\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to use\n\n        make_coffee(coffe_maker, cup)\n        # Execute making the coffee using the coffee maker\n"
    },
    {
        "task_name": "Make coffee",
        "source_sub_task": "2. Add milk and sugar to the coffee.",
        "cdl": "behavior add_milk_and_sugar_to_coffee(milk: item, sugar: item, cup: item):\n    body:\n        achieve inside(milk, cup)\n        # Add milk to the coffee\n        achieve inside(sugar, cup)\n        # Add sugar to the coffee\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and id[cup] == 2087\n        # Select the cup with coffee\n\n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind sugar: item where:\n            is_food_sugar(sugar)\n        # Select the sugar\n\n        add_milk_and_sugar_to_coffee(milk, sugar, cup)"
    },
    {
        "task_name": "Prepare breakfast",
        "source_sub_task": "Slice the bread and toast it.",
        "cdl": "behavior slice_bread(bread:item, cutting_board:item):\n    body:\n        achieve cut(bread)\n        # Cut the bread into slices\n\nbehavior place_bread_in_toaster(bread:item, toaster:item):\n    body:\n        achieve inside(bread, toaster)\n        # Place the bread slices inside the toaster\n\nbehavior start_toaster(toaster:item):\n    body:\n        achieve is_on(toaster)\n        # Turn on the toaster to toast the bread\n\nbehavior __goal__():\n    body:\n        bind bread: item where:\n            is_food_bread(bread)\n        # Select the bread\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind toaster: item where:\n            is_toaster(toaster)\n        # Select a toaster\n\n        slice_bread(bread, cutting_board)\n        place_bread_in_toaster(bread, toaster)\n        start_toaster(toaster)"
    },
    {
        "task_name": "Wash windows",
        "source_sub_task": "Open the windows in the bathroom.",
        "cdl": " \nbehavior open_window(window:item):\n    body:\n        achieve open(window)\n\nbehavior __goal__():\n    body:\n        bind bathroom: item where:\n            is_bathroom(bathroom)\n        # Select the bathroom\n\n        bind window: item where:\n            is_window(window) and inside(window, bathroom)\n        # Select the window inside the bathroom\n\n        open_window(window)\n        # Execute the goal of opening the window in the bathroom\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Identify the book you need to find.",
        "cdl": "\nbehavior locate_book(book: item):\n    body:\n        achieve close_char(char, book)\n        # Move close to the book to locate it\n\nbehavior __goal__():\n    body:\n        if exists book: item : is_book(book):\n            # Check if there is any known book\n            bind book: item where:\n                is_book(book)\n            locate_book(book)\n        else:\n            # If no known book, explore the area to locate one\n            foreach book: item:\n                if is_book(book) and not visited(book):\n                    observe(book, \"Check if this is the book you are looking for\")\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Place the book on the coffee table in the home office.",
        "cdl": "behavior place_book_on_coffee_table(book:item, coffee_table:item):\n    body:\n        achieve on(book, coffee_table)\n        # Place the book on the coffee table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        place_book_on_coffee_table(book, coffee_table)"
    },
    {
        "task_name": "Pet cat",
        "source_sub_task": "Wash the cat in a sink.",
        "cdl": " \nbehavior wash_cat_in_sink(cat: item, sink: item, faucet: item):\n    body:\n        achieve_once inside(cat, sink)\n        # Place the cat into the sink for washing\n\n        achieve_once is_on(faucet)\n        # Turn on the faucet\n\n        wash(cat)\n        # Wash the cat using the water from the faucet\n\n        achieve_once is_off(faucet)\n        # Ensure the faucet is turned off after washing\n\nbehavior __goal__():\n    body:\n        bind cat: item where:\n            is_cat(cat)\n        # Select the cat\n\n        bind sink: item where:\n            is_sink(sink)\n        # Select a sink\n\n        bind faucet: item where:\n            is_faucet(faucet) and close(faucet, sink)\n        # Select the faucet close to the sink\n\n        wash_cat_in_sink(cat, sink, faucet)\n"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "1. Locate milk, turkey, egg, fish, and chicken within the kitchen.",
        "cdl": "def has_milk_turkey_egg_fish_chicken(item: item):\n    # Function to check if there is milk, turkey, egg, fish, or chicken near the specified item\n    symbol found_item = exists o: item : (is_milk(o) or is_food_turkey(o) or is_food_egg(o) or is_food_fish(o) or is_food_chicken(o)) and close(o, item)\n    return found_item\n\nbehavior __goal__():\n    body:\n        if exists item: item : has_milk_turkey_egg_fish_chicken(item):\n            # If we have already found items based on the available information\n            bind fridge: item where:\n                is_fridge(fridge)\n            observe(fridge, \"Check if there are milk, turkey, egg, fish, or chicken close to the fridge\")\n\n        else:\n            # Check around the scene for milk, turkey, egg, fish or chicken\n            foreach item: item:\n                if not visited(item):\n                    observe(item, \"Look for milk, turkey, egg, fish, or chicken nearby\")"
    },
    {
        "task_name": "Put groceries in Fridge",
        "source_sub_task": "2. Place milk, turkey, egg, fish, and chicken on the dining room table.",
        "cdl": " \nbehavior place_on_table(item:item, table:item):\n    body:\n        achieve on(item, table)\n        # Place the item on the table in the dining room\n\nbehavior __goal__():\n    body:\n        bind dining_room: item where:\n            is_dining_room(dining_room)\n        # Select the dining room\n\n        bind table: item where:\n            is_table(table) and inside(table, dining_room)\n        # Select a table inside the dining room\n        \n        bind milk: item where:\n            is_milk(milk)\n        # Select the milk\n\n        bind turkey: item where:\n            is_food_turkey(turkey)\n        # Select the turkey\n\n        bind egg: item where:\n            is_food_egg(egg)\n        # Select the egg\n\n        bind fish: item where:\n            is_food_fish(fish)\n        # Select the fish\n\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        place_on_table(milk, table)\n        place_on_table(turkey, table)\n        place_on_table(egg, table)\n        place_on_table(fish, table)\n        place_on_table(chicken, table)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "Slice some chicken.",
        "cdl": " \nbehavior cut_chicken(chicken:item, cutting_board:item):\n    body:\n        achieve cut(chicken)\n        # Goal to cut the chicken into slices\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select an available cutting board\n\n        cut_chicken(chicken, cutting_board)\n        # Cut the chicken using the cutting board\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Get a cup and fill it with water.",
        "cdl": " \nbehavior fetch_cup(cup:item):\n    body:\n        achieve_once inhand(cup)\n\nbehavior fill_cup_with_water(cup:item, faucet:item):\n    body:\n        achieve_once is_on(faucet)\n        achieve has_water(cup)\n        achieve_once is_off(faucet)\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup to fetch\n\n        fetch_cup(cup)\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet to fill the cup\n\n        achieve close_char(char, faucet)\n        # Move close to the faucet\n\n        fill_cup_with_water(cup, faucet)\n\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Slice the kiwi and add it to the water.",
        "cdl": " \nbehavior slice_kiwi(kiwi:item, cutting_board:item, knife:item):\n    body:\n        achieve cut(kiwi)\n\nbehavior place_slices_in_cup(kiwi:item, cup:item):\n    body:\n        achieve inside(kiwi, cup)\n\nbehavior __goal__():\n    body:\n        bind food_kiwi: item where:\n            is_food_kiwi(food_kiwi) and cuttable(food_kiwi)\n        # Select the kiwi that can be sliced\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select a cutting board\n\n        bind knife: item where:\n            is_knife(knife)\n        # Select a knife\n\n        bind cup: item where:\n            is_cup(cup) and has_water(cup)\n        # Select the cup with water to place kiwi slices\n\n        slice_kiwi(food_kiwi, cutting_board, knife)\n        place_slices_in_cup(food_kiwi, cup)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "1. Find a cup and pour milk into it.",
        "cdl": " \nbehavior find_and_fill_cup_with_milk(cup: item, milk: item):\n    body:\n        achieve inside(milk, cup)\n        # Pour milk into the cup\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup)\n        # Select a cup\n        \n        bind milk: item where:\n            is_milk(milk)\n        # Select milk\n            \n        find_and_fill_cup_with_milk(cup, milk)\n"
    },
    {
        "task_name": "Drink",
        "source_sub_task": "2. Put the cup of milk in the microwave and heat it.",
        "cdl": "behavior heat_milk_in_microwave(cup:item, microwave:item):\n    body:\n        achieve inside(cup, microwave)\n        # Place the cup of milk inside the microwave\n        achieve is_on(microwave)\n        # Turn on the microwave to heat the milk\n\nbehavior __goal__():\n    body:\n        bind cup: item where:\n            is_cup(cup) and id[cup] == 2132\n        # Select the cup with ID 2132, which contains the milk\n\n        bind microwave: item where:\n            is_microwave(microwave)\n        # Select a microwave\n\n        heat_milk_in_microwave(cup, microwave)\n        # Execute heating the milk in the microwave"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "1. Get close to the computer in the home office.",
        "cdl": " \nbehavior __goal__():\n    body:\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind computer: item where:\n            is_computer(computer) and inside(computer, home_office)\n        # Select the computer inside the home office\n\n        achieve close_char(char, computer)\n        # Move the character close to the computer\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "2. Sit on the chair in front of the computer.",
        "cdl": " \nbehavior sit_on_chair(chair:item):\n    body:\n        achieve on_char(char, chair)\n        # Sit on the chair\n\nbehavior __goal__():\n    body:\n        bind computer: item where:\n            is_computer(computer) and id[computer]==2110\n        # Select the computer with the specific identifier 2110\n\n        bind chair: item where:\n            is_chair(chair) and close(chair, computer)\n        # Select the chair close to the specified computer\n\n        sit_on_chair(chair)\n"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "3. Touch the mouse near the computer to turn it on.",
        "cdl": "behavior turn_on_computer_by_touching_mouse(mouse:item, computer:item):\n    body:\n        achieve is_on(computer)\n        touch(mouse)\n\nbehavior __goal__():\n    body:\n        bind computer: item where:\n            is_computer(computer) and id[computer] == 2110\n        # Select the computer with ID 2110\n\n        bind mouse: item where:\n            is_mouse(mouse) and close(mouse, computer)\n        # Select the mouse close to the computer\n\n        turn_on_computer_by_touching_mouse(mouse, computer)"
    },
    {
        "task_name": "Write an email",
        "source_sub_task": "4. Type on the keyboard to send an e-mail.",
        "cdl": " \nbehavior type_email_on_keyboard(keyboard:item, computer:item):\n    body:\n        achieve is_on(computer)\n        # Ensure the computer is on before typing\n        type(keyboard)\n        # Type on the keyboard to send an email\n\nbehavior __goal__():\n    body:\n        bind keyboard: item where:\n            is_keyboard(keyboard)\n        # Select a keyboard\n\n        bind computer: item where:\n            is_computer(computer) and id[computer] == 2110\n        # Select computer_2110\n\n        type_email_on_keyboard(keyboard, computer)\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Identify the basket containing clothes.",
        "cdl": " \nbehavior locate_basket(basket: item):\n    body:\n        achieve close_char(char, basket)\n        # Move close to the basket to locate it\n\nbehavior __goal__():\n    body:\n        if exists basket: item : is_basket_for_clothes(basket):\n            # Check if there is any known basket for clothes\n            bind basket: item where:\n                is_basket_for_clothes(basket)\n            locate_basket(basket)\n        else:\n            # If no known basket, explore the area to locate one\n            foreach basket: item:\n                if is_basket_for_clothes(basket) and not visited(basket):\n                    observe(basket, \"Locate the basket for clothes\")\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Add soap to the washing machine.",
        "cdl": " \nbehavior add_soap_to_washing_machine(soap:item, washing_machine:item):\n    body:\n        achieve inside(soap, washing_machine)\n        # Ensure the soap is added inside the washing machine\n\nbehavior __goal__():\n    body:\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine) and id[washing_machine]==2079\n        # Bind to the washing machine with ID 2079\n        \n        bind soap: item where:\n            is_soap(soap)\n        # Select the soap item\n        \n        add_soap_to_washing_machine(soap, washing_machine)\n        # Execute adding soap to the washing machine\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "3. Run the washing machine with the clothes from the basket.",
        "cdl": " \nbehavior run_washing_machine(washing_machine:item):\n    body:\n        achieve is_on(washing_machine)\n\nbehavior __goal__():\n    body:\n        bind basket: item where:\n            is_basket_for_clothes(basket) and id[basket]==2078\n        # Select the basket containing clothes with ID 2078\n        \n        bind washing_machine: item where:\n            is_washing_machine(washing_machine) and id[washing_machine]==2079\n        # Select the washing machine with ID 2079\n\n        foreach clothes: item:\n            if is_clothes(clothes) and inside(clothes, basket):\n                achieve inside(clothes, washing_machine)\n                # Move all clothes from the basket into the washing machine\n\n        run_washing_machine(washing_machine)\n        # Start the washing machine\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "1. Put the cleaning solution in the dishwasher.",
        "cdl": " \nbehavior add_solution_to_dishwasher(cleaning_solution:item, dishwasher:item):\n    body:\n        achieve inside(cleaning_solution, dishwasher)\n\nbehavior __goal__():\n    body:\n        bind cleaning_solution: item where:\n            is_cleaning_solution(cleaning_solution)\n        # Select the cleaning solution\n\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select the dishwasher\n\n        add_solution_to_dishwasher(cleaning_solution, dishwasher)\n"
    },
    {
        "task_name": "Wash dishes with dishwasher",
        "source_sub_task": "2. Wash the bowls and plates with the dishwasher.",
        "cdl": " \nbehavior load_dishwasher(item:item, dishwasher:item):\n    body:\n        achieve inside(item, dishwasher)\n        # Load the item into the dishwasher\n\nbehavior start_dishwasher(dishwasher:item):\n    body:\n        achieve closed(dishwasher) # Ensure the dishwasher is closed\n        achieve is_on(dishwasher) # Turn on the dishwasher to start cleaning\n\nbehavior __goal__():\n    body:\n        bind dishwasher: item where:\n            is_dishwasher(dishwasher)\n        # Select a dishwasher\n\n        foreach item: item:\n            if is_plate(item) or is_bowl(item):\n                load_dishwasher(item, dishwasher)\n                # Load plates and bowls into the dishwasher\n\n        start_dishwasher(dishwasher)\n        # Start the dishwasher to wash the items\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "1. Hand wash the jacket.",
        "cdl": " \nbehavior wash_jacket_by_hand(jacket:item, sink:item):\n    body:\n        achieve_once inside(jacket, sink)\n        # Ensure the jacket is placed inside the sink for washing\n\n        achieve has_water(sink)\n        # Ensure there is water in the sink\n\n        wash(jacket)\n        # Wash the jacket by hand\n\nbehavior __goal__():\n    body:\n        bind jacket: item where:\n            is_clothes_jacket(jacket)\n        # Select the jacket to be hand washed\n\n        bind sink: item where:\n            is_sink(sink)\n        # Select a sink\n\n        observe(sink, \"Check if the sink has water before washing\")\n        wash_jacket_by_hand(jacket, sink)\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Use the washing machine to wash the jacket.",
        "cdl": " \nbehavior use_washing_machine_for_jacket(jacket:item, washing_machine:item):\n    body:\n        achieve inside(jacket, washing_machine)\n        # Place the jacket inside the washing machine\n\n        achieve is_on(washing_machine)\n        # Start the washing machine\n\nbehavior __goal__():\n    body:\n        bind jacket: item where:\n            is_clothes_jacket(jacket) and id[jacket] == 2047\n        # Select the specific jacket with ID 2047\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Select the washing machine\n\n        use_washing_machine_for_jacket(jacket, washing_machine)\n        # Execute the behavior to wash the jacket using the washing machine\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "1. Find the book and place it on the coffee table in the home office.",
        "cdl": " \nbehavior find_and_place_book_on_table(book: item, coffee_table: item):\n    body:\n        achieve on(book, coffee_table)\n        # Place the book on the coffee table in the home office\n\nbehavior __goal__():\n    body:\n        bind book: item where:\n            is_book(book)\n        # Select the book to be placed\n\n        bind home_office: item where:\n            is_home_office(home_office)\n\n        bind coffee_table: item where:\n            is_table(coffee_table) and inside(coffee_table, home_office)\n        # Select the coffee table in the home office\n\n        find_and_place_book_on_table(book, coffee_table)\n"
    },
    {
        "task_name": "Prepare a reading space",
        "source_sub_task": "2. Open the window in the home office.",
        "cdl": " \nbehavior open_window(window: item):\n    body:\n        achieve open(window)\n\nbehavior __goal__():\n    body:\n        bind home_office: item where:\n            is_home_office(home_office)\n        # Define the home office\n\n        bind window: item where:\n            is_window(window) and inside(window, home_office)\n        # Select a window that is inside the home office\n\n        open_window(window)\n        # Execute the goal of opening the window in the home office\n"
    },
    {
        "task_name": "Change TV channel",
        "source_sub_task": "1. Sit on the couch.",
        "cdl": "\nbehavior sit_on_couch(couch: item):\n    body:\n        achieve on_char(char, couch)\n        # Sit on the couch\n\nbehavior __goal__():\n    body:\n        if exists couch: item : is_couch(couch):\n            # Check for the presence of a couch\n            bind couch: item where:\n                is_couch(couch)\n            sit_on_couch(couch)\n        else:\n            # Explore to locate a couch if it is not known\n            foreach couch: item:\n                if is_couch(couch) and not visited(couch):\n                    observe(couch, \"Check if this is a suitable couch to sit on\")\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "1. Wash all the vegetables.",
        "cdl": " \nbehavior wash_vegetable(vegetable:item):\n    body:\n        wash(vegetable)\n        # Wash the vegetable\n\nbehavior __goal__():\n    body:\n        foreach vegetable: item:\n            if is_food_vegetable(vegetable):\n                wash_vegetable(vegetable)\n        # Execute washing all the vegetables\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "2. Put the vegetables in a pot and boil them on the stove.",
        "cdl": " \nbehavior fill_pot_with_water(pot: item, faucet: item):\n    body:\n        achieve has_water(pot)\n        # Fill the pot with water using the faucet\n\nbehavior place_pot_on_stove(pot: item, stove: item):\n    body:\n        achieve on(pot, stove)\n        # Place the pot on the stove\n\nbehavior start_boiling(pot: item, stove: item):\n    body:\n        achieve is_on(stove)\n        # Turn on the stove to start boiling the pot of vegetables\n\nbehavior add_vegetables_to_pot(vegetables: item, pot: item):\n    body:\n        achieve inside(vegetables, pot)\n        # Place the washed vegetables inside the pot\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot)\n        # Select a pot\n\n        bind vegetables: item where:\n            is_food_vegetable(vegetables)\n        # Select vegetables\n\n        bind faucet: item where:\n            is_faucet(faucet)\n        # Select a faucet\n\n        bind stove: item where:\n            is_stove(stove)\n        # Select a stove\n\n        fill_pot_with_water(pot, faucet)\n        add_vegetables_to_pot(vegetables, pot)\n        place_pot_on_stove(pot, stove)\n        start_boiling(pot, stove)\n"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "3. Store the whole pot in the fridge.",
        "cdl": " \nbehavior store_pot_in_fridge(pot:item, fridge:item):\n    body:\n        achieve inside(pot, fridge)\n        # Place the pot inside the fridge\n\nbehavior close_fridge(fridge:item):\n    body:\n        achieve closed(fridge)\n        # Ensure the fridge door is closed\n\nbehavior __goal__():\n    body:\n        bind pot: item where:\n            is_pot(pot) and id[pot] == 2138\n        # Select the pot with ID 2138\n\n        bind fridge: item where:\n            is_fridge(fridge) and id[fridge] == 126\n        # Select the fridge with ID 126\n\n        store_pot_in_fridge(pot, fridge)\n        close_fridge(fridge)\n"
    },
    {
        "task_name": "Wash clothes",
        "source_sub_task": "2. Use the washing machine to wash the jacket.",
        "cdl": "behavior load_jacket_into_washing_machine(jacket:item, washing_machine:item):\n    body:\n        achieve inside(jacket, washing_machine)\n        # Load the jacket into the washing machine\n\nbehavior start_washing_machine(washing_machine:item):\n    body:\n        achieve is_on(washing_machine)\n        # Turn on the washing machine\n\nbehavior __goal__():\n    body:\n        bind jacket: item where:\n            is_clothes_jacket(jacket) and id[jacket] == 2078\n        # Select the jacket with ID 2078\n\n        bind washing_machine: item where:\n            is_washing_machine(washing_machine)\n        # Select the washing machine\n\n        load_jacket_into_washing_machine(jacket, washing_machine)\n        # Load the jacket into the washing machine\n\n        start_washing_machine(washing_machine)\n        # Start the washing machine to wash the jacket"
    },
    {
        "task_name": "Cook some food",
        "source_sub_task": "Slice the chicken.",
        "cdl": " \nbehavior cut_chicken(chicken:item, cutting_board:item):\n    body:\n        achieve cut(chicken)\n        # Goal to cut the chicken into slices\n\nbehavior __goal__():\n    body:\n        bind chicken: item where:\n            is_food_chicken(chicken)\n        # Select the chicken\n\n        bind cutting_board: item where:\n            is_cutting_board(cutting_board)\n        # Select an available cutting board\n\n        cut_chicken(chicken, cutting_board)\n        # Cut the chicken using the cutting board\n"
    }
]