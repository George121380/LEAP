From agent.py
Reset goals: The sub-goals are: 
['Place a cup of water on the nightstand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2006_around_nightstand_373(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==373
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(cup,nightstand_instance)
        else:
            exp(cup,nightstand_instance)
    eff:
        unknown[cup]=False
        close[cup,nightstand_instance]=True
        close[nightstand_instance,cup]=True
    

behavior find_cup_2089_around_desk_261(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==261
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(cup,desk_instance)
        else:
            exp(cup,desk_instance)
    eff:
        unknown[cup]=False
        close[cup,desk_instance]=True
        close[desk_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and has_water(cup)
        # Select a cup with water

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand

        place_cup_on_nightstand(cup, nightstand)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cup_2089_around_desk_261(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==261
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(cup,desk_instance)
        else:
            exp(cup,desk_instance)
    eff:
        unknown[cup]=False
        close[cup,desk_instance]=True
        close[desk_instance,cup]=True
    

behavior find_cup_2088_around_nightstand_373(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==373
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(cup,nightstand_instance)
        else:
            exp(cup,nightstand_instance)
    eff:
        unknown[cup]=False
        close[cup,nightstand_instance]=True
        close[nightstand_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior place_cup_of_water_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)
        # Place the cup of water on the nightstand

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and has_water(cup)
        # Select the cup with water

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand

        place_cup_of_water_on_nightstand(cup, nightstand)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "place a cup of water on the nightstand." ?
Answer: Fill a cup with water and place it on the nightstand.
Re-decompose: True

##############################
From agent.py
Reset goals: The sub-goals are: 
['Fill a cup with water and place it on the nightstand.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_butter_2018_around_fridge_140(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_butter,fridge_instance)
        else:
            exp(food_butter,fridge_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,fridge_instance]=True
        close[fridge_instance,food_butter]=True
    

behavior find_cup_2089_around_desk_261(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==261
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(cup,desk_instance)
        else:
            exp(cup,desk_instance)
    eff:
        unknown[cup]=False
        close[cup,desk_instance]=True
        close[desk_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_cup(cup:item, faucet:item):
    body:
        achieve_once is_on(faucet)
        achieve has_water(cup)
        achieve_once is_off(faucet)

behavior place_cup_on_nightstand(cup:item, nightstand:item):
    body:
        achieve on(cup, nightstand)

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select a nightstand

        fill_cup(cup, faucet)
        place_cup_on_nightstand(cup, nightstand)

#goal_representation_end

##############################
From agent.py-> find a plan in act()
walk_executor(desk_261)exp(cup_2087, desk_261)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(desk_261)
Find mat_237. Find chair_263. Find drawing_238. Robot is inside bedroom_220. Robot is close desk_261. Robot is close floor_223. Robot is no longer inside home_office_161.
##############################
From agent.py
exp(cup_2087, desk_261)
Fail to find cup_2087 around desk_261. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_counter_306)exp(cup_2087, bathroom_counter_306)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(bathroom_counter_306)
Find drawing_296. Find towel_rack_298. Robot is inside bathroom_265. Robot is close bathroom_counter_306. Robot is no longer inside bedroom_220.Robot is no longer close desk_261.Robot is no longer close floor_223.
##############################
From agent.py
exp(cup_2087, bathroom_counter_306)
Fail to find cup_2087 around bathroom_counter_306. 
##############################
From agent.py-> find a plan in act()
walk_executor(nightstand_373)exp(cup_2087, nightstand_373)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(nightstand_373)
Find drawing_389. Find coin_2004. Find pillow_368. Find mat_386. Robot is inside bedroom_327. Robot is close floor_330. Robot is close nightstand_373. Robot is no longer inside bathroom_265.Robot is no longer close bathroom_counter_306.
##############################
From agent.py
exp(cup_2087, nightstand_373)
Fail to find cup_2087 around nightstand_373. 
##############################
From agent.py-> find a plan in act()
walk_executor(bathroom_cabinet_305)open_executor(bathroom_cabinet_305)exp(cup_2087, bathroom_cabinet_305)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(bathroom_cabinet_305)
Find soap_2038. Robot is inside bathroom_265. Robot is close bathroom_cabinet_305. Robot is close wall_269. Robot is close soap_2038. Robot is no longer inside bedroom_327.Robot is no longer close floor_330.Robot is no longer close nightstand_373.
##############################
From agent.py
open_executor(bathroom_cabinet_305)
Robot is inside bathroom_265. Robot is close bathroom_cabinet_305. Robot is close wall_269. Robot is close soap_2038. 
##############################
From agent.py
exp(cup_2087, bathroom_cabinet_305)
Fail to find cup_2087 around bathroom_cabinet_305. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(cup_2087, kitchen_counter_132)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Find pot_54. Find tray_142. Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is no longer inside bathroom_265.Robot is no longer close bathroom_cabinet_305.Robot is no longer close wall_269.Robot is no longer close soap_2038.
##############################
From agent.py
exp(cup_2087, kitchen_counter_132)
Fail to find cup_2087 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(cup_2087, kitchen_counter_128)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find spectacles_2106. Find cutting_board_2080. Find food_orange_2008. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close kitchen_counter_132.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find cup_2087 ?
Answer: Go to dining_room_1. Locate table_123. You will find cup_2087 on top of table_123.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_1. Locate table_123. You will find cup_2087 on top of table_123.

Human Guidance: Fill a cup with water and place it on the nightstand.
The actions you have taken:
Action 1: Walk to desk_261.
Action 2: look for cup_2087 around desk_261.
Action 3: Walk to bathroom_counter_306.
Action 4: look for cup_2087 around bathroom_counter_306.
Action 5: Walk to nightstand_373.
Action 6: look for cup_2087 around nightstand_373.
Action 7: Walk to bathroom_cabinet_305.
Action 8: Open bathroom_cabinet_305.
Action 9: look for cup_2087 around bathroom_cabinet_305.
Action 10: Walk to kitchen_counter_132.
Action 11: look for cup_2087 around kitchen_counter_132.
Action 12: Walk to kitchen_counter_128.

##############################
From agent.py
exp(cup_2087, kitchen_counter_128)
Fail to find cup_2087 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_123)exp(cup_2087, table_123)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(table_123)
Find mat_114. Find drawing_118. Find laptop_2015. Find fork_2103. Find bowl_2095. Find cup_2087. Find cup_2088. Find mouse_2003. Find homework_2011. Find shoes_2001. Robot is inside dining_room_1. Robot is close floor_17. Robot is close mat_114. Robot is close table_123. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
exp(cup_2087, table_123)
Find cup_2087. 
##############################
From agent.py-> find a plan in act()
walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Robot is no longer close floor_17.Robot is no longer close mat_114.
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside dining_room_1. Robot is close table_123. Robot is close cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close table_123.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(nightstand_262)
Find headset_2086. Find pillow_239. Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(cup_2087, nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. cup_2087 released by right hand. 
##############################
From agent.py
Human Instruction: You need to fill the cup with water. Make sure to switch on the faucet, fill the cup, and then switch off the faucet before proceeding.

Human Guidance: Fill a cup with water and place it on the nightstand.
The actions you have taken:
Action 1: Walk to desk_261.
Action 2: look for cup_2087 around desk_261.
Action 3: Walk to bathroom_counter_306.
Action 4: look for cup_2087 around bathroom_counter_306.
Action 5: Walk to nightstand_373.
Action 6: look for cup_2087 around nightstand_373.
Action 7: Walk to bathroom_cabinet_305.
Action 8: Open bathroom_cabinet_305.
Action 9: look for cup_2087 around bathroom_cabinet_305.
Action 10: Walk to kitchen_counter_132.
Action 11: look for cup_2087 around kitchen_counter_132.
Action 12: Walk to kitchen_counter_128.
Action 13: look for cup_2087 around kitchen_counter_128.
Action 14: Walk to table_123.
Action 15: look for cup_2087 around table_123.
Action 16: Walk to cup_2087.
Action 17: Grab cup_2087.
Action 18: Walk to faucet_134.
Action 19: Switch off faucet_134.
Action 20: Walk to nightstand_262.
Action 21: Put cup_2087 on nightstand_262.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_butter_2018_around_fridge_140(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_butter,fridge_instance)
        else:
            exp(food_butter,fridge_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,fridge_instance]=True
        close[fridge_instance,food_butter]=True
    

behavior find_cup_2088_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_and_place_cup(cup:item, faucet:item, nightstand:item):
    body:
        achieve_once is_on(faucet)
        # Turn on the faucet to fill the cup with water
        achieve has_water(cup)
        # Ensure the cup has water in it
        achieve_once is_off(faucet)
        # Turn off the faucet once the cup is filled
        achieve on(cup, nightstand)
        # Place the cup filled with water on the nightstand

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind faucet: item where:
            is_faucet(faucet)
        # Select the faucet

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand

        fill_and_place_cup(cup, faucet, nightstand)
        # Fill the cup with water and place it on the nightstand

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_and_place_cup(cup:item, faucet:item, nightstand:item):
    body:
        achieve_once is_on(faucet)
        # Turn on the faucet to fill the cup with water
        achieve has_water(cup)
        # Ensure the cup has water in it
        achieve_once is_off(faucet)
        # Turn off the faucet once the cup is filled
        achieve on(cup, nightstand)
        # Place the cup filled with water on the nightstand

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind faucet: item where:
            is_faucet(faucet)
        # Select the faucet

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand

        fill_and_place_cup(cup, faucet, nightstand)
        # Fill the cup with water and place it on the nightstand

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)switchon_executor(faucet_134)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer inside bedroom_220.Robot is no longer close nightstand_262.Robot is no longer close floor_221.Robot is no longer close floor_222.Robot is no longer close cup_2087.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close nightstand_262. Robot is close cup_2087. Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside dining_room_1. Robot is close nightstand_262. Robot is close cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close nightstand_262.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(cup_2087, nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. cup_2087 released by right hand. 
##############################
From agent.py
Human Instruction: You need to ensure the cup is filled with water. The cup was placed on the nightstand without being filled. Return to the faucet, switch it on, fill the cup with water, switch off the faucet, and then place the filled cup on the nightstand.

Human Guidance: Fill a cup with water and place it on the nightstand.
The actions you have taken:
Action 1: Walk to desk_261.
Action 2: look for cup_2087 around desk_261.
Action 3: Walk to bathroom_counter_306.
Action 4: look for cup_2087 around bathroom_counter_306.
Action 5: Walk to nightstand_373.
Action 6: look for cup_2087 around nightstand_373.
Action 7: Walk to bathroom_cabinet_305.
Action 8: Open bathroom_cabinet_305.
Action 9: look for cup_2087 around bathroom_cabinet_305.
Action 10: Walk to kitchen_counter_132.
Action 11: look for cup_2087 around kitchen_counter_132.
Action 12: Walk to kitchen_counter_128.
Action 13: look for cup_2087 around kitchen_counter_128.
Action 14: Walk to table_123.
Action 15: look for cup_2087 around table_123.
Action 16: Walk to cup_2087.
Action 17: Grab cup_2087.
Action 18: Walk to faucet_134.
Action 19: Switch off faucet_134.
Action 20: Walk to nightstand_262.
Action 21: Put cup_2087 on nightstand_262.
Action 22: Walk to faucet_134.
Action 23: Switch on faucet_134.
Action 24: Walk to cup_2087.
Action 25: Grab cup_2087.
Action 26: Walk to faucet_134.
Action 27: Switch off faucet_134.
Action 28: Walk to nightstand_262.
Action 29: Put cup_2087 on nightstand_262.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_butter_2018_around_fridge_140(food_butter:item):
    goal: not unknown(food_butter)
    body:
        assert is_food_butter(food_butter)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==140
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_butter,fridge_instance)
        else:
            exp(food_butter,fridge_instance)
    eff:
        unknown[food_butter]=False
        close[food_butter,fridge_instance]=True
        close[fridge_instance,food_butter]=True
    

behavior find_cup_2087_around_cup_2088(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cup_instance:item where:
            is_cup(cup_instance) and id[cup_instance]==2088
        achieve close_char(char,cup_instance)
        if can_open(cup_instance):
            achieve_once open(cup_instance)
            exp(cup,cup_instance)
        else:
            exp(cup,cup_instance)
    eff:
        unknown[cup]=False
        close[cup,cup_instance]=True
        close[cup_instance,cup]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_cup_with_water(cup: item, faucet: item):
    body:
        achieve_once is_on(faucet)
        # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        achieve_once is_off(faucet)
        # Turn off the faucet after filling the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup to fill with water

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet to use for filling the cup

        fill_cup_with_water(cup, faucet)

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand to place the filled cup

        achieve on(cup, nightstand)
        # Place the filled cup on the nightstand

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior fill_cup_with_water(cup: item, faucet: item):
    body:
        achieve_once is_on(faucet)
        # Turn on the faucet to fill the cup with water

        achieve has_water(cup)
        # Ensure the cup is filled with water

        achieve_once is_off(faucet)
        # Turn off the faucet after filling the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup to fill with water

        bind faucet: item where:
            is_faucet(faucet)
        # Select a faucet to use for filling the cup

        fill_cup_with_water(cup, faucet)

        bind nightstand: item where:
            is_nightstand(nightstand)
        # Select the nightstand to place the filled cup

        achieve on(cup, nightstand)
        # Place the filled cup on the nightstand

##############################
From agent.py-> find a plan in act()
walk_executor(faucet_134)switchon_executor(faucet_134)walk_executor(cup_2087)grab_executor(cup_2087)walk_executor(faucet_134)switchoff_executor(faucet_134)walk_executor(nightstand_262)put_executor(cup_2087, nightstand_262)
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer inside bedroom_220.Robot is no longer close nightstand_262.Robot is no longer close floor_221.Robot is no longer close floor_222.Robot is no longer close cup_2087.
##############################
From agent.py
switchon_executor(faucet_134)
Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(cup_2087)
Robot is inside dining_room_1. Robot is close nightstand_262. Robot is close cup_2087. Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
grab_executor(cup_2087)
Robot is inside dining_room_1. Robot is close nightstand_262. Robot is close cup_2087. Grabbing cup_2087 by right hand. 
##############################
From agent.py
walk_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. Robot is no longer close nightstand_262.
##############################
From agent.py
switchoff_executor(faucet_134)
Robot is inside dining_room_1. Robot is close cup_2087. Robot is close kitchen_counter_132. Robot is close faucet_134. 
##############################
From agent.py
walk_executor(nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. Robot is no longer inside dining_room_1.Robot is no longer close kitchen_counter_132.Robot is no longer close faucet_134.
##############################
From agent.py
put_executor(cup_2087, nightstand_262)
Robot is inside bedroom_220. Robot is close cup_2087. Robot is close floor_222. Robot is close floor_221. Robot is close nightstand_262. cup_2087 released by right hand. 
##############################
