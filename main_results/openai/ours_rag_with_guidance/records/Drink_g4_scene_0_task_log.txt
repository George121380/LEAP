From agent.py
Reset goals: The sub-goals are: 
['1. Find a cup and pour milk into it.', '2. Heat the cup of milk in the microwave.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_milk_2043_around_fridge_289(milk:item):
    goal: not unknown(milk)
    body:
        assert is_milk(milk)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(milk,fridge_instance)
        else:
            exp(milk,fridge_instance)
    eff:
        unknown[milk]=False
        close[milk,fridge_instance]=True
        close[fridge_instance,milk]=True
    

behavior find_cup_2064_around_cupboard_229(cup:item):
    goal: not unknown(cup)
    body:
        assert is_cup(cup)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(cup,cupboard_instance)
        else:
            exp(cup,cupboard_instance)
    eff:
        unknown[cup]=False
        close[cup,cupboard_instance]=True
        close[cupboard_instance,cup]=True
    

#exp_behavior_end

#goal_representation
behavior find_a_cup(cup: item):
    body:
        achieve recipient(cup)
        # Ensure the cup can receive milk

behavior pour_milk_in_cup(milk: item, cup: item):
    body:
        achieve inside(milk, cup)
        # Ensure the milk is inside the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind milk: item where:
            is_milk(milk)
        # Select milk

        find_a_cup(cup)
        pour_milk_in_cup(milk, cup)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior find_a_cup(cup: item):
    body:
        achieve recipient(cup)
        # Ensure the cup can receive milk

behavior pour_milk_in_cup(milk: item, cup: item):
    body:
        achieve inside(milk, cup)
        # Ensure the milk is inside the cup

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind milk: item where:
            is_milk(milk)
        # Select milk

        find_a_cup(cup)
        pour_milk_in_cup(milk, cup)
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_229)open_executor(cupboard_229)exp(cup_2063, cupboard_229)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)
##############################
From agent.py
walk_executor(cupboard_229)
Find tray_296. Robot is inside dining_room_201. Robot is close wall_211. Robot is close cupboard_229. Robot is no longer inside bathroom_1.
##############################
From agent.py
open_executor(cupboard_229)
Robot is inside dining_room_201. Robot is close wall_211. Robot is close cupboard_229. 
##############################
From agent.py
exp(cup_2063, cupboard_229)
Fail to find cup_2063 around cupboard_229. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(cup_2063, kitchen_counter_230)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Find pot_2069. Find cup_2063. Find knife_2050. Find napkin_2005. Find cup_2064. Find cutting_board_2051. Find oil_2079. Find fryingpan_2083. Find drawing_239. Find drawing_238. Find drawing_240. Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is no longer close wall_211.Robot is no longer close cupboard_229.
##############################
From agent.py
exp(cup_2063, kitchen_counter_230)
Find cup_2063. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(milk_2043, fridge_289)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)
##############################
From agent.py
walk_executor(fridge_289)
Find sauce_2078. Find food_steak_2008. Find food_apple_2009. Find food_bacon_2010. Find food_banana_2011. Find food_bread_2012. Find food_cake_2013. Find food_carrot_2014. Find food_cereal_2015. Find food_cheese_2016. Find food_chicken_2017. Find food_dessert_2018. Find food_donut_2019. Find food_egg_2020. Find food_fish_2021. Find food_food_2022. Find food_fruit_2023. Find food_hamburger_2024. Find food_ice_cream_2025. Find food_jam_2026. Find food_kiwi_2027. Find food_lemon_2028. Find food_noodles_2029. Find food_oatmeal_2030. Find food_orange_2031. Find food_onion_2032. Find food_peanut_butter_2033. Find food_pizza_2034. Find food_potato_2035. Find food_rice_2036. Find food_salt_2037. Find food_snack_2038. Find food_sugar_2039. Find food_turkey_2040. Find food_vegetable_2041. Find dry_pasta_2042. Find milk_2043. Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Robot is no longer close kitchen_counter_230.
##############################
From agent.py
switchoff_executor(fridge_289)
Find mat_22. Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
open_executor(fridge_289)
Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
exp(milk_2043, fridge_289)
Find milk_2043. 
##############################
From agent.py-> find a plan in act()
grab_executor(milk_2043)walk_executor(cup_2063)putin_executor(milk_2043, cup_2063)
##############################
From agent.py
grab_executor(milk_2043)
Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Grabbing milk_2043 by right hand. 
##############################
From agent.py
walk_executor(cup_2063)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close kitchen_counter_230. Robot is close cup_2063. Robot is no longer close sauce_2078.Robot is no longer close fridge_289.Robot is no longer close floor_202.Robot is no longer close floor_203.Robot is no longer close food_steak_2008.Robot is no longer close food_apple_2009.Robot is no longer close food_bacon_2010.Robot is no longer close food_banana_2011.Robot is no longer close food_bread_2012.Robot is no longer close food_cake_2013.Robot is no longer close food_carrot_2014.Robot is no longer close food_cereal_2015.Robot is no longer close food_cheese_2016.Robot is no longer close food_chicken_2017.Robot is no longer close food_dessert_2018.Robot is no longer close food_donut_2019.Robot is no longer close food_egg_2020.Robot is no longer close food_fish_2021.Robot is no longer close food_food_2022.Robot is no longer close food_fruit_2023.Robot is no longer close food_hamburger_2024.Robot is no longer close food_ice_cream_2025.Robot is no longer close food_jam_2026.Robot is no longer close food_kiwi_2027.Robot is no longer close food_lemon_2028.Robot is no longer close food_noodles_2029.Robot is no longer close food_oatmeal_2030.Robot is no longer close food_orange_2031.Robot is no longer close food_onion_2032.Robot is no longer close food_peanut_butter_2033.Robot is no longer close food_pizza_2034.Robot is no longer close food_potato_2035.Robot is no longer close food_rice_2036.Robot is no longer close food_salt_2037.Robot is no longer close food_snack_2038.Robot is no longer close food_sugar_2039.Robot is no longer close food_turkey_2040.Robot is no longer close food_vegetable_2041.Robot is no longer close dry_pasta_2042.
##############################
From agent.py
putin_executor(milk_2043, cup_2063)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close kitchen_counter_230. Robot is close cup_2063. milk_2043 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2072_around_oven_295(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind oven_instance:item where:
            is_oven(oven_instance) and id[oven_instance]==295
        achieve close_char(char,oven_instance)
        if can_open(oven_instance):
            achieve_once open(oven_instance)
            exp(bowl,oven_instance)
        else:
            exp(bowl,oven_instance)
    eff:
        unknown[bowl]=False
        close[bowl,oven_instance]=True
        close[oven_instance,bowl]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_milk_in_microwave(cup:item, microwave:item):
    body:
        achieve inside(cup, microwave)
        # Place the cup of milk inside the microwave
        achieve is_on(microwave)
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and inside(cup, kitchen_counter_230)
        # Select the cup of milk on the kitchen counter

        bind microwave: item where:
            is_microwave(microwave)
        # Select the microwave

        observe(kitchen_counter_230, "Check if cup is placed on kitchen counter")
        heat_milk_in_microwave(cup, microwave)
        # Execute heating the cup of milk in the microwave

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: kitchen_counter_230; available variables: [Variable<cup: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_bowl_2072_around_tray_296(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind tray_instance:item where:
            is_tray(tray_instance) and id[tray_instance]==296
        achieve close_char(char,tray_instance)
        if can_open(tray_instance):
            achieve_once open(tray_instance)
            exp(bowl,tray_instance)
        else:
            exp(bowl,tray_instance)
    eff:
        unknown[bowl]=False
        close[bowl,tray_instance]=True
        close[tray_instance,bowl]=True
    

#goal_representation
 
behavior heat_milk_in_microwave(cup:item, microwave:item):
    body:
        achieve inside(cup, microwave)
        # Place the cup of milk inside the microwave
        achieve is_on(microwave)
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and inside(cup, kitchen_counter_230)
        # Select the cup of milk on the kitchen counter

        bind kitchen_counter_230: item where:
            is_kitchen_counter(kitchen_counter_230)
        # Ensure the kitchen counter is defined

        bind microwave: item where:
            is_microwave(microwave)
        # Select the microwave

        observe(kitchen_counter_230, "Check if cup is placed on kitchen counter")
        heat_milk_in_microwave(cup, microwave)
        # Execute heating the cup of milk in the microwave

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: kitchen_counter_230; available variables: [Variable<cup: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior heat_milk_in_microwave(cup:item, microwave:item):
    body:
        achieve inside(cup, microwave)
        # Place the cup of milk inside the microwave
        achieve is_on(microwave)
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup) and inside(cup, kitchen_counter_230)
        # Select the cup of milk on the kitchen counter

        bind microwave: item where:
            is_microwave(microwave)
        # Select the microwave

        bind kitchen_counter_230: item where:
            is_kitchen_counter(kitchen_counter_230)
        # Define the kitchen counter

        observe(kitchen_counter_230, "Check if cup is placed on kitchen counter")
        heat_milk_in_microwave(cup, microwave)
        # Execute heating the cup of milk in the microwave

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_dvd_player_2061_around_tvstand_225(dvd_player:item):
    goal: not unknown(dvd_player)
    body:
        assert is_dvd_player(dvd_player)
        bind tvstand_instance:item where:
            is_tvstand(tvstand_instance) and id[tvstand_instance]==225
        achieve close_char(char,tvstand_instance)
        if can_open(tvstand_instance):
            achieve_once open(tvstand_instance)
            exp(dvd_player,tvstand_instance)
        else:
            exp(dvd_player,tvstand_instance)
    eff:
        unknown[dvd_player]=False
        close[dvd_player,tvstand_instance]=True
        close[tvstand_instance,dvd_player]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_milk_in_microwave(cup_of_milk:item, microwave:item):
    body:
        achieve inside(cup_of_milk, microwave)
        # Place the cup of milk inside the microwave
        achieve closed(microwave)
        # Ensure the microwave is closed
        achieve is_on(microwave)
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup_of_milk: item where:
            is_cup(cup_of_milk) and is_milk(cup_of_milk)
        # Select the cup with milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select the microwave

        heat_milk_in_microwave(cup_of_milk, microwave)

#goal_representation_end

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "2. heat the cup of milk in the microwave." ?
Answer: Put the cup inside the microwave and turn the microwave on to heat.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior heat_milk_in_microwave(cup_of_milk: item, microwave: item):
    body:
        achieve inside(cup_of_milk, microwave)
        # Place the cup of milk inside the microwave

        achieve is_on(microwave)
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup_of_milk: item where:
            is_cup(cup_of_milk) and is_food_milk(cup_of_milk)
        # Select the cup containing milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select the microwave

        heat_milk_in_microwave(cup_of_milk, microwave)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

'Function is_food_milk not found. Note that recursive function calls are not supported in the current version.'
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
behavior heat_milk_in_microwave(cup_of_milk: item, microwave: item):
    body:
        achieve inside(cup_of_milk, microwave)
        # Place the cup of milk inside the microwave

        achieve is_on(microwave)
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup_of_milk: item where:
            is_cup(cup_of_milk) and is_food(cup_of_milk) and is_milk(cup_of_milk)
        # Select the cup containing milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select the microwave

        heat_milk_in_microwave(cup_of_milk, microwave)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_plate_1000_around_tray_296(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind tray_instance:item where:
            is_tray(tray_instance) and id[tray_instance]==296
        achieve close_char(char,tray_instance)
        if can_open(tray_instance):
            achieve_once open(tray_instance)
            exp(plate,tray_instance)
        else:
            exp(plate,tray_instance)
    eff:
        unknown[plate]=False
        close[plate,tray_instance]=True
        close[tray_instance,plate]=True
    

#exp_behavior_end

#goal_representation
 
behavior heat_milk_in_microwave(milk:item, microwave:item):
    body:
        achieve inside(milk, microwave) 
        # Place the milk inside the microwave
        achieve is_on(microwave) 
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk) and inside(milk, cup_2063)
        # Select the milk inside cup_2063

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        heat_milk_in_microwave(milk, microwave)
        # Heat the milk by using the microwave

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: cup_2063; available variables: [Variable<milk: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
behavior heat_milk_in_microwave(milk:item, microwave:item):
    body:
        achieve inside(milk, microwave) 
        # Place the milk inside the microwave
        achieve is_on(microwave) 
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind milk: item where:
            is_milk(milk) and inside(milk, cup)
        # Select the milk inside a cup

        bind cup: item where:
            is_cup(cup) and inside(milk, cup)
        # Select the cup containing milk

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        heat_milk_in_microwave(milk, microwave)
        # Heat the milk by using the microwave
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: cup; available variables: [Variable<milk: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
behavior heat_milk_in_microwave(milk:item, microwave:item):
    body:
        achieve inside(milk, microwave) 
        # Place the milk inside the microwave
        achieve is_on(microwave) 
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind milk: item where:
            is_milk(milk) and inside(milk, cup)
        # Select the milk inside the cup

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        heat_milk_in_microwave(milk, microwave)
        # Heat the milk by using the microwave
#goal_representation_end

##############################
From agent.py->reset_sub_goal
behavior heat_milk_in_microwave(milk:item, microwave:item):
    body:
        achieve inside(milk, microwave) 
        # Place the milk inside the microwave
        achieve is_on(microwave) 
        # Turn on the microwave to heat the milk

behavior __goal__():
    body:
        bind cup: item where:
            is_cup(cup)
        # Select a cup

        bind milk: item where:
            is_milk(milk) and inside(milk, cup)
        # Select the milk inside the cup

        bind microwave: item where:
            is_microwave(microwave)
        # Select a microwave

        heat_milk_in_microwave(milk, microwave)
        # Heat the milk by using the microwave
##############################
From agent.py-> find a plan in act()
walk_executor(microwave_297)switchoff_executor(microwave_297)open_executor(microwave_297)walk_executor(milk_2043)grab_executor(milk_2043)walk_executor(microwave_297)putin_executor(milk_2043, microwave_297)close_executor(microwave_297)switchon_executor(microwave_297)
##############################
From agent.py
walk_executor(microwave_297)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close microwave_297. Robot is no longer close milk_2043.Robot is no longer close cup_2063.
##############################
From agent.py
switchoff_executor(microwave_297)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close microwave_297. 
##############################
From agent.py
open_executor(microwave_297)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close microwave_297. 
##############################
From agent.py
walk_executor(milk_2043)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close cup_2063. Robot is no longer close microwave_297.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
grab_executor(milk_2043)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close cup_2063. Grabbing milk_2043 by right hand. 
##############################
From agent.py
walk_executor(microwave_297)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close microwave_297. Robot is close kitchen_counter_230. Robot is no longer close cup_2063.
##############################
From agent.py
putin_executor(milk_2043, microwave_297)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close microwave_297. Robot is close kitchen_counter_230. milk_2043 released by right hand. 
##############################
From agent.py
close_executor(microwave_297)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close microwave_297. Robot is close kitchen_counter_230. 
##############################
From agent.py
switchon_executor(microwave_297)
Robot is inside dining_room_201. Robot is close milk_2043. Robot is close microwave_297. Robot is close kitchen_counter_230. 
##############################
