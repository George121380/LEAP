From agent.py
Reset goals: The sub-goals are: 
['Scramble the egg using the frying pan.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_fryingpan_2083_around_kitchen_counter_230(fryingpan:item):
    goal: not unknown(fryingpan)
    body:
        assert is_fryingpan(fryingpan)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(fryingpan,kitchen_counter_instance)
        else:
            exp(fryingpan,kitchen_counter_instance)
    eff:
        unknown[fryingpan]=False
        close[fryingpan,kitchen_counter_instance]=True
        close[kitchen_counter_instance,fryingpan]=True
    

behavior find_food_food_2022_around_kitchen_counter_230(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==230
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_food,kitchen_counter_instance)
        else:
            exp(food_food,kitchen_counter_instance)
    eff:
        unknown[food_food]=False
        close[food_food,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_food]=True
    

behavior find_food_egg_2020_around_fridge_289(food_egg:item):
    goal: not unknown(food_egg)
    body:
        assert is_food_egg(food_egg)
        bind fridge_instance:item where:
            is_fridge(fridge_instance) and id[fridge_instance]==289
        achieve close_char(char,fridge_instance)
        if can_open(fridge_instance):
            achieve_once open(fridge_instance)
            exp(food_egg,fridge_instance)
        else:
            exp(food_egg,fridge_instance)
    eff:
        unknown[food_egg]=False
        close[food_egg,fridge_instance]=True
        close[fridge_instance,food_egg]=True
    

#exp_behavior_end

#goal_representation
 
behavior scramble_egg_in_fryingpan(egg:item, fryingpan:item):
    body:
        achieve on(egg, fryingpan)
        # Ensure the egg is in the frying pan

behavior heat_fryingpan(fryingpan:item, stove:item):
    body:
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove
        achieve is_on(stove)
        # Turn on the stove to heat the frying pan

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg to scramble

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        heat_fryingpan(fryingpan, stove)
        scramble_egg_in_fryingpan(egg, fryingpan)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior scramble_egg_in_fryingpan(egg:item, fryingpan:item):
    body:
        achieve on(egg, fryingpan)
        # Ensure the egg is in the frying pan

behavior heat_fryingpan(fryingpan:item, stove:item):
    body:
        achieve on(fryingpan, stove)
        # Place the frying pan on the stove
        achieve is_on(stove)
        # Turn on the stove to heat the frying pan

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg)
        # Select an egg to scramble

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select a frying pan

        bind stove: item where:
            is_stove(stove)
        # Select a stove

        heat_fryingpan(fryingpan, stove)
        scramble_egg_in_fryingpan(egg, fryingpan)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_230)exp(fryingpan_2083, kitchen_counter_230)walk_executor(fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_egg_2020, fridge_289)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(fryingpan_2083)put_executor(food_egg_2020, fryingpan_2083)
##############################
From agent.py
walk_executor(kitchen_counter_230)
Find pot_2069. Find cup_2063. Find knife_2050. Find napkin_2005. Find cup_2064. Find cutting_board_2051. Find oil_2079. Find fryingpan_2083. Find tray_296. Find drawing_239. Find drawing_238. Find drawing_240. Find drawing_241. Find drawing_242. Find drawing_243. Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is no longer inside bathroom_1.
##############################
From agent.py
exp(fryingpan_2083, kitchen_counter_230)
Find fryingpan_2083. 
##############################
From agent.py-> find a plan in act()
walk_executor(fryingpan_2083)grab_executor(fryingpan_2083)walk_executor(stove_2065)put_executor(fryingpan_2083, stove_2065)switchon_executor(stove_2065)walk_executor(fridge_289)switchoff_executor(fridge_289)open_executor(fridge_289)exp(food_egg_2020, fridge_289)walk_executor(food_egg_2020)grab_executor(food_egg_2020)walk_executor(fryingpan_2083)put_executor(food_egg_2020, fryingpan_2083)
##############################
From agent.py
walk_executor(fryingpan_2083)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close fryingpan_2083. 
##############################
From agent.py
grab_executor(fryingpan_2083)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close fryingpan_2083. Grabbing fryingpan_2083 by right hand. 
##############################
From agent.py
walk_executor(stove_2065)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close fryingpan_2083. Robot is close stove_2065. 
##############################
From agent.py
put_executor(fryingpan_2083, stove_2065)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close fryingpan_2083. Robot is close stove_2065. fryingpan_2083 released by right hand. 
##############################
From agent.py
switchon_executor(stove_2065)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close fryingpan_2083. Robot is close stove_2065. 
##############################
From agent.py
walk_executor(fridge_289)
Find sauce_2078. Find food_steak_2008. Find food_apple_2009. Find food_bacon_2010. Find food_banana_2011. Find food_bread_2012. Find food_cake_2013. Find food_carrot_2014. Find food_cereal_2015. Find food_cheese_2016. Find food_chicken_2017. Find food_dessert_2018. Find food_donut_2019. Find food_egg_2020. Find food_fish_2021. Find food_food_2022. Find food_fruit_2023. Find food_hamburger_2024. Find food_ice_cream_2025. Find food_jam_2026. Find food_kiwi_2027. Find food_lemon_2028. Find food_noodles_2029. Find food_oatmeal_2030. Find food_orange_2031. Find food_onion_2032. Find food_peanut_butter_2033. Find food_pizza_2034. Find food_potato_2035. Find food_rice_2036. Find food_salt_2037. Find food_snack_2038. Find food_sugar_2039. Find food_turkey_2040. Find food_vegetable_2041. Find dry_pasta_2042. Find milk_2043. Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Robot is no longer close stove_2065.Robot is no longer close fryingpan_2083.Robot is no longer close kitchen_counter_230.
##############################
From agent.py
switchoff_executor(fridge_289)
Find mat_22. Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
open_executor(fridge_289)
Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. 
##############################
From agent.py
exp(food_egg_2020, fridge_289)
Find food_egg_2020. 
##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2020)walk_executor(fryingpan_2083)put_executor(food_egg_2020, fryingpan_2083)
##############################
From agent.py
grab_executor(food_egg_2020)
Robot is inside dining_room_201. Robot is close sauce_2078. Robot is close fridge_289. Robot is close floor_202. Robot is close floor_203. Robot is close food_steak_2008. Robot is close food_apple_2009. Robot is close food_bacon_2010. Robot is close food_banana_2011. Robot is close food_bread_2012. Robot is close food_cake_2013. Robot is close food_carrot_2014. Robot is close food_cereal_2015. Robot is close food_cheese_2016. Robot is close food_chicken_2017. Robot is close food_dessert_2018. Robot is close food_donut_2019. Robot is close food_egg_2020. Robot is close food_fish_2021. Robot is close food_food_2022. Robot is close food_fruit_2023. Robot is close food_hamburger_2024. Robot is close food_ice_cream_2025. Robot is close food_jam_2026. Robot is close food_kiwi_2027. Robot is close food_lemon_2028. Robot is close food_noodles_2029. Robot is close food_oatmeal_2030. Robot is close food_orange_2031. Robot is close food_onion_2032. Robot is close food_peanut_butter_2033. Robot is close food_pizza_2034. Robot is close food_potato_2035. Robot is close food_rice_2036. Robot is close food_salt_2037. Robot is close food_snack_2038. Robot is close food_sugar_2039. Robot is close food_turkey_2040. Robot is close food_vegetable_2041. Robot is close dry_pasta_2042. Robot is close milk_2043. Grabbing food_egg_2020 by right hand. 
##############################
From agent.py
walk_executor(fryingpan_2083)
Robot is inside dining_room_201. Robot is close food_egg_2020. Robot is close stove_2065. Robot is close fryingpan_2083. Robot is no longer close sauce_2078.Robot is no longer close fridge_289.Robot is no longer close floor_202.Robot is no longer close floor_203.Robot is no longer close food_steak_2008.Robot is no longer close food_apple_2009.Robot is no longer close food_bacon_2010.Robot is no longer close food_banana_2011.Robot is no longer close food_bread_2012.Robot is no longer close food_cake_2013.Robot is no longer close food_carrot_2014.Robot is no longer close food_cereal_2015.Robot is no longer close food_cheese_2016.Robot is no longer close food_chicken_2017.Robot is no longer close food_dessert_2018.Robot is no longer close food_donut_2019.Robot is no longer close food_fish_2021.Robot is no longer close food_food_2022.Robot is no longer close food_fruit_2023.Robot is no longer close food_hamburger_2024.Robot is no longer close food_ice_cream_2025.Robot is no longer close food_jam_2026.Robot is no longer close food_kiwi_2027.Robot is no longer close food_lemon_2028.Robot is no longer close food_noodles_2029.Robot is no longer close food_oatmeal_2030.Robot is no longer close food_orange_2031.Robot is no longer close food_onion_2032.Robot is no longer close food_peanut_butter_2033.Robot is no longer close food_pizza_2034.Robot is no longer close food_potato_2035.Robot is no longer close food_rice_2036.Robot is no longer close food_salt_2037.Robot is no longer close food_snack_2038.Robot is no longer close food_sugar_2039.Robot is no longer close food_turkey_2040.Robot is no longer close food_vegetable_2041.Robot is no longer close dry_pasta_2042.Robot is no longer close milk_2043.
##############################
From agent.py
put_executor(food_egg_2020, fryingpan_2083)
Robot is inside dining_room_201. Robot is close food_egg_2020. Robot is close stove_2065. Robot is close fryingpan_2083. food_egg_2020 released by right hand. 
##############################
From agent.py
Human Instruction: You need to scramble the egg in the frying pan. The egg has been placed on the frying pan, but the action to scramble it has not been performed.

The actions you have taken:
Action 1: Walk to kitchen_counter_230.
Action 2: look for fryingpan_2083 around kitchen_counter_230.
Action 3: Walk to fryingpan_2083.
Action 4: Grab fryingpan_2083.
Action 5: Walk to stove_2065.
Action 6: Put fryingpan_2083 on stove_2065.
Action 7: Switch on stove_2065.
Action 8: Walk to fridge_289.
Action 9: Switch off fridge_289.
Action 10: Open fridge_289.
Action 11: look for food_egg_2020 around fridge_289.
Action 12: Grab food_egg_2020.
Action 13: Walk to fryingpan_2083.
Action 14: Put food_egg_2020 on fryingpan_2083.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2070_around_washing_machine_2007(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior scramble_egg(egg:item, fryingpan:item):
    body:
        achieve cut(egg)
        # Achieve the state where the egg is scrambled

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and on(egg, fryingpan)
        # Select the egg on the fryingpan

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and on(fryingpan, stove_2065)
        # Select the fryingpan on the stove

        scramble_egg(egg, fryingpan)
        # Scramble the egg in the fryingpan

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: fryingpan; available variables: [Variable<egg: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_vacuum_cleaner_2070_around_ironing_board_2074(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2074
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(vacuum_cleaner,ironing_board_instance)
        else:
            exp(vacuum_cleaner,ironing_board_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,ironing_board_instance]=True
        close[ironing_board_instance,vacuum_cleaner]=True
    

#goal_representation

behavior scramble_egg(egg:item, fryingpan:item):
    body:
        achieve cut(egg)
        # Achieve the state where the egg is scrambled

behavior __goal__():
    body:
        bind fryingpan: item where:
            is_fryingpan(fryingpan) and on(fryingpan, stove_2065)
        # Select the fryingpan on the stove

        bind egg: item where:
            is_food_egg(egg) and on(egg, fryingpan)
        # Select the egg on the fryingpan

        scramble_egg(egg, fryingpan)
        # Scramble the egg in the fryingpan

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: stove_2065; available variables: [Variable<fryingpan: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

#goal_representation
 
behavior scramble_egg(egg:item, fryingpan:item, stove:item):
    body:
        achieve cut(egg)
        # Achieve the state where the egg is scrambled

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove) and id[stove] == 2065
        # Select the stove with ID 2065

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and on(fryingpan, stove)
        # Select the fryingpan on the stove

        bind egg: item where:
            is_food_egg(egg) and on(egg, fryingpan)
        # Select the egg on the fryingpan

        scramble_egg(egg, fryingpan, stove)
        # Scramble the egg in the fryingpan

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior scramble_egg(egg:item, fryingpan:item, stove:item):
    body:
        achieve cut(egg)
        # Achieve the state where the egg is scrambled

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove) and id[stove] == 2065
        # Select the stove with ID 2065

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and on(fryingpan, stove)
        # Select the fryingpan on the stove

        bind egg: item where:
            is_food_egg(egg) and on(egg, fryingpan)
        # Select the egg on the fryingpan

        scramble_egg(egg, fryingpan, stove)
        # Scramble the egg in the fryingpan

##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2020)walk_executor(cutting_board_2051)put_executor(food_egg_2020, cutting_board_2051)walk_executor(knife_2050)grab_executor(knife_2050)walk_executor(food_egg_2020)cut_executor(food_egg_2020)
##############################
From agent.py
grab_executor(food_egg_2020)
Robot is inside dining_room_201. Robot is close food_egg_2020. Robot is close stove_2065. Robot is close fryingpan_2083. Grabbing food_egg_2020 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2051)
Robot is inside dining_room_201. Robot is close food_egg_2020. Robot is close cutting_board_2051. Robot is close kitchen_counter_230. Robot is no longer close stove_2065.Robot is no longer close fryingpan_2083.
##############################
From agent.py
put_executor(food_egg_2020, cutting_board_2051)
Robot is inside dining_room_201. Robot is close food_egg_2020. Robot is close cutting_board_2051. Robot is close kitchen_counter_230. food_egg_2020 released by right hand. 
##############################
From agent.py
walk_executor(knife_2050)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close knife_2050. Robot is no longer close cutting_board_2051.Robot is no longer close food_egg_2020.
##############################
From agent.py
grab_executor(knife_2050)
Robot is inside dining_room_201. Robot is close kitchen_counter_230. Robot is close knife_2050. Grabbing knife_2050 by right hand. 
##############################
From agent.py
walk_executor(food_egg_2020)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close cutting_board_2051. Robot is close food_egg_2020. Robot is no longer close kitchen_counter_230.
##############################
From agent.py
cut_executor(food_egg_2020)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close cutting_board_2051. Robot is close food_egg_2020. 
##############################
From agent.py
Human Instruction: You need to return the cut egg back to the frying pan and then perform the action to scramble it using the frying pan.

The actions you have taken:
Action 1: Walk to kitchen_counter_230.
Action 2: look for fryingpan_2083 around kitchen_counter_230.
Action 3: Walk to fryingpan_2083.
Action 4: Grab fryingpan_2083.
Action 5: Walk to stove_2065.
Action 6: Put fryingpan_2083 on stove_2065.
Action 7: Switch on stove_2065.
Action 8: Walk to fridge_289.
Action 9: Switch off fridge_289.
Action 10: Open fridge_289.
Action 11: look for food_egg_2020 around fridge_289.
Action 12: Grab food_egg_2020.
Action 13: Walk to fryingpan_2083.
Action 14: Put food_egg_2020 on fryingpan_2083.
Action 15: Grab food_egg_2020.
Action 16: Walk to cutting_board_2051.
Action 17: Put food_egg_2020 on cutting_board_2051.
Action 18: Walk to knife_2050.
Action 19: Grab knife_2050.
Action 20: Walk to food_egg_2020.
Action 21: Cut food_egg_2020.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_182_around_bed_105(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==105
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_keyboard_415_around_mousepad_414(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind mousepad_instance:item where:
            is_mousepad(mousepad_instance) and id[mousepad_instance]==414
        achieve close_char(char,mousepad_instance)
        if can_open(mousepad_instance):
            achieve_once open(mousepad_instance)
            exp(keyboard,mousepad_instance)
        else:
            exp(keyboard,mousepad_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,mousepad_instance]=True
        close[mousepad_instance,keyboard]=True
    

#exp_behavior_end

#goal_representation
behavior scramble_egg_pan(egg:item, fryingpan:item):
    body:
        achieve cut(egg)
        achieve inside(egg, fryingpan)

behavior __goal__():
    body:
        bind fryingpan: item where:
            is_fryingpan(fryingpan) and on(fryingpan, stove_2065)
        # Bind the frying pan on the stove

        bind egg: item where:
            is_food_egg(egg) and on(egg, cutting_board_2051)
        # Bind the cut egg on the cutting board

        scramble_egg_pan(egg, fryingpan)
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: stove_2065; available variables: [Variable<fryingpan: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_plate_1000_around_cupboard_229(plate:item):
    goal: not unknown(plate)
    body:
        assert is_plate(plate)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(plate,cupboard_instance)
        else:
            exp(plate,cupboard_instance)
    eff:
        unknown[plate]=False
        close[plate,cupboard_instance]=True
        close[cupboard_instance,plate]=True
    

behavior find_fork_2080_around_cupboard_229(fork:item):
    goal: not unknown(fork)
    body:
        assert is_fork(fork)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==229
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(fork,cupboard_instance)
        else:
            exp(fork,cupboard_instance)
    eff:
        unknown[fork]=False
        close[fork,cupboard_instance]=True
        close[cupboard_instance,fork]=True
    

#goal_representation

behavior scramble_egg_pan(egg:item, fryingpan:item):
    body:
        achieve cut(egg)
        achieve inside(egg, fryingpan)

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove) and id[stove]==2065
        # Bind the stove with ID 2065

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and on(fryingpan, stove)
        # Bind the frying pan on the stove

        bind egg: item where:
            is_food_egg(egg) and on(egg, cutting_board_2051)
        # Bind the cut egg on the cutting board

        scramble_egg_pan(egg, fryingpan)

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: cutting_board_2051; available variables: [Variable<egg: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_vacuum_cleaner_2070_around_washing_machine_2007(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind washing_machine_instance:item where:
            is_washing_machine(washing_machine_instance) and id[washing_machine_instance]==2007
        achieve close_char(char,washing_machine_instance)
        if can_open(washing_machine_instance):
            achieve_once open(washing_machine_instance)
            exp(vacuum_cleaner,washing_machine_instance)
        else:
            exp(vacuum_cleaner,washing_machine_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,washing_machine_instance]=True
        close[washing_machine_instance,vacuum_cleaner]=True
    

behavior find_cleaning_solution_2073_around_bathroom_cabinet_40(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==40
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

#goal_representation
behavior scramble_egg_pan(egg:item, fryingpan:item):
    body:
        achieve cut(egg)
        achieve inside(egg, fryingpan)

behavior __goal__():
    body:
        bind stove: item where:
            is_stove(stove) and id[stove]==2065
        # Bind the stove with ID 2065

        bind fryingpan: item where:
            is_fryingpan(fryingpan) and on(fryingpan, stove)
        # Bind the frying pan on the stove

        bind egg: item where:
            is_food_egg(egg) and on(egg, cutting_board)
        # Bind the cut egg on the cutting board

        bind cutting_board: item where:
            is_cutting_board(cutting_board) and on(egg, cutting_board)
        # Bind the cutting board with the egg on it

        scramble_egg_pan(egg, fryingpan)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_keyboard_168_around_desk_104(keyboard:item):
    goal: not unknown(keyboard)
    body:
        assert is_keyboard(keyboard)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==104
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(keyboard,desk_instance)
        else:
            exp(keyboard,desk_instance)
    eff:
        unknown[keyboard]=False
        close[keyboard,desk_instance]=True
        close[desk_instance,keyboard]=True
    

#exp_behavior_end

#goal_representation
 
behavior scramble_egg_in_fryingpan(egg: item, fryingpan: item):
    body:
        achieve on(egg, fryingpan)
        # Ensure the cut egg is on the frying pan
        achieve cut(egg)
        # Make sure the egg is cut before scrambling

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and cut(egg)
        # Select the cut egg

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan

        scramble_egg_in_fryingpan(egg, fryingpan)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior scramble_egg_in_fryingpan(egg: item, fryingpan: item):
    body:
        achieve on(egg, fryingpan)
        # Ensure the cut egg is on the frying pan
        achieve cut(egg)
        # Make sure the egg is cut before scrambling

behavior __goal__():
    body:
        bind egg: item where:
            is_food_egg(egg) and cut(egg)
        # Select the cut egg

        bind fryingpan: item where:
            is_fryingpan(fryingpan)
        # Select the frying pan

        scramble_egg_in_fryingpan(egg, fryingpan)

##############################
From agent.py-> find a plan in act()
grab_executor(food_egg_2020)walk_executor(fryingpan_2083)put_executor(food_egg_2020, fryingpan_2083)
##############################
From agent.py
grab_executor(food_egg_2020)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close cutting_board_2051. Robot is close food_egg_2020. Grabbing food_egg_2020 by left hand. 
##############################
From agent.py
walk_executor(fryingpan_2083)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close food_egg_2020. Robot is close stove_2065. Robot is close fryingpan_2083. Robot is no longer close cutting_board_2051.
##############################
From agent.py
put_executor(food_egg_2020, fryingpan_2083)
Robot is inside dining_room_201. Robot is close knife_2050. Robot is close food_egg_2020. Robot is close stove_2065. Robot is close fryingpan_2083. food_egg_2020 released by left hand. 
##############################
