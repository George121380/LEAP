From agent.py
Reset goals: The sub-goals are: 
['1. Find the book and put it on the table in the bedroom.', '2. Turn on the light in the bedroom.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_novel_2060_around_bookshelf_124(novel:item):
    goal: not unknown(novel)
    body:
        assert is_novel(novel)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(novel,bookshelf_instance)
        else:
            exp(novel,bookshelf_instance)
    eff:
        unknown[novel]=False
        close[novel,bookshelf_instance]=True
        close[bookshelf_instance,novel]=True
    

behavior find_book_2137_around_bookshelf_124(book:item):
    goal: not unknown(book)
    body:
        assert is_book(book)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==124
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(book,bookshelf_instance)
        else:
            exp(book,bookshelf_instance)
    eff:
        unknown[book]=False
        close[book,bookshelf_instance]=True
        close[bookshelf_instance,book]=True
    

behavior find_chair_271_around_table_270(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind table_instance:item where:
            is_table(table_instance) and id[table_instance]==270
        achieve close_char(char,table_instance)
        if can_open(table_instance):
            achieve_once open(table_instance)
            exp(chair,table_instance)
        else:
            exp(chair,table_instance)
    eff:
        unknown[chair]=False
        close[chair,table_instance]=True
        close[table_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_and_place_book_on_table(book: item, table: item):
    body:
        achieve on(book, table)
        # Place the book on the table in the bedroom

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select the book to be placed

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Define the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select the table in the bedroom

        find_and_place_book_on_table(book, table)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior find_and_place_book_on_table(book: item, table: item):
    body:
        achieve on(book, table)
        # Place the book on the table in the bedroom

behavior __goal__():
    body:
        bind book: item where:
            is_book(book)
        # Select the book to be placed

        bind bedroom: item where:
            is_bedroom(bedroom)
        # Define the bedroom

        bind table: item where:
            is_table(table) and inside(table, bedroom)
        # Select the table in the bedroom

        find_and_place_book_on_table(book, table)

##############################
From agent.py-> find a plan in act()
walk_executor(bookshelf_124)open_executor(bookshelf_124)exp(book_2136, bookshelf_124)walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_199)put_executor(book_2136, table_199)
##############################
From agent.py
walk_executor(bookshelf_124)
Find drawing_110. Find book_2136. Find envelope_2055. Find book_2137. Find drawing_111. Robot is inside dining_room_41. Robot is close floor_42. Robot is close floor_43. Robot is close bookshelf_124. 
##############################
From agent.py
open_executor(bookshelf_124)
Robot is inside dining_room_41. Robot is close floor_42. Robot is close floor_43. Robot is close bookshelf_124. 
##############################
From agent.py
exp(book_2136, bookshelf_124)
Find book_2136. 
##############################
From agent.py-> find a plan in act()
walk_executor(book_2136)grab_executor(book_2136)walk_executor(table_199)put_executor(book_2136, table_199)
##############################
From agent.py
walk_executor(book_2136)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2136. Robot is no longer close floor_42.Robot is no longer close floor_43.
##############################
From agent.py
grab_executor(book_2136)
Robot is inside dining_room_41. Robot is close bookshelf_124. Robot is close book_2136. Grabbing book_2136 by right hand. 
##############################
From agent.py
walk_executor(table_199)
Find mat_203. Find wooden_spoon_2000. Find drawing_201. Find drawing_202. Find tea_bag_2023. Robot is inside bedroom_162. Robot is close book_2136. Robot is close table_199. Robot is no longer inside dining_room_41.Robot is no longer close bookshelf_124.
##############################
From agent.py
put_executor(book_2136, table_199)
Robot is inside bedroom_162. Robot is close book_2136. Robot is close table_199. book_2136 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_pillow_207_around_bed_197(pillow:item):
    goal: not unknown(pillow)
    body:
        assert is_pillow(pillow)
        bind bed_instance:item where:
            is_bed(bed_instance) and id[bed_instance]==197
        achieve close_char(char,bed_instance)
        if can_open(bed_instance):
            achieve_once open(bed_instance)
            exp(pillow,bed_instance)
        else:
            exp(pillow,bed_instance)
    eff:
        unknown[pillow]=False
        close[pillow,bed_instance]=True
        close[bed_instance,pillow]=True
    

behavior find_phone_2147_around_nightstand_192(phone:item):
    goal: not unknown(phone)
    body:
        assert is_phone(phone)
        bind nightstand_instance:item where:
            is_nightstand(nightstand_instance) and id[nightstand_instance]==192
        achieve close_char(char,nightstand_instance)
        if can_open(nightstand_instance):
            achieve_once open(nightstand_instance)
            exp(phone,nightstand_instance)
        else:
            exp(phone,nightstand_instance)
    eff:
        unknown[phone]=False
        close[phone,nightstand_instance]=True
        close[nightstand_instance,phone]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_light_in_bedroom(light:item):
    body:
        achieve is_on(light)
        # Turn on the light in the bedroom

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Bind to the bedroom

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Bind to the light in the bedroom
        ensure_light_in_bedroom(bedroom_light)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior ensure_light_in_bedroom(light:item):
    body:
        achieve is_on(light)
        # Turn on the light in the bedroom

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        # Bind to the bedroom

        bind bedroom_light: item where:
            is_light(bedroom_light) and inside(bedroom_light, bedroom)
        # Bind to the light in the bedroom
        ensure_light_in_bedroom(bedroom_light)

##############################
From agent.py-> find a plan in act()
walk_executor(light_212)switchon_executor(light_212)
##############################
From agent.py
walk_executor(light_212)
Robot is inside bedroom_162. Robot is close light_212. Robot is no longer close book_2136.Robot is no longer close table_199.
##############################
From agent.py
switchon_executor(light_212)
Robot is inside bedroom_162. Robot is close light_212. 
##############################
