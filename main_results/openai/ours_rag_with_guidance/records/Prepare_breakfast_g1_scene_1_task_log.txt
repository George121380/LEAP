From agent.py
Reset goals: The sub-goals are: 
['Slice and toast the bread.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_knife_2122_around_knifeblock_76(knife:item):
    goal: not unknown(knife)
    body:
        assert is_knife(knife)
        bind knifeblock_instance:item where:
            is_knifeblock(knifeblock_instance) and id[knifeblock_instance]==76
        achieve close_char(char,knifeblock_instance)
        if can_open(knifeblock_instance):
            achieve_once open(knifeblock_instance)
            exp(knife,knifeblock_instance)
        else:
            exp(knife,knifeblock_instance)
    eff:
        unknown[knife]=False
        close[knife,knifeblock_instance]=True
        close[knifeblock_instance,knife]=True
    

behavior find_food_bread_2084_around_kitchen_counter_119(food_bread:item):
    goal: not unknown(food_bread)
    body:
        assert is_food_bread(food_bread)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(food_bread,kitchen_counter_instance)
        else:
            exp(food_bread,kitchen_counter_instance)
    eff:
        unknown[food_bread]=False
        close[food_bread,kitchen_counter_instance]=True
        close[kitchen_counter_instance,food_bread]=True
    

behavior find_cutting_board_2123_around_kitchen_counter_119(cutting_board:item):
    goal: not unknown(cutting_board)
    body:
        assert is_cutting_board(cutting_board)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==119
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(cutting_board,kitchen_counter_instance)
        else:
            exp(cutting_board,kitchen_counter_instance)
    eff:
        unknown[cutting_board]=False
        close[cutting_board,kitchen_counter_instance]=True
        close[kitchen_counter_instance,cutting_board]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_bread(bread:item, cutting_board:item):
    body:
        achieve cut(bread) 
        # Cut the bread into slices

behavior toast_bread(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Place the cut bread inside the toaster
        achieve is_on(toaster)
        # Turn on the toaster to toast the bread

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be cut and toasted

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select an available cutting board

        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster

        cut_bread(bread, cutting_board)
        toast_bread(bread, toaster)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior cut_bread(bread:item, cutting_board:item):
    body:
        achieve cut(bread) 
        # Cut the bread into slices

behavior toast_bread(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Place the cut bread inside the toaster
        achieve is_on(toaster)
        # Turn on the toaster to toast the bread

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be cut and toasted

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select an available cutting board

        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster

        cut_bread(bread, cutting_board)
        toast_bread(bread, toaster)

##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(food_bread_2084, kitchen_counter_119)exp(cutting_board_2123, kitchen_counter_119)walk_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(cutting_board_2123)put_executor(food_bread_2084, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_bread_2084)cut_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(toaster_132)putin_executor(food_bread_2084, toaster_132)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Find pot_2138. Find tray_128. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find pot_78. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. 
##############################
From agent.py
exp(food_bread_2084, kitchen_counter_119)
Fail to find food_bread_2084 around kitchen_counter_119. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_126)switchoff_executor(fridge_126)open_executor(fridge_126)exp(food_bread_2084, fridge_126)walk_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(cutting_board_2123)put_executor(food_bread_2084, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_bread_2084)cut_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(toaster_132)putin_executor(food_bread_2084, toaster_132)
##############################
From agent.py
walk_executor(fridge_126)
Find food_onion_2048. Find food_food_2046. Find food_food_2073. Find food_steak_2080. Find food_apple_2081. Find food_bacon_2082. Find food_banana_2083. Find food_cake_2085. Find food_carrot_2086. Find food_cereal_2087. Find food_cheese_2088. Find food_chicken_2089. Find food_dessert_2090. Find food_donut_2091. Find food_egg_2092. Find food_fish_2093. Find food_food_2094. Find food_fruit_2095. Find food_hamburger_2096. Find food_ice_cream_2097. Find food_jam_2098. Find food_kiwi_2099. Find food_lemon_2100. Find food_noodles_2101. Find food_oatmeal_2102. Find food_orange_2103. Find food_onion_2104. Find food_peanut_butter_2105. Find food_pizza_2106. Find food_potato_2107. Find food_rice_2108. Find food_salt_2109. Find food_snack_2110. Find food_sugar_2111. Find food_turkey_2112. Find food_vegetable_2113. Find food_food_2001. Find sauce_2148. Find basket_for_clothes_2078. Find food_food_1000. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. Robot is no longer close kitchen_counter_119.
##############################
From agent.py
switchoff_executor(fridge_126)
Find keyboard_211. Find mouse_213. Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
open_executor(fridge_126)
Robot is inside dining_room_41. Robot is close food_onion_2048. Robot is close food_food_2046. Robot is close food_food_2073. Robot is close food_steak_2080. Robot is close food_apple_2081. Robot is close food_bacon_2082. Robot is close food_banana_2083. Robot is close food_cake_2085. Robot is close food_carrot_2086. Robot is close food_cereal_2087. Robot is close food_cheese_2088. Robot is close food_chicken_2089. Robot is close food_dessert_2090. Robot is close food_donut_2091. Robot is close food_egg_2092. Robot is close food_fish_2093. Robot is close food_food_2094. Robot is close food_fruit_2095. Robot is close food_hamburger_2096. Robot is close food_ice_cream_2097. Robot is close food_jam_2098. Robot is close food_kiwi_2099. Robot is close food_lemon_2100. Robot is close food_noodles_2101. Robot is close food_oatmeal_2102. Robot is close food_orange_2103. Robot is close food_onion_2104. Robot is close food_peanut_butter_2105. Robot is close food_pizza_2106. Robot is close food_potato_2107. Robot is close food_rice_2108. Robot is close food_salt_2109. Robot is close food_snack_2110. Robot is close food_sugar_2111. Robot is close food_turkey_2112. Robot is close food_vegetable_2113. Robot is close food_food_2001. Robot is close floor_44. Robot is close sauce_2148. Robot is close fridge_126. 
##############################
From agent.py
exp(food_bread_2084, fridge_126)
Fail to find food_bread_2084 around fridge_126. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(food_bread_2084, cupboard_118)walk_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(cutting_board_2123)put_executor(food_bread_2084, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_bread_2084)cut_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(toaster_132)putin_executor(food_bread_2084, toaster_132)
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close food_onion_2048.Robot is no longer close food_food_2046.Robot is no longer close food_food_2073.Robot is no longer close food_steak_2080.Robot is no longer close food_apple_2081.Robot is no longer close food_bacon_2082.Robot is no longer close food_banana_2083.Robot is no longer close food_cake_2085.Robot is no longer close food_carrot_2086.Robot is no longer close food_cereal_2087.Robot is no longer close food_cheese_2088.Robot is no longer close food_chicken_2089.Robot is no longer close food_dessert_2090.Robot is no longer close food_donut_2091.Robot is no longer close food_egg_2092.Robot is no longer close food_fish_2093.Robot is no longer close food_food_2094.Robot is no longer close food_fruit_2095.Robot is no longer close food_hamburger_2096.Robot is no longer close food_ice_cream_2097.Robot is no longer close food_jam_2098.Robot is no longer close food_kiwi_2099.Robot is no longer close food_lemon_2100.Robot is no longer close food_noodles_2101.Robot is no longer close food_oatmeal_2102.Robot is no longer close food_orange_2103.Robot is no longer close food_onion_2104.Robot is no longer close food_peanut_butter_2105.Robot is no longer close food_pizza_2106.Robot is no longer close food_potato_2107.Robot is no longer close food_rice_2108.Robot is no longer close food_salt_2109.Robot is no longer close food_snack_2110.Robot is no longer close food_sugar_2111.Robot is no longer close food_turkey_2112.Robot is no longer close food_vegetable_2113.Robot is no longer close food_food_2001.Robot is no longer close floor_44.Robot is no longer close sauce_2148.Robot is no longer close fridge_126.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
exp(food_bread_2084, cupboard_118)
Fail to find food_bread_2084 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(food_bread_2084, cupboard_117)walk_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(cutting_board_2123)put_executor(food_bread_2084, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_bread_2084)cut_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(toaster_132)putin_executor(food_bread_2084, toaster_132)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
exp(food_bread_2084, cupboard_117)
Fail to find food_bread_2084 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_123)exp(food_bread_2084, kitchen_counter_123)walk_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(cutting_board_2123)put_executor(food_bread_2084, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_bread_2084)cut_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(toaster_132)putin_executor(food_bread_2084, toaster_132)
##############################
From agent.py
walk_executor(kitchen_counter_123)
Find oil_2149. Find knife_2035. Find food_kiwi_2054. Find food_orange_2027. Find tray_2068. Robot is inside dining_room_41. Robot is close kitchen_counter_123. Robot is close floor_45. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
exp(food_bread_2084, kitchen_counter_123)
Fail to find food_bread_2084 around kitchen_counter_123. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_122)exp(food_bread_2084, kitchen_counter_122)walk_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(cutting_board_2123)put_executor(food_bread_2084, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_bread_2084)cut_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(toaster_132)putin_executor(food_bread_2084, toaster_132)
##############################
From agent.py
walk_executor(kitchen_counter_122)
Find spectacles_2153. Find fryingpan_2154. Robot is inside dining_room_41. Robot is close kitchen_counter_122. Robot is no longer close kitchen_counter_123.Robot is no longer close floor_45.
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find food_bread_2084 ?
Answer: Go to dining_room_41. Locate table_114 and look inside it; you will find food_bread_2084 there.
Re-decompose: None

##############################
From agent.py
Human Instruction: Go to dining_room_41. Locate table_114 and look inside it; you will find food_bread_2084 there.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for food_bread_2084 around kitchen_counter_119.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_bread_2084 around fridge_126.
Action 7: Walk to cupboard_118.
Action 8: Open cupboard_118.
Action 9: look for food_bread_2084 around cupboard_118.
Action 10: Walk to cupboard_117.
Action 11: look for food_bread_2084 around cupboard_117.
Action 12: Walk to kitchen_counter_123.
Action 13: look for food_bread_2084 around kitchen_counter_123.
Action 14: Walk to kitchen_counter_122.

##############################
From agent.py
exp(food_bread_2084, kitchen_counter_122)
Fail to find food_bread_2084 around kitchen_counter_122. 
##############################
From agent.py-> find a plan in act()
walk_executor(table_114)exp(food_bread_2084, table_114)walk_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(cutting_board_2123)put_executor(food_bread_2084, cutting_board_2123)walk_executor(knifeblock_76)exp(knife_2122, knifeblock_76)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_bread_2084)cut_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(toaster_132)putin_executor(food_bread_2084, toaster_132)
##############################
From agent.py
walk_executor(table_114)
Find mat_102. Find dry_pasta_2114. Find food_food_2021. Find drawing_110. Find drawing_111. Find knife_2122. Find cup_2133. Find table_cloth_2005. Find food_bread_2084. Find pillow_104. Find cup_2049. Find box_2038. Find clothes_hat_2117. Find clothes_gloves_2118. Find milk_2115. Find pillow_103. Find pillow_105. Find pillow_106. Find lighter_2004. Find lighter_2039. Find cup_2134. Find check_2058. Find cup_2132. Robot is inside dining_room_41. Robot is close table_114. Robot is close mat_102. Robot is close floor_47. Robot is no longer close kitchen_counter_122.
##############################
From agent.py
exp(food_bread_2084, table_114)
Find food_bread_2084. 
##############################
From agent.py-> find a plan in act()
walk_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(cutting_board_2123)put_executor(food_bread_2084, cutting_board_2123)walk_executor(knife_2122)grab_executor(knife_2122)walk_executor(food_bread_2084)cut_executor(food_bread_2084)grab_executor(food_bread_2084)walk_executor(toaster_132)putin_executor(food_bread_2084, toaster_132)
##############################
From agent.py
walk_executor(food_bread_2084)
Robot is inside dining_room_41. Robot is close table_114. Robot is close food_bread_2084. Robot is no longer close mat_102.Robot is no longer close floor_47.
##############################
From agent.py
grab_executor(food_bread_2084)
Robot is inside dining_room_41. Robot is close table_114. Robot is close food_bread_2084. Grabbing food_bread_2084 by right hand. 
##############################
From agent.py
walk_executor(cutting_board_2123)
Robot is inside dining_room_41. Robot is close food_bread_2084. Robot is close cutting_board_2123. Robot is close kitchen_counter_119. Robot is no longer close table_114.
##############################
From agent.py
put_executor(food_bread_2084, cutting_board_2123)
Robot is inside dining_room_41. Robot is close food_bread_2084. Robot is close cutting_board_2123. Robot is close kitchen_counter_119. food_bread_2084 released by right hand. 
##############################
From agent.py
walk_executor(knife_2122)
Robot is inside dining_room_41. Robot is close knife_2122. Robot is close table_114. Robot is no longer close cutting_board_2123.Robot is no longer close food_bread_2084.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
grab_executor(knife_2122)
Robot is inside dining_room_41. Robot is close knife_2122. Robot is close table_114. Grabbing knife_2122 by right hand. 
##############################
From agent.py
walk_executor(food_bread_2084)
Robot is inside dining_room_41. Robot is close knife_2122. Robot is close cutting_board_2123. Robot is close food_bread_2084. Robot is no longer close table_114.
##############################
From agent.py
cut_executor(food_bread_2084)
Robot is inside dining_room_41. Robot is close knife_2122. Robot is close cutting_board_2123. Robot is close food_bread_2084. 
##############################
From agent.py
grab_executor(food_bread_2084)
Robot is inside dining_room_41. Robot is close knife_2122. Robot is close cutting_board_2123. Robot is close food_bread_2084. Grabbing food_bread_2084 by left hand. 
##############################
From agent.py
walk_executor(toaster_132)
Robot is inside dining_room_41. Robot is close knife_2122. Robot is close food_bread_2084. Robot is close kitchen_counter_122. Robot is close toaster_132. Robot is no longer close cutting_board_2123.
##############################
From agent.py
putin_executor(food_bread_2084, toaster_132)
Robot is inside dining_room_41. Robot is close knife_2122. Robot is close food_bread_2084. Robot is close kitchen_counter_122. Robot is close toaster_132. food_bread_2084 released by left hand. 
##############################
From agent.py
Human Instruction: You need to turn on the toaster to complete the toasting process for the bread.

The actions you have taken:
Action 1: Walk to kitchen_counter_119.
Action 2: look for food_bread_2084 around kitchen_counter_119.
Action 3: Walk to fridge_126.
Action 4: Switch off fridge_126.
Action 5: Open fridge_126.
Action 6: look for food_bread_2084 around fridge_126.
Action 7: Walk to cupboard_118.
Action 8: Open cupboard_118.
Action 9: look for food_bread_2084 around cupboard_118.
Action 10: Walk to cupboard_117.
Action 11: look for food_bread_2084 around cupboard_117.
Action 12: Walk to kitchen_counter_123.
Action 13: look for food_bread_2084 around kitchen_counter_123.
Action 14: Walk to kitchen_counter_122.
Action 15: look for food_bread_2084 around kitchen_counter_122.
Action 16: Walk to table_114.
Action 17: look for food_bread_2084 around table_114.
Action 18: Walk to food_bread_2084.
Action 19: Grab food_bread_2084.
Action 20: Walk to cutting_board_2123.
Action 21: Put food_bread_2084 on cutting_board_2123.
Action 22: Walk to knife_2122.
Action 23: Grab knife_2122.
Action 24: Walk to food_bread_2084.
Action 25: Cut food_bread_2084.
Action 26: Grab food_bread_2084.
Action 27: Walk to toaster_132.
Action 28: Put food_bread_2084 into toaster_132.

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior slice_bread(bread:item, knife:item, cutting_board:item):
    body:
        achieve cut(bread)
        # Ensure the bread is sliced

behavior toast_bread(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Put the bread inside the toaster to start toasting
        achieve is_on(toaster)
        # Turn the toaster on to toast the bread

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread) and on(bread, cutting_board_2123)
        # Select the bread placed on the cutting board
        
        bind knife: item where:
            is_knife(knife)
        # Select a knife for slicing

        bind cutting_board: item where:
            is_cutting_board(cutting_board) and on(bread, cutting_board)
        # Select a cutting board with the bread on it

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        slice_bread(bread, knife, cutting_board)
        toast_bread(bread, toaster)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_box_2038(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind box_instance:item where:
            is_box(box_instance) and id[box_instance]==2038
        achieve close_char(char,box_instance)
        if can_open(box_instance):
            achieve_once open(box_instance)
            exp(toy,box_instance)
        else:
            exp(toy,box_instance)
    eff:
        unknown[toy]=False
        close[toy,box_instance]=True
        close[box_instance,toy]=True
    

behavior find_food_food_2074_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

behavior find_food_food_2064_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior slice_bread(bread:item, knife:item):
    body:
        achieve cut(bread)
        # Cut the bread into slices

behavior toast_bread(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Put the bread inside the toaster
        achieve is_on(toaster)
        # Turn on the toaster to toast the bread

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be sliced and toasted

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        slice_bread(bread, knife)
        toast_bread(bread, toaster)

#goal_representation_end

##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "slice and toast the bread." ?
Answer: Cut the bread and put it in the toaster.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_box_2038(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind box_instance:item where:
            is_box(box_instance) and id[box_instance]==2038
        achieve close_char(char,box_instance)
        if can_open(box_instance):
            achieve_once open(box_instance)
            exp(toy,box_instance)
        else:
            exp(toy,box_instance)
    eff:
        unknown[toy]=False
        close[toy,box_instance]=True
        close[box_instance,toy]=True
    

#exp_behavior_end

#goal_representation
 
behavior slice_bread(bread:item, cutting_board:item, knife:item):
    body:
        achieve cut(bread) 
        # Goal to slice the bread

behavior toast_bread(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Put the sliced bread inside the toaster
        achieve is_on(toaster)
        # Turn on the toaster

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be sliced and toasted

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select an available cutting board

        bind knife: item where:
            is_knife(knife)
        # Select a knife

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        slice_bread(bread, cutting_board, knife)
        toast_bread(bread, toaster)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_box_2038(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind box_instance:item where:
            is_box(box_instance) and id[box_instance]==2038
        achieve close_char(char,box_instance)
        if can_open(box_instance):
            achieve_once open(box_instance)
            exp(toy,box_instance)
        else:
            exp(toy,box_instance)
    eff:
        unknown[toy]=False
        close[toy,box_instance]=True
        close[box_instance,toy]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_bread(bread:item, cutting_board:item, knife:item):
    body:
        achieve cut(bread) 
        # Goal to slice the bread

behavior toast_bread(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Place the bread slice inside the toaster
        achieve is_on(toaster)
        # Turn on the toaster to toast the bread

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be sliced

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select the cutting board

        bind knife: item where:
            is_knife(knife)
        # Select the knife

        bind toaster: item where:
            is_toaster(toaster) and has_switch(toaster)
        # Select the toaster

        cut_bread(bread, cutting_board, knife)
        toast_bread(bread, toaster)


#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['Cut the bread and put it in the toaster.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_box_2038(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind box_instance:item where:
            is_box(box_instance) and id[box_instance]==2038
        achieve close_char(char,box_instance)
        if can_open(box_instance):
            achieve_once open(box_instance)
            exp(toy,box_instance)
        else:
            exp(toy,box_instance)
    eff:
        unknown[toy]=False
        close[toy,box_instance]=True
        close[box_instance,toy]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_bread(bread:item, cutting_board:item):
    body:
        achieve cut(bread)
        # Cut the bread into slices

behavior place_bread_in_toaster(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Place the bread slices inside the toaster

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be sliced

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        cut_bread(bread, cutting_board)
        place_bread_in_toaster(bread, toaster)

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_box_2038(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind box_instance:item where:
            is_box(box_instance) and id[box_instance]==2038
        achieve close_char(char,box_instance)
        if can_open(box_instance):
            achieve_once open(box_instance)
            exp(toy,box_instance)
        else:
            exp(toy,box_instance)
    eff:
        unknown[toy]=False
        close[toy,box_instance]=True
        close[box_instance,toy]=True
    

behavior find_food_food_2064_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

behavior find_food_food_2001_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
 
behavior cut_bread(bread:item, knife:item):
    body:
        achieve cut(bread)
        # Cut the bread using the knife

behavior place_in_toaster(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Place the cut bread inside the toaster

behavior turn_on_toaster(toaster:item):
    body:
        achieve is_on(toaster)
        # Turn on the toaster

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be cut and toasted

        bind knife: item where:
            is_knife(knife)
        # Select a knife for cutting the bread

        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster

        cut_bread(bread, knife)
        place_in_toaster(bread, toaster)
        turn_on_toaster(toaster)

#goal_representation_end

##############################
From agent.py->reset_goal
Fail to generate the goal representation
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you teach me how to "cut the bread and put it in the toaster." ?
Answer: Cut the bread and put it in the toaster.
Re-decompose: False

##############################
Goal representation from planning.py

#exp_behavior

behavior find_food_food_2001_around_food_food_2021(food_food:item):
    goal: not unknown(food_food)
    body:
        assert is_food_food(food_food)
        bind food_food_instance:item where:
            is_food_food(food_food_instance) and id[food_food_instance]==2021
        achieve close_char(char,food_food_instance)
        if can_open(food_food_instance):
            achieve_once open(food_food_instance)
            exp(food_food,food_food_instance)
        else:
            exp(food_food,food_food_instance)
    eff:
        unknown[food_food]=False
        close[food_food,food_food_instance]=True
        close[food_food_instance,food_food]=True
    

#exp_behavior_end

#goal_representation
behavior cut_bread(bread:item, cutting_board:item):
    body:
        achieve cut(bread)

behavior place_in_toaster(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be cut

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select an available cutting board

        bind toaster: item where:
            is_toaster(toaster)
        # Select the toaster

        cut_bread(bread, cutting_board)
        place_in_toaster(bread, toaster)
#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior cut_bread(bread:item, cutting_board:item):
    body:
        achieve cut(bread)
        # Cut the bread into slices

behavior put_bread_in_toaster(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Place the bread slices inside the toaster

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be cut

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select a cutting board

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        cut_bread(bread, cutting_board)
        put_bread_in_toaster(bread, toaster)

#goal_representation_end

##############################
From agent.py
Reset goals: The sub-goals are: 
['Cut the bread and put it in the toaster.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_box_2038(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind box_instance:item where:
            is_box(box_instance) and id[box_instance]==2038
        achieve close_char(char,box_instance)
        if can_open(box_instance):
            achieve_once open(box_instance)
            exp(toy,box_instance)
        else:
            exp(toy,box_instance)
    eff:
        unknown[toy]=False
        close[toy,box_instance]=True
        close[box_instance,toy]=True
    

#exp_behavior_end

#goal_representation
behavior cut_bread(bread:item, cutting_board:item):
    body:
        achieve cut(bread)
        # Goal to cut the bread into slices

behavior place_bread_in_toaster(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Place the bread inside the toaster

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be cut

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select an available cutting board

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        observe(toaster, "Check if the toaster is plugged in")
        cut_bread(bread, cutting_board)
        place_bread_in_toaster(bread, toaster)
#goal_representation_end

##############################
From agent.py->reset_goal
behavior cut_bread(bread:item, cutting_board:item):
    body:
        achieve cut(bread)
        # Goal to cut the bread into slices

behavior place_bread_in_toaster(bread:item, toaster:item):
    body:
        achieve inside(bread, toaster)
        # Place the bread inside the toaster

behavior __goal__():
    body:
        bind bread: item where:
            is_food_bread(bread)
        # Select the bread to be cut

        bind cutting_board: item where:
            is_cutting_board(cutting_board)
        # Select an available cutting board

        bind toaster: item where:
            is_toaster(toaster)
        # Select a toaster

        observe(toaster, "Check if the toaster is plugged in")
        cut_bread(bread, cutting_board)
        place_bread_in_toaster(bread, toaster)
##############################
From agent.py-> find a plan in act()
obs(toaster_132, Check if the toaster is plugged in)
##############################
From agent.py
obs(toaster_132, Check if the toaster is plugged in)
Get this information:  toaster_132 is inside dining_room_41. food_bread_2084 is inside toaster_132. toaster_132 is on kitchen_counter_122. toaster_132 is close to tray_128. toaster_132 is close to dishwasher_129. toaster_132 is close to coffe_maker_130. toaster_132 is close to wall_64. toaster_132 is close to wall_68. toaster_132 is close to microwave_135. toaster_132 is close to walllamp_139. toaster_132 is close to walllamp_141. toaster_132 is close to pot_78. toaster_132 is close to floor_46. toaster_132 is close to floor_51. toaster_132 is close to cupboard_118. toaster_132 is close to ceiling_55. toaster_132 is close to kitchen_counter_122. toaster_132 is close to ceiling_60. toaster_132 is close to stovefan_125. toaster_132 is close to oven_127. toaster_132 is close to character_240. toaster_132 is close to food_bread_2084. toaster_132 is CLEAN. toaster_132 is ON. toaster_132 is PLUGGED_IN.
##############################
