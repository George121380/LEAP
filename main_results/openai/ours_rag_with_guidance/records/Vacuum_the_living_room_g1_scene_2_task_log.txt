From agent.py
Reset goals: The sub-goals are: 
['Vacuum the floor.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2094_around_kitchen_counter_132(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(vacuum_cleaner,kitchen_counter_instance)
        else:
            exp(vacuum_cleaner,kitchen_counter_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,kitchen_counter_instance]=True
        close[kitchen_counter_instance,vacuum_cleaner]=True
    

behavior find_mat_115_around_curtain_120(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind curtain_instance:item where:
            is_curtain(curtain_instance) and id[curtain_instance]==120
        achieve close_char(char,curtain_instance)
        if can_open(curtain_instance):
            achieve_once open(curtain_instance)
            exp(mat,curtain_instance)
        else:
            exp(mat,curtain_instance)
    eff:
        unknown[mat]=False
        close[mat,curtain_instance]=True
        close[curtain_instance,mat]=True
    

#exp_behavior_end

#goal_representation
 
behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select the vacuum cleaner

        bind floor: item where:
            is_floor(floor)
        # Select the floor

        achieve clean(floor)
        # Ensure the floor is vacuumed clean by achieving the clean state for the floor

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2094_around_ironing_board_2099(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind ironing_board_instance:item where:
            is_ironing_board(ironing_board_instance) and id[ironing_board_instance]==2099
        achieve close_char(char,ironing_board_instance)
        if can_open(ironing_board_instance):
            achieve_once open(ironing_board_instance)
            exp(vacuum_cleaner,ironing_board_instance)
        else:
            exp(vacuum_cleaner,ironing_board_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,ironing_board_instance]=True
        close[ironing_board_instance,vacuum_cleaner]=True
    

behavior find_mat_114_around_bathroom_counter_306(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind bathroom_counter_instance:item where:
            is_bathroom_counter(bathroom_counter_instance) and id[bathroom_counter_instance]==306
        achieve close_char(char,bathroom_counter_instance)
        if can_open(bathroom_counter_instance):
            achieve_once open(bathroom_counter_instance)
            exp(mat,bathroom_counter_instance)
        else:
            exp(mat,bathroom_counter_instance)
    eff:
        unknown[mat]=False
        close[mat,bathroom_counter_instance]=True
        close[bathroom_counter_instance,mat]=True
    

#exp_behavior_end

#goal_representation
behavior start_vacuuming(vacuum:item, floor:item):
    body:
        achieve clean(floor)
        # Aim to clean the floor using the vacuum cleaner

behavior __goal__():
    body:
        bind vacuum: item where:
            is_vacuum_cleaner(vacuum)
        # Select the vacuum cleaner to be used

        bind floor: item where:
            is_floor(floor)
        # Select the floor to be vacuumed
        
        start_vacuuming(vacuum, floor)
        # Start vacuuming the floor with the vacuum cleaner
#goal_representation_end

##############################
From agent.py->reset_goal
behavior start_vacuuming(vacuum:item, floor:item):
    body:
        achieve clean(floor)
        # Aim to clean the floor using the vacuum cleaner

behavior __goal__():
    body:
        bind vacuum: item where:
            is_vacuum_cleaner(vacuum)
        # Select the vacuum cleaner to be used

        bind floor: item where:
            is_floor(floor)
        # Select the floor to be vacuumed
        
        start_vacuuming(vacuum, floor)
        # Start vacuuming the floor with the vacuum cleaner
##############################
From agent.py-> find a plan in act()
walk_executor(floor_12)wash_executor(floor_12)
##############################
From agent.py
walk_executor(floor_12)
Robot is inside dining_room_1. Robot is close floor_12. Robot is no longer inside home_office_161.
##############################
From agent.py
wash_executor(floor_12)
Robot is inside dining_room_1. Robot is close floor_12. 
##############################
From agent.py
Human Instruction: You need to vacuum the floor. Ensure that you use a vacuum cleaner for this task, as washing the floor does not fulfill the requirement of vacuuming.

The actions you have taken:
Action 1: Walk to floor_12.
Action 2: Wash floor_12.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_vacuum_cleaner_2094_around_kitchen_counter_132(vacuum_cleaner:item):
    goal: not unknown(vacuum_cleaner)
    body:
        assert is_vacuum_cleaner(vacuum_cleaner)
        bind kitchen_counter_instance:item where:
            is_kitchen_counter(kitchen_counter_instance) and id[kitchen_counter_instance]==132
        achieve close_char(char,kitchen_counter_instance)
        if can_open(kitchen_counter_instance):
            achieve_once open(kitchen_counter_instance)
            exp(vacuum_cleaner,kitchen_counter_instance)
        else:
            exp(vacuum_cleaner,kitchen_counter_instance)
    eff:
        unknown[vacuum_cleaner]=False
        close[vacuum_cleaner,kitchen_counter_instance]=True
        close[kitchen_counter_instance,vacuum_cleaner]=True
    

#exp_behavior_end

#goal_representation
 
behavior vacuum_floor(vacuum_cleaner:item, floor:item):
    body:
        achieve is_on(vacuum_cleaner)
        # Turn on the vacuum cleaner
        achieve clean(floor)
        # Clean the floor with the vacuum cleaner

behavior turn_off_vacuum(vacuum_cleaner:item):
    body:
        achieve is_off(vacuum_cleaner)
        # Turn off the vacuum cleaner

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select the vacuum cleaner

        bind floor: item where:
            is_floor(floor) and dirty(floor)
        # Select the dirty floor

        vacuum_floor(vacuum_cleaner, floor)
        # Perform the vacuuming

        turn_off_vacuum(vacuum_cleaner)
        # Turn off the vacuum cleaner after the floor is clean
 
#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior vacuum_floor(vacuum_cleaner:item, floor:item):
    body:
        achieve is_on(vacuum_cleaner)
        # Turn on the vacuum cleaner
        achieve clean(floor)
        # Clean the floor with the vacuum cleaner

behavior turn_off_vacuum(vacuum_cleaner:item):
    body:
        achieve is_off(vacuum_cleaner)
        # Turn off the vacuum cleaner

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner)
        # Select the vacuum cleaner

        bind floor: item where:
            is_floor(floor) and dirty(floor)
        # Select the dirty floor

        vacuum_floor(vacuum_cleaner, floor)
        # Perform the vacuuming

        turn_off_vacuum(vacuum_cleaner)
        # Turn off the vacuum cleaner after the floor is clean
 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_132)exp(vacuum_cleaner_2094, kitchen_counter_132)walk_executor(vacuum_cleaner_2094)plugin_executor(vacuum_cleaner_2094)switchon_executor(vacuum_cleaner_2094)walk_executor(floor_13)wash_executor(floor_13)walk_executor(vacuum_cleaner_2094)switchoff_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(kitchen_counter_132)
Find pot_54. Find tray_142. Robot is inside dining_room_1. Robot is close kitchen_counter_132. Robot is no longer close floor_12.
##############################
From agent.py
exp(vacuum_cleaner_2094, kitchen_counter_132)
Fail to find vacuum_cleaner_2094 around kitchen_counter_132. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_128)exp(vacuum_cleaner_2094, kitchen_counter_128)walk_executor(vacuum_cleaner_2094)plugin_executor(vacuum_cleaner_2094)switchon_executor(vacuum_cleaner_2094)walk_executor(floor_13)wash_executor(floor_13)walk_executor(vacuum_cleaner_2094)switchoff_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(kitchen_counter_128)
Find spectacles_2106. Find cutting_board_2080. Find food_orange_2008. Robot is inside dining_room_1. Robot is close kitchen_counter_128. Robot is close floor_15. Robot is no longer close kitchen_counter_132.
##############################
From agent.py
exp(vacuum_cleaner_2094, kitchen_counter_128)
Fail to find vacuum_cleaner_2094 around kitchen_counter_128. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_131)open_executor(cupboard_131)exp(vacuum_cleaner_2094, cupboard_131)walk_executor(vacuum_cleaner_2094)plugin_executor(vacuum_cleaner_2094)switchon_executor(vacuum_cleaner_2094)walk_executor(floor_13)wash_executor(floor_13)walk_executor(vacuum_cleaner_2094)switchoff_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. Robot is no longer close kitchen_counter_128.Robot is no longer close floor_15.
##############################
From agent.py
open_executor(cupboard_131)
Robot is inside dining_room_1. Robot is close cupboard_131. 
##############################
From agent.py
exp(vacuum_cleaner_2094, cupboard_131)
Fail to find vacuum_cleaner_2094 around cupboard_131. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_130)exp(vacuum_cleaner_2094, cupboard_130)walk_executor(vacuum_cleaner_2094)plugin_executor(vacuum_cleaner_2094)switchon_executor(vacuum_cleaner_2094)walk_executor(floor_13)wash_executor(floor_13)walk_executor(vacuum_cleaner_2094)switchoff_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(cupboard_130)
Find blender_2032. Find tea_bag_2017. Robot is inside dining_room_1. Robot is close blender_2032. Robot is close tea_bag_2017. Robot is close cupboard_130. Robot is no longer close cupboard_131.
##############################
From agent.py
exp(vacuum_cleaner_2094, cupboard_130)
Fail to find vacuum_cleaner_2094 around cupboard_130. 
##############################
From agent.py-> find a plan in act()
walk_executor(fridge_140)switchoff_executor(fridge_140)open_executor(fridge_140)exp(vacuum_cleaner_2094, fridge_140)walk_executor(vacuum_cleaner_2094)plugin_executor(vacuum_cleaner_2094)switchon_executor(vacuum_cleaner_2094)walk_executor(floor_13)wash_executor(floor_13)walk_executor(vacuum_cleaner_2094)switchoff_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(fridge_140)
Find food_cereal_2048. Find food_cheese_2049. Find food_chicken_2050. Find food_dessert_2051. Find food_donut_2052. Find food_egg_2053. Find food_fish_2054. Find food_food_2055. Find food_fruit_2056. Find food_hamburger_2057. Find food_ice_cream_2058. Find food_jam_2059. Find food_kiwi_2060. Find food_lemon_2061. Find food_noodles_2062. Find food_oatmeal_2063. Find food_peanut_butter_2064. Find food_pizza_2065. Find food_potato_2066. Find food_rice_2067. Find food_salt_2068. Find food_snack_2069. Find food_sugar_2070. Find food_turkey_2071. Find food_vegetable_2072. Find dry_pasta_2073. Find milk_2074. Find sauce_2101. Find food_steak_2042. Find food_apple_2043. Find food_bacon_2044. Find food_banana_2045. Find food_cake_2046. Find food_carrot_2047. Find chair_138. Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. Robot is no longer close blender_2032.Robot is no longer close tea_bag_2017.Robot is no longer close cupboard_130.
##############################
From agent.py
switchoff_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
open_executor(fridge_140)
Robot is inside dining_room_1. Robot is close food_cereal_2048. Robot is close food_cheese_2049. Robot is close food_chicken_2050. Robot is close food_dessert_2051. Robot is close food_donut_2052. Robot is close food_egg_2053. Robot is close food_fish_2054. Robot is close food_food_2055. Robot is close food_fruit_2056. Robot is close food_hamburger_2057. Robot is close food_ice_cream_2058. Robot is close food_jam_2059. Robot is close fridge_140. Robot is close food_kiwi_2060. Robot is close food_lemon_2061. Robot is close food_noodles_2062. Robot is close food_oatmeal_2063. Robot is close food_peanut_butter_2064. Robot is close food_pizza_2065. Robot is close food_potato_2066. Robot is close food_rice_2067. Robot is close food_salt_2068. Robot is close food_snack_2069. Robot is close food_sugar_2070. Robot is close food_turkey_2071. Robot is close food_vegetable_2072. Robot is close dry_pasta_2073. Robot is close milk_2074. Robot is close floor_22. Robot is close sauce_2101. Robot is close food_steak_2042. Robot is close food_apple_2043. Robot is close food_bacon_2044. Robot is close food_banana_2045. Robot is close food_cake_2046. Robot is close food_carrot_2047. 
##############################
From agent.py
exp(vacuum_cleaner_2094, fridge_140)
Fail to find vacuum_cleaner_2094 around fridge_140. 
##############################
From agent.py-> find a plan in act()
walk_executor(washing_machine_2041)open_executor(washing_machine_2041)exp(vacuum_cleaner_2094, washing_machine_2041)walk_executor(vacuum_cleaner_2094)plugin_executor(vacuum_cleaner_2094)switchon_executor(vacuum_cleaner_2094)walk_executor(floor_13)wash_executor(floor_13)walk_executor(vacuum_cleaner_2094)switchoff_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close washing_machine_2041. Robot is no longer inside dining_room_1.Robot is no longer close food_cereal_2048.Robot is no longer close food_cheese_2049.Robot is no longer close food_chicken_2050.Robot is no longer close food_dessert_2051.Robot is no longer close food_donut_2052.Robot is no longer close food_egg_2053.Robot is no longer close food_fish_2054.Robot is no longer close food_food_2055.Robot is no longer close food_fruit_2056.Robot is no longer close food_hamburger_2057.Robot is no longer close food_ice_cream_2058.Robot is no longer close food_jam_2059.Robot is no longer close food_kiwi_2060.Robot is no longer close food_lemon_2061.Robot is no longer close food_noodles_2062.Robot is no longer close food_oatmeal_2063.Robot is no longer close food_peanut_butter_2064.Robot is no longer close food_pizza_2065.Robot is no longer close food_potato_2066.Robot is no longer close food_rice_2067.Robot is no longer close food_salt_2068.Robot is no longer close food_snack_2069.Robot is no longer close food_sugar_2070.Robot is no longer close food_turkey_2071.Robot is no longer close food_vegetable_2072.Robot is no longer close dry_pasta_2073.Robot is no longer close milk_2074.Robot is no longer close floor_22.Robot is no longer close sauce_2101.Robot is no longer close fridge_140.Robot is no longer close food_steak_2042.Robot is no longer close food_apple_2043.Robot is no longer close food_bacon_2044.Robot is no longer close food_banana_2045.Robot is no longer close food_cake_2046.Robot is no longer close food_carrot_2047.
##############################
From agent.py
open_executor(washing_machine_2041)
Robot is inside bathroom_265. Robot is close washing_machine_2041. 
##############################
From agent.py
Record from func query_LLM_human in agent.py
Question: Can you help me to find vacuum_cleaner_2094 ?
Answer: The vacuum_cleaner_2094 is located inside home_office_161. To find it, look near couch_192, as the vacuum cleaner is close to this couch.
Re-decompose: None

##############################
From agent.py
Human Instruction: You need to vacuum the floor. Ensure that you use a vacuum cleaner for this task, as washing the floor does not fulfill the requirement of vacuuming.
The vacuum_cleaner_2094 is located inside home_office_161. To find it, look near couch_192, as the vacuum cleaner is close to this couch.

The actions you have taken:
Action 1: Walk to floor_12.
Action 2: Wash floor_12.
Action 3: Walk to kitchen_counter_132.
Action 4: look for vacuum_cleaner_2094 around kitchen_counter_132.
Action 5: Walk to kitchen_counter_128.
Action 6: look for vacuum_cleaner_2094 around kitchen_counter_128.
Action 7: Walk to cupboard_131.
Action 8: Open cupboard_131.
Action 9: look for vacuum_cleaner_2094 around cupboard_131.
Action 10: Walk to cupboard_130.
Action 11: look for vacuum_cleaner_2094 around cupboard_130.
Action 12: Walk to fridge_140.
Action 13: Switch off fridge_140.
Action 14: Open fridge_140.
Action 15: look for vacuum_cleaner_2094 around fridge_140.
Action 16: Walk to washing_machine_2041.
Action 17: Open washing_machine_2041.

##############################
From agent.py
exp(vacuum_cleaner_2094, washing_machine_2041)
Fail to find vacuum_cleaner_2094 around washing_machine_2041. 
##############################
From agent.py-> find a plan in act()
walk_executor(couch_192)exp(vacuum_cleaner_2094, couch_192)walk_executor(vacuum_cleaner_2094)plugin_executor(vacuum_cleaner_2094)switchon_executor(vacuum_cleaner_2094)walk_executor(floor_13)wash_executor(floor_13)walk_executor(vacuum_cleaner_2094)switchoff_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(couch_192)
Find vacuum_cleaner_2094. Find cat_2082. Find pillow_195. Find drawing_196. Robot is inside home_office_161. Robot is close couch_192. Robot is no longer inside bathroom_265.Robot is no longer close washing_machine_2041.
##############################
From agent.py
exp(vacuum_cleaner_2094, couch_192)
Find vacuum_cleaner_2094. 
##############################
From agent.py-> find a plan in act()
walk_executor(vacuum_cleaner_2094)plugin_executor(vacuum_cleaner_2094)switchon_executor(vacuum_cleaner_2094)walk_executor(floor_13)wash_executor(floor_13)walk_executor(vacuum_cleaner_2094)switchoff_executor(vacuum_cleaner_2094)
##############################
From agent.py
walk_executor(vacuum_cleaner_2094)
Robot is inside home_office_161. Robot is close vacuum_cleaner_2094. Robot is no longer close couch_192.
##############################
From agent.py
plugin_executor(vacuum_cleaner_2094)
Robot is inside home_office_161. Robot is close vacuum_cleaner_2094. 
##############################
From agent.py
switchon_executor(vacuum_cleaner_2094)
Robot is inside home_office_161. Robot is close vacuum_cleaner_2094. 
##############################
From agent.py
walk_executor(floor_13)
Robot is inside dining_room_1. Robot is close floor_13. Robot is no longer inside home_office_161.Robot is no longer close vacuum_cleaner_2094.
##############################
From agent.py
wash_executor(floor_13)
Robot is inside dining_room_1. Robot is close floor_13. 
##############################
From agent.py
walk_executor(vacuum_cleaner_2094)
Robot is inside home_office_161. Robot is close vacuum_cleaner_2094. Robot is no longer inside dining_room_1.Robot is no longer close floor_13.
##############################
From agent.py
switchoff_executor(vacuum_cleaner_2094)
Robot is inside home_office_161. Robot is close vacuum_cleaner_2094. 
##############################
From agent.py
Human Instruction: You need to use the vacuum cleaner to clean the floor as instructed. The actions indicate floors were only washed, not vacuumed as required. Ensure you turn the vacuum cleaner back on and vacuum the floor directly with it.

The actions you have taken:
Action 1: Walk to floor_12.
Action 2: Wash floor_12.
Action 3: Walk to kitchen_counter_132.
Action 4: look for vacuum_cleaner_2094 around kitchen_counter_132.
Action 5: Walk to kitchen_counter_128.
Action 6: look for vacuum_cleaner_2094 around kitchen_counter_128.
Action 7: Walk to cupboard_131.
Action 8: Open cupboard_131.
Action 9: look for vacuum_cleaner_2094 around cupboard_131.
Action 10: Walk to cupboard_130.
Action 11: look for vacuum_cleaner_2094 around cupboard_130.
Action 12: Walk to fridge_140.
Action 13: Switch off fridge_140.
Action 14: Open fridge_140.
Action 15: look for vacuum_cleaner_2094 around fridge_140.
Action 16: Walk to washing_machine_2041.
Action 17: Open washing_machine_2041.
Action 18: look for vacuum_cleaner_2094 around washing_machine_2041.
Action 19: Walk to couch_192.
Action 20: look for vacuum_cleaner_2094 around couch_192.
Action 21: Walk to vacuum_cleaner_2094.
Action 22: Plug in vacuum_cleaner_2094.
Action 23: Switch on vacuum_cleaner_2094.
Action 24: Walk to floor_13.
Action 25: Wash floor_13.
Action 26: Walk to vacuum_cleaner_2094.
Action 27: Switch off vacuum_cleaner_2094.

##############################
Goal representation from planning.py

#exp_behavior

behavior find_cleaning_solution_2098_around_bathroom_cabinet_305(cleaning_solution:item):
    goal: not unknown(cleaning_solution)
    body:
        assert is_cleaning_solution(cleaning_solution)
        bind bathroom_cabinet_instance:item where:
            is_bathroom_cabinet(bathroom_cabinet_instance) and id[bathroom_cabinet_instance]==305
        achieve close_char(char,bathroom_cabinet_instance)
        if can_open(bathroom_cabinet_instance):
            achieve_once open(bathroom_cabinet_instance)
            exp(cleaning_solution,bathroom_cabinet_instance)
        else:
            exp(cleaning_solution,bathroom_cabinet_instance)
    eff:
        unknown[cleaning_solution]=False
        close[cleaning_solution,bathroom_cabinet_instance]=True
        close[bathroom_cabinet_instance,cleaning_solution]=True
    

behavior find_mat_201_around_mat_201(mat:item):
    goal: not unknown(mat)
    body:
        assert is_mat(mat)
        bind mat_instance:item where:
            is_mat(mat_instance) and id[mat_instance]==201
        achieve close_char(char,mat_instance)
        if can_open(mat_instance):
            achieve_once open(mat_instance)
            exp(mat,mat_instance)
        else:
            exp(mat,mat_instance)
    eff:
        unknown[mat]=False
        close[mat,mat_instance]=True
        close[mat_instance,mat]=True
    

behavior find_towel_2083_around_bathtub_297(towel:item):
    goal: not unknown(towel)
    body:
        assert is_towel(towel)
        bind bathtub_instance:item where:
            is_bathtub(bathtub_instance) and id[bathtub_instance]==297
        achieve close_char(char,bathtub_instance)
        if can_open(bathtub_instance):
            achieve_once open(bathtub_instance)
            exp(towel,bathtub_instance)
        else:
            exp(towel,bathtub_instance)
    eff:
        unknown[towel]=False
        close[towel,bathtub_instance]=True
        close[bathtub_instance,towel]=True
    

#exp_behavior_end

#goal_representation
 
behavior ensure_vacuum_cleaner_is_on(vacuum_cleaner:item):
    body:
        achieve is_on(vacuum_cleaner)

behavior clean_floor_with_vacuum_cleaner(vacuum_cleaner:item, floor:item):
    body:
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and plugged(vacuum_cleaner)
        # Select the vacuum cleaner that is plugged in

        bind floor: item where:
            is_floor(floor)
        # Select the floor to be cleaned

        ensure_vacuum_cleaner_is_on(vacuum_cleaner)
        clean_floor_with_vacuum_cleaner(vacuum_cleaner, floor)

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior ensure_vacuum_cleaner_is_on(vacuum_cleaner:item):
    body:
        achieve is_on(vacuum_cleaner)

behavior clean_floor_with_vacuum_cleaner(vacuum_cleaner:item, floor:item):
    body:
        achieve clean(floor)

behavior __goal__():
    body:
        bind vacuum_cleaner: item where:
            is_vacuum_cleaner(vacuum_cleaner) and plugged(vacuum_cleaner)
        # Select the vacuum cleaner that is plugged in

        bind floor: item where:
            is_floor(floor)
        # Select the floor to be cleaned

        ensure_vacuum_cleaner_is_on(vacuum_cleaner)
        clean_floor_with_vacuum_cleaner(vacuum_cleaner, floor)

##############################
From agent.py-> find a plan in act()
switchon_executor(vacuum_cleaner_2094)
##############################
From agent.py
switchon_executor(vacuum_cleaner_2094)
Robot is inside home_office_161. Robot is close vacuum_cleaner_2094. 
##############################
