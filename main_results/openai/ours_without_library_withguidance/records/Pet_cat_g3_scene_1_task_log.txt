From agent.py
Reset goals: The sub-goals are: 
['1. Fill a bowl with water and place it on the table in the home office.', '2. Find the cat and place it on the table in the home office.']
##############################
Goal representation from planning.py

#exp_behavior

behavior find_bowl_2140_around_cupboard_117(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_chair_194_around_desk_193(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#exp_behavior_end

#goal_representation
 
behavior fill_bowl_with_water(bowl: item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select an instance of a bowl

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        fill_bowl_with_water(bowl)
        # Fill the bowl with water

        place_bowl_on_table(bowl, table)
        # Place the bowl on the table inside the home office

#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "behavior_definition":

Unknown variable: home_office; available variables: [Variable<table: item>].
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_bowl_2140_around_cupboard_117(bowl:item):
    goal: not unknown(bowl)
    body:
        assert is_bowl(bowl)
        bind cupboard_instance:item where:
            is_cupboard(cupboard_instance) and id[cupboard_instance]==117
        achieve close_char(char,cupboard_instance)
        if can_open(cupboard_instance):
            achieve_once open(cupboard_instance)
            exp(bowl,cupboard_instance)
        else:
            exp(bowl,cupboard_instance)
    eff:
        unknown[bowl]=False
        close[bowl,cupboard_instance]=True
        close[cupboard_instance,bowl]=True
    

behavior find_chair_2003_around_desk_193(chair:item):
    goal: not unknown(chair)
    body:
        assert is_chair(chair)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==193
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(chair,desk_instance)
        else:
            exp(chair,desk_instance)
    eff:
        unknown[chair]=False
        close[chair,desk_instance]=True
        close[desk_instance,chair]=True
    

#goal_representation
behavior fill_bowl_with_water(bowl: item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select an instance of a bowl

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        fill_bowl_with_water(bowl)
        # Fill the bowl with water

        place_bowl_on_table(bowl, table)
        # Place the bowl on the table inside the home office
#goal_representation_end

##############################
From agent.py->reset_goal
behavior fill_bowl_with_water(bowl: item):
    body:
        achieve has_water(bowl)
        # Fill the bowl with water

behavior place_bowl_on_table(bowl: item, table: item):
    body:
        achieve on(bowl, table)
        # Place the bowl on the table

behavior __goal__():
    body:
        bind bowl: item where:
            is_bowl(bowl)
        # Select an instance of a bowl

        bind home_office: item where:
            is_home_office(home_office)

        bind table: item where:
            is_table(table) and inside(table, home_office)
        # Select a table inside the home office

        fill_bowl_with_water(bowl)
        # Fill the bowl with water

        place_bowl_on_table(bowl, table)
        # Place the bowl on the table inside the home office
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_117)exp(bowl_2140, cupboard_117)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(table_270)put_executor(bowl_2140, table_270)
##############################
From agent.py
walk_executor(cupboard_117)
Find coffee_filter_2053. Find tray_128. Find pot_78. Robot is inside dining_room_41. Robot is close coffee_filter_2053. Robot is close wall_67. Robot is close cupboard_117. 
##############################
From agent.py
exp(bowl_2140, cupboard_117)
Fail to find bowl_2140 around cupboard_117. 
##############################
From agent.py-> find a plan in act()
walk_executor(cupboard_118)open_executor(cupboard_118)exp(bowl_2140, cupboard_118)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(table_270)put_executor(bowl_2140, table_270)
##############################
From agent.py
walk_executor(cupboard_118)
Find tea_2066. Find knife_2037. Find food_peanut_butter_2077. Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. Robot is no longer close coffee_filter_2053.Robot is no longer close wall_67.Robot is no longer close cupboard_117.
##############################
From agent.py
open_executor(cupboard_118)
Robot is inside dining_room_41. Robot is close wall_68. Robot is close tea_2066. Robot is close knife_2037. Robot is close cupboard_118. Robot is close food_peanut_butter_2077. 
##############################
From agent.py
exp(bowl_2140, cupboard_118)
Fail to find bowl_2140 around cupboard_118. 
##############################
From agent.py-> find a plan in act()
walk_executor(kitchen_counter_119)exp(bowl_2140, kitchen_counter_119)walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(table_270)put_executor(bowl_2140, table_270)
##############################
From agent.py
walk_executor(kitchen_counter_119)
Find pot_2138. Find bowl_2141. Find plate_2152. Find cutting_board_2123. Find food_salt_2041. Find fork_2150. Find bowl_2140. Find bowl_2142. Find fork_2151. Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is no longer close wall_68.Robot is no longer close tea_2066.Robot is no longer close knife_2037.Robot is no longer close cupboard_118.Robot is no longer close food_peanut_butter_2077.
##############################
From agent.py
exp(bowl_2140, kitchen_counter_119)
Find bowl_2140. 
##############################
From agent.py-> find a plan in act()
walk_executor(bowl_2140)grab_executor(bowl_2140)walk_executor(faucet_20)switchon_executor(faucet_20)switchoff_executor(faucet_20)walk_executor(table_270)put_executor(bowl_2140, table_270)
##############################
From agent.py
walk_executor(bowl_2140)
Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is close bowl_2140. 
##############################
From agent.py
grab_executor(bowl_2140)
Robot is inside dining_room_41. Robot is close kitchen_counter_119. Robot is close bowl_2140. Grabbing bowl_2140 by right hand. 
##############################
From agent.py
walk_executor(faucet_20)
Find drawing_33. Find mat_32. Find phone_2029. Robot is inside bathroom_1. Robot is close bowl_2140. Robot is close bathroom_counter_18. Robot is close faucet_20. Robot is no longer inside dining_room_41.Robot is no longer close kitchen_counter_119.
##############################
From agent.py
switchon_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bowl_2140. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
switchoff_executor(faucet_20)
Robot is inside bathroom_1. Robot is close bowl_2140. Robot is close bathroom_counter_18. Robot is close faucet_20. 
##############################
From agent.py
walk_executor(table_270)
Find shampoo_2019. Find pillow_286. Find pencil_2014. Find pillow_287. Find brush_2002. Find drawing_288. Find shoes_2033. Find phone_2017. Robot is inside home_office_241. Robot is close bowl_2140. Robot is close couch_269. Robot is close table_270. Robot is no longer inside bathroom_1.Robot is no longer close bathroom_counter_18.Robot is no longer close faucet_20.
##############################
From agent.py
put_executor(bowl_2140, table_270)
Find check_2075. Find keyboard_278. Find blow_dryer_2057. Find stamp_2043. Find hanger_292. Find phone_2147. Find headset_2131. Find mat_284. Find cd_2145. Find stamp_2022. Find cat_2069. Find hanger_293. Find chair_271. Find cd_player_2129. Find clothes_pants_2036. Find remote_control_2124. Find pencil_2020. Find mouse_280. Find headset_2146. Find hanger_294. Find dvd_player_2130. Robot is inside home_office_241. Robot is close bowl_2140. Robot is close couch_269. Robot is close table_270. bowl_2140 released by right hand. 
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_blow_dryer_2057(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind blow_dryer_instance:item where:
            is_blow_dryer(blow_dryer_instance) and id[blow_dryer_instance]==2057
        achieve close_char(char,blow_dryer_instance)
        if can_open(blow_dryer_instance):
            achieve_once open(blow_dryer_instance)
            exp(toy,blow_dryer_instance)
        else:
            exp(toy,blow_dryer_instance)
    eff:
        unknown[toy]=False
        close[toy,blow_dryer_instance]=True
        close[blow_dryer_instance,toy]=True
    

#exp_behavior_end

#goal_representation
 
def is_home_office_room(room:item):
    # Check if the room is the home office
    symbol is_home_office_room=exists r: item : is_home_office(r) and id[r]==room
    return is_home_office_room

behavior lift_cat(cat:item):
    body:
        achieve_once inhand(cat)

behavior place_cat_on_table(cat:item, table:item):
    body:
        achieve on(cat, table)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat

        bind table: item where:
            is_table(table) and inside(table, home_office) 
        # Select a table inside the home office

        bind home_office: item where:
            is_home_office_room(home_office)
        # Select the home office

        lift_cat(cat)
        # Lift the cat

        place_cat_on_table(cat, table)
        # Place the cat on the table in the home office
 
#goal_representation_end

##############################
Inner TransformationError Debug
Error trying to process rule "function_definition":

Invalid comparison: id(V::r) vs V::room
##############################
Goal representation after debugging in planning.py
#exp_behavior

behavior find_toy_2056_around_blow_dryer_2057(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind blow_dryer_instance:item where:
            is_blow_dryer(blow_dryer_instance) and id[blow_dryer_instance]==2057
        achieve close_char(char,blow_dryer_instance)
        if can_open(blow_dryer_instance):
            achieve_once open(blow_dryer_instance)
            exp(toy,blow_dryer_instance)
        else:
            exp(toy,blow_dryer_instance)
    eff:
        unknown[toy]=False
        close[toy,blow_dryer_instance]=True
        close[blow_dryer_instance,toy]=True
    

#goal_representation
 
def is_home_office_room(room:item):
    # Check if the room is the home office
    symbol is_home_office_room=exists r: item : is_home_office(r) and r==room
    return is_home_office_room

behavior lift_cat(cat:item):
    body:
        achieve_once inhand(cat)

behavior place_cat_on_table(cat:item, table:item):
    body:
        achieve on(cat, table)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind table: item where:
            is_table(table) and inside(table, home_office) 
        # Select a table inside the home office

        lift_cat(cat)
        # Lift the cat

        place_cat_on_table(cat, table)
        # Place the cat on the table in the home office

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
def is_home_office_room(room:item):
    # Check if the room is the home office
    symbol is_home_office_room=exists r: item : is_home_office(r) and r==room
    return is_home_office_room

behavior lift_cat(cat:item):
    body:
        achieve_once inhand(cat)

behavior place_cat_on_table(cat:item, table:item):
    body:
        achieve on(cat, table)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select the cat

        bind home_office: item where:
            is_home_office(home_office)
        # Select the home office

        bind table: item where:
            is_table(table) and inside(table, home_office) 
        # Select a table inside the home office

        lift_cat(cat)
        # Lift the cat

        place_cat_on_table(cat, table)
        # Place the cat on the table in the home office

##############################
From agent.py-> find a plan in act()
walk_executor(cat_2069)grab_executor(cat_2069)walk_executor(table_270)put_executor(cat_2069, table_270)
##############################
From agent.py
walk_executor(cat_2069)
Robot is inside home_office_241. Robot is close dresser_274. Robot is close cat_2069. Robot is no longer close bowl_2140.Robot is no longer close couch_269.Robot is no longer close table_270.
##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_computer_276(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind computer_instance:item where:
            is_computer(computer_instance) and id[computer_instance]==276
        achieve close_char(char,computer_instance)
        if can_open(computer_instance):
            achieve_once open(computer_instance)
            exp(toy,computer_instance)
        else:
            exp(toy,computer_instance)
    eff:
        unknown[toy]=False
        close[toy,computer_instance]=True
        close[computer_instance,toy]=True
    

#exp_behavior_end

#goal_representation
 
behavior approach_cat(cat: item):
    body:
        achieve close_char(char, cat)

behavior place_cat_on_table(cat: item, table: item):
    body:
        achieve on(cat, table)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat)
        # Select an instance of the cat

        bind table: item where:
            is_table(table) and is_home_office(table)
        # Select the table in the home office

        approach_cat(cat)
        # Approach the cat

        place_cat_on_table(cat, table)
        # Place the cat on the table in the home office

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_toy_2056_around_bookshelf_275(toy:item):
    goal: not unknown(toy)
    body:
        assert is_toy(toy)
        bind bookshelf_instance:item where:
            is_bookshelf(bookshelf_instance) and id[bookshelf_instance]==275
        achieve close_char(char,bookshelf_instance)
        if can_open(bookshelf_instance):
            achieve_once open(bookshelf_instance)
            exp(toy,bookshelf_instance)
        else:
            exp(toy,bookshelf_instance)
    eff:
        unknown[toy]=False
        close[toy,bookshelf_instance]=True
        close[bookshelf_instance,toy]=True
    

behavior find_laser_pointer_2034_around_desk_272(laser_pointer:item):
    goal: not unknown(laser_pointer)
    body:
        assert is_laser_pointer(laser_pointer)
        bind desk_instance:item where:
            is_desk(desk_instance) and id[desk_instance]==272
        achieve close_char(char,desk_instance)
        if can_open(desk_instance):
            achieve_once open(desk_instance)
            exp(laser_pointer,desk_instance)
        else:
            exp(laser_pointer,desk_instance)
    eff:
        unknown[laser_pointer]=False
        close[laser_pointer,desk_instance]=True
        close[desk_instance,laser_pointer]=True
    

#exp_behavior_end

#goal_representation
 
behavior find_cat_and_place_on_table(cat: item, table: item):
    body:
        achieve on(cat, table)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat) and id[cat] == 2069
        # Select cat with ID 2069

        bind table: item where:
            is_table(table) and id[table] == 270
        # Select table with ID 270

        find_cat_and_place_on_table(cat, table)
        # Place cat on the table

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior find_cat_and_place_on_table(cat: item, table: item):
    body:
        achieve on(cat, table)

behavior __goal__():
    body:
        bind cat: item where:
            is_cat(cat) and id[cat] == 2069
        # Select cat with ID 2069

        bind table: item where:
            is_table(table) and id[table] == 270
        # Select table with ID 270

        find_cat_and_place_on_table(cat, table)
        # Place cat on the table

##############################
From agent.py-> find a plan in act()
open_executor(dresser_274)grab_executor(cat_2069)walk_executor(table_270)put_executor(cat_2069, table_270)
##############################
From agent.py
open_executor(dresser_274)
Robot is inside home_office_241. Robot is close dresser_274. Robot is close cat_2069. 
##############################
From agent.py
grab_executor(cat_2069)
Robot is inside home_office_241. Robot is close dresser_274. Robot is close cat_2069. Grabbing cat_2069 by right hand. 
##############################
From agent.py
walk_executor(table_270)
Robot is inside home_office_241. Robot is close cat_2069. Robot is close couch_269. Robot is close table_270. Robot is no longer close dresser_274.
##############################
From agent.py
put_executor(cat_2069, table_270)
Robot is inside home_office_241. Robot is close cat_2069. Robot is close couch_269. Robot is close table_270. cat_2069 released by right hand. 
##############################
