From agent.py
Reset goals: The sub-goals are: 
['1. Turn on the lights in the bedroom.  ', '2. Turn on the lights in the bathroom.']
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_light_in_bedroom(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        
        bind light: item where:
            is_light(light) and inside(light, bedroom)
        
        turn_on_light_in_bedroom(light)

#goal_representation_end

##############################
From agent.py->reset_goal
 
behavior turn_on_light_in_bedroom(light: item):
    body:
        achieve is_on(light)

behavior __goal__():
    body:
        bind bedroom: item where:
            is_bedroom(bedroom)
        
        bind light: item where:
            is_light(light) and inside(light, bedroom)
        
        turn_on_light_in_bedroom(light)

##############################
From agent.py-> find a plan in act()
walk_executor(light_258)switchon_executor(light_258)
##############################
From agent.py
walk_executor(light_258)
Find drawing_238. Robot is inside bedroom_220. Robot is close light_258. Robot is no longer inside home_office_161.
##############################
From agent.py
switchon_executor(light_258)
Find pillow_195. Find drawing_196. Robot is inside bedroom_220. Robot is close light_258. 
##############################
Goal representation from planning.py

#exp_behavior

#exp_behavior_end

#goal_representation
 
behavior turn_on_bathroom_light(bathroom_light: item):
    body:
        achieve is_on(bathroom_light)
        # Ensure the bathroom light is turned on

behavior __goal__():
    body:
        bind bathroom_light: item where:
            is_light(bathroom_light) and is_bathroom(bathroom_light)
        # Select the light instance in the bathroom

        turn_on_bathroom_light(bathroom_light)
        # Turn on the bathroom light

#goal_representation_end

##############################
Goal representation from planning.py

#exp_behavior

behavior find_soap_2037_around_shower_303(soap:item):
    goal: not unknown(soap)
    body:
        assert is_soap(soap)
        bind shower_instance:item where:
            is_shower(shower_instance) and id[shower_instance]==303
        achieve close_char(char,shower_instance)
        if can_open(shower_instance):
            achieve_once open(shower_instance)
            exp(soap,shower_instance)
        else:
            exp(soap,shower_instance)
    eff:
        unknown[soap]=False
        close[soap,shower_instance]=True
        close[shower_instance,soap]=True
    

#exp_behavior_end

#goal_representation
 
behavior turn_on_light_in_bathroom(light:item, bathroom:item):
    body:
        achieve inside(light, bathroom)
        # Ensure the light is located in the bathroom
        achieve is_on(light)
        # Turn the light on

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select an instance of a bathroom

        bind light: item where:
            is_light(light) and inside(light, bathroom)
        # Select an instance of a light that is inside a bathroom

        turn_on_light_in_bathroom(light, bathroom)
        # Turn on the light in the bathroom

#goal_representation_end

##############################
From agent.py->reset_sub_goal
 
behavior turn_on_light_in_bathroom(light:item, bathroom:item):
    body:
        achieve inside(light, bathroom)
        # Ensure the light is located in the bathroom
        achieve is_on(light)
        # Turn the light on

behavior __goal__():
    body:
        bind bathroom: item where:
            is_bathroom(bathroom)
        # Select an instance of a bathroom

        bind light: item where:
            is_light(light) and inside(light, bathroom)
        # Select an instance of a light that is inside a bathroom

        turn_on_light_in_bathroom(light, bathroom)
        # Turn on the light in the bathroom

##############################
From agent.py-> find a plan in act()
walk_executor(light_325)switchon_executor(light_325)
##############################
From agent.py
walk_executor(light_325)
Find mat_292. Find drawing_296. Robot is inside bathroom_265. Robot is close light_325. Robot is no longer inside bedroom_220.Robot is no longer close light_258.
##############################
From agent.py
switchon_executor(light_325)
Robot is inside bathroom_265. Robot is close light_325. 
##############################
